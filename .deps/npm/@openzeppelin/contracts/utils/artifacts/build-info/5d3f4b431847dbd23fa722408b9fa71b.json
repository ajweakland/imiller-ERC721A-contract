{
	"id": "5d3f4b431847dbd23fa722408b9fa71b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/imiltestTwo.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >0.8.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"./ERC721A.sol\";\n\ncontract imiltestTwo is Ownable, ERC721A, ReentrancyGuard {\n\n\n\n  using Strings for uint256;\n\n\n\n  string baseURI;\n\n  mapping (uint => string) claimURI;\n\n  string public baseExtension = \".json\";\n\n\n\n  uint256 public cost = 0.033 ether;\n\n  uint256 public maxSupply = 69;\n\n  uint256 public currentSet = 9;\n\n  uint256 public AllowlistLimit = 5;\n\n\n\n  bool public paused = false;\n\n\n\n  mapping (uint =>  bool) public claimActiveByPhase;\n\n  mapping (uint =>  mapping(uint => bool)) public claimedItemByPhase;\n\n  mapping (uint256 =>  uint) public claimPhaseByToken;\n\n\n\n\n\n  bool public onlyAllowlisted = false;\n\n  mapping(address => bool) public allowlist;\n\n  mapping(address => uint256) public addressMintedBalance;\n\n\n\n  constructor(\n\n    string memory _initBaseURI,\n\n    string memory _initClaimURI\n\n  ) ERC721A(\"imitest2\", \"IMI\") {\n\n    setBaseURI(_initBaseURI);\n\n    setClaimURI(_initClaimURI,1);\n\n  }\n\n\n\n  // internal\n\n  function _baseURI() internal view virtual override returns (string memory) {\n\n    return baseURI;\n\n  }\n\n\n\n  function _claimURI(uint claim) internal view virtual returns (string memory) {\n\n    return claimURI[claim];\n\n  }\n\n\n\n  // public\n\n  function mint(uint256 _mintAmount) public payable {\n\n    uint256 supply = totalSupply();\n\n    // add balanceOf?\n\n    require(!paused, \"WOAH hold up the mint is not yet live, a little too early there... or late? Transmission Ending\");\n\n    require(_mintAmount > 0, \"must mint at least 1 nft, 0 is not allowed. Transmission Ending\");\n\n    require(supply + _mintAmount <= currentSet, \"This set of shirts have been minted already, sorry.\");\n\n    require(supply + _mintAmount <= maxSupply, \"looks like we are popular max supply has been reached\");\n\n    \n\n\n\n    if (msg.sender != owner()) {\n\n        //max mint amount is 3\n\n        require(_mintAmount <= 1, \"only 1 at a time :) \");\n\n        if(onlyAllowlisted == true) {\n\n            require(isAllowlisted(msg.sender), \"Not Allowlisted\");\n\n            uint256 ownerMintedCount = addressMintedBalance[msg.sender];\n\n            require(ownerMintedCount + _mintAmount <= AllowlistLimit, \"Already minted\");\n\n        }\n\n        require(msg.value >= cost * _mintAmount, \"Cost doesn't match\");\n\n    }\n\n\n\n    _safeMint(msg.sender, _mintAmount);\n\n    addressMintedBalance[msg.sender] += _mintAmount;\n\n  }\n\n\n\n  function isAllowlisted(address _user) public view returns (bool) {\n\n    return allowlist[_user];\n\n  }\n\n\n\n  function tokenURI(uint256 tokenId)\n\n    public\n\n    view\n\n    virtual\n\n    override\n\n    returns (string memory)\n\n  {\n\n    require(\n\n      _exists(tokenId),\n\n      \"ERC721Metadata: URI query for nonexistent token\"\n\n    );\n\n\n\n    uint claimPhaseForToken = claimPhaseByToken[tokenId];\n\n\n\n    if(claimPhaseForToken > 0){\n\n        string memory currentClaimURI = _claimURI(claimPhaseForToken);\n\n        return bytes(currentClaimURI).length > 0\n\n        ? string(abi.encodePacked(currentClaimURI, tokenId.toString(), baseExtension))\n\n        : \"\";\n\n    }\n\n    else{\n\n        string memory currentBaseURI = _baseURI();\n\n        return bytes(currentBaseURI).length > 0\n\n        ? string(abi.encodePacked(currentBaseURI, tokenId.toString(), baseExtension))\n\n        : \"\";\n\n    }\n\n  }\n\n\n\n  function toggleClaim(bool _state, uint claim) public onlyOwner {\n\n    claimActiveByPhase[claim] = _state;\n\n  }\n\n\n\n  function claimItem(uint256 tokenId, uint claim) external {\n\n    require(ownerOf(tokenId) == msg.sender, \"sorry you are not the owner\");\n\n    require(claimActiveByPhase[claim], \"claim is not active yet\");\n\n    require(!claimedItemByPhase[tokenId][claim], \"already claimed!\");\n\n    claimedItemByPhase[tokenId][claim] = true;\n\n    claimPhaseByToken[tokenId] = claim;\n\n  }\n\n\n\n  function checkClaimed(uint256 tokenId, uint claim) external view returns (bool) {\n\n    return claimedItemByPhase[tokenId][claim];\n\n  }\n\n\n\n  function setBaseURI(string memory _newBaseURI) public onlyOwner {\n\n    baseURI = _newBaseURI;\n\n  }\n\n\n\n   function setClaimURI(string memory _newClaimURI, uint claim) public onlyOwner {\n\n    claimURI[claim] = _newClaimURI;\n\n  }\n\n\n\n  function setBaseExtension(string memory _newBaseExtension) public onlyOwner {\n\n    baseExtension = _newBaseExtension;\n\n  }\n\n\n\n  function setCurrentSetAmount(uint256 setTotal) external onlyOwner {\n\n    currentSet = setTotal;\n\n  }\n\n\n\n  function pause(bool _state) external onlyOwner {\n\n    paused = _state;\n\n  }\n\n\n\n  function setOnlyAllowlisted(bool _state) public onlyOwner {\n\n    onlyAllowlisted = _state;\n\n  }\n\n\n\n  function allowlistUsers(address[] calldata addresses) external onlyOwner {\n\n    for (uint256 i = 0; i < addresses.length; i++) {\n\n      allowlist[addresses[i]] = true;\n\n    }\n\n  }\n\n\n\n  function removeUsersFromAllowlist(address[] calldata addresses) external onlyOwner {\n\n    for (uint256 i = 0; i < addresses.length; i++) {\n\n      allowlist[addresses[i]] = false;\n\n    }\n\n  }\n\n\n\n  function ownerOfTokenIds(address tokenOwner) external view returns (uint256[] memory) {\n\n        uint256 supplyCurrent = totalSupply();\n\n        uint256[] memory result = new uint256[](balanceOf(tokenOwner));\n\n        uint256 counter = 0;\n\n        for (uint256 i = 0; i < supplyCurrent; i++) {\n\n            if (ownerOf(i) == tokenOwner) {\n\n                result[counter] = i;\n\n                counter++;\n\n            }\n\n        }\n\n        return result;\n\n    }\n\n \n\n  function withdraw() public payable onlyOwner {\n\n    payable(owner()).transfer(address(this).balance);\n\n  }\n\n\n\n\n\n}"
			},
			"contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v4.2.2\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\nimport './IERC721A.sol';\r\nimport '@openzeppelin/contracts/utils/Address.sol';\r\nimport '@openzeppelin/contracts/utils/Context.sol';\r\nimport '@openzeppelin/contracts/utils/Strings.sol';\r\n\r\n/**\r\n * @dev Interface of ERC721 token receiver.\r\n */\r\ninterface ERC721A__IERC721Receiver {\r\n    function onERC721Received(\r\n        address operator,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n\r\n/**\r\n * @title ERC721A\r\n *\r\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\r\n * Non-Fungible Token Standard, including the Metadata extension.\r\n * Optimized for lower gas during batch mints.\r\n *\r\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\r\n * starting from `_startTokenId()`.\r\n *\r\n * Assumptions:\r\n *\r\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\r\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\r\n */\r\ncontract ERC721A is IERC721A {\r\n    // Reference type for token approval.\r\n    struct TokenApprovalRef {\r\n        address value;\r\n    }\r\n\r\n    // =============================================================\r\n    //                           CONSTANTS\r\n    // =============================================================\r\n\r\n    // Mask of an entry in packed address data.\r\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\r\n\r\n    // The bit position of `numberMinted` in packed address data.\r\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\r\n\r\n    // The bit position of `numberBurned` in packed address data.\r\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\r\n\r\n    // The bit position of `aux` in packed address data.\r\n    uint256 private constant _BITPOS_AUX = 192;\r\n\r\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\r\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\r\n\r\n    // The bit position of `startTimestamp` in packed ownership.\r\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\r\n\r\n    // The bit mask of the `burned` bit in packed ownership.\r\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\r\n\r\n    // The bit position of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\r\n\r\n    // The bit mask of the `nextInitialized` bit in packed ownership.\r\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\r\n\r\n    // The bit position of `extraData` in packed ownership.\r\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\r\n\r\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\r\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\r\n\r\n    // The mask of the lower 160 bits for addresses.\r\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\r\n\r\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\r\n    // This limit is to prevent overflows on the address data entries.\r\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\r\n    // is required to cause an overflow, which is unrealistic.\r\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\r\n\r\n    // The `Transfer` event signature is given by:\r\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\r\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\r\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\r\n\r\n    // =============================================================\r\n    //                            STORAGE\r\n    // =============================================================\r\n\r\n    // The next token ID to be minted.\r\n    uint256 private _currentIndex;\r\n\r\n    // The number of tokens burned.\r\n    uint256 private _burnCounter;\r\n\r\n    // Token name\r\n    string private _name;\r\n\r\n    // Token symbol\r\n    string private _symbol;\r\n\r\n    // Mapping from token ID to ownership details\r\n    // An empty struct value does not necessarily mean the token is unowned.\r\n    // See {_packedOwnershipOf} implementation for details.\r\n    //\r\n    // Bits Layout:\r\n    // - [0..159]   `addr`\r\n    // - [160..223] `startTimestamp`\r\n    // - [224]      `burned`\r\n    // - [225]      `nextInitialized`\r\n    // - [232..255] `extraData`\r\n    mapping(uint256 => uint256) private _packedOwnerships;\r\n\r\n    // Mapping owner address to address data.\r\n    //\r\n    // Bits Layout:\r\n    // - [0..63]    `balance`\r\n    // - [64..127]  `numberMinted`\r\n    // - [128..191] `numberBurned`\r\n    // - [192..255] `aux`\r\n    mapping(address => uint256) private _packedAddressData;\r\n\r\n    // Mapping from token ID to approved address.\r\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\r\n\r\n    // Mapping from owner to operator approvals\r\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\r\n\r\n    // =============================================================\r\n    //                          CONSTRUCTOR\r\n    // =============================================================\r\n\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _currentIndex = _startTokenId();\r\n    }\r\n\r\n    // =============================================================\r\n    //                   TOKEN COUNTING OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the starting token ID.\r\n     * To change the starting token ID, please override this function.\r\n     */\r\n    function _startTokenId() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the next token ID to be minted.\r\n     */\r\n    function _nextTokenId() internal view virtual returns (uint256) {\r\n        return _currentIndex;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens in existence.\r\n     * Burned tokens will reduce the count.\r\n     * To get the total number of tokens minted, please see {_totalMinted}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        // Counter underflow is impossible as _burnCounter cannot be incremented\r\n        // more than `_currentIndex - _startTokenId()` times.\r\n        unchecked {\r\n            return _currentIndex - _burnCounter - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total amount of tokens minted in the contract.\r\n     */\r\n    function _totalMinted() internal view virtual returns (uint256) {\r\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\r\n        // and it is initialized to `_startTokenId()`.\r\n        unchecked {\r\n            return _currentIndex - _startTokenId();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens burned.\r\n     */\r\n    function _totalBurned() internal view virtual returns (uint256) {\r\n        return _burnCounter;\r\n    }\r\n\r\n    // =============================================================\r\n    //                    ADDRESS DATA OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in `owner`'s account.\r\n     */\r\n    function balanceOf(address owner) public view virtual override returns (uint256) {\r\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\r\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens minted by `owner`.\r\n     */\r\n    function _numberMinted(address owner) internal view returns (uint256) {\r\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of tokens burned by or on behalf of `owner`.\r\n     */\r\n    function _numberBurned(address owner) internal view returns (uint256) {\r\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\r\n    }\r\n\r\n    /**\r\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     */\r\n    function _getAux(address owner) internal view returns (uint64) {\r\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\r\n    }\r\n\r\n    /**\r\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\r\n     * If there are multiple variables, please pack them into a uint64.\r\n     */\r\n    function _setAux(address owner, uint64 aux) internal virtual {\r\n        uint256 packed = _packedAddressData[owner];\r\n        uint256 auxCasted;\r\n        // Cast `aux` with assembly to avoid redundant masking.\r\n        assembly {\r\n            auxCasted := aux\r\n        }\r\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\r\n        _packedAddressData[owner] = packed;\r\n    }\r\n\r\n    // =============================================================\r\n    //                            IERC165\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        // The interface IDs are constants representing the first 4 bytes\r\n        // of the XOR of all function selectors in the interface.\r\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\r\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\r\n        return\r\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\r\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\r\n    }\r\n\r\n    // =============================================================\r\n    //                        IERC721Metadata\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\r\n\r\n        string memory baseURI = _baseURI();\r\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\r\n    }\r\n\r\n    /**\r\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\r\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\r\n     * by default, it can be overridden in child contracts.\r\n     */\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return '';\r\n    }\r\n\r\n    // =============================================================\r\n    //                     OWNERSHIPS OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r\n        return address(uint160(_packedOwnershipOf(tokenId)));\r\n    }\r\n\r\n    /**\r\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\r\n     * It gradually moves to O(1) as tokens get transferred around over time.\r\n     */\r\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\r\n     */\r\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\r\n        return _unpackedOwnership(_packedOwnerships[index]);\r\n    }\r\n\r\n    /**\r\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\r\n     */\r\n    function _initializeOwnershipAt(uint256 index) internal virtual {\r\n        if (_packedOwnerships[index] == 0) {\r\n            _packedOwnerships[index] = _packedOwnershipOf(index);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the packed ownership data of `tokenId`.\r\n     */\r\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\r\n        uint256 curr = tokenId;\r\n\r\n        unchecked {\r\n            if (_startTokenId() <= curr)\r\n                if (curr < _currentIndex) {\r\n                    uint256 packed = _packedOwnerships[curr];\r\n                    // If not burned.\r\n                    if (packed & _BITMASK_BURNED == 0) {\r\n                        // Invariant:\r\n                        // There will always be an initialized ownership slot\r\n                        // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\r\n                        // before an unintialized ownership slot\r\n                        // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\r\n                        // Hence, `curr` will not underflow.\r\n                        //\r\n                        // We can directly compare the packed value.\r\n                        // If the address is zero, packed will be zero.\r\n                        while (packed == 0) {\r\n                            packed = _packedOwnerships[--curr];\r\n                        }\r\n                        return packed;\r\n                    }\r\n                }\r\n        }\r\n        revert OwnerQueryForNonexistentToken();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\r\n     */\r\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\r\n        ownership.addr = address(uint160(packed));\r\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\r\n        ownership.burned = packed & _BITMASK_BURNED != 0;\r\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\r\n    }\r\n\r\n    /**\r\n     * @dev Packs ownership data into a single uint256.\r\n     */\r\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\r\n        assembly {\r\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            owner := and(owner, _BITMASK_ADDRESS)\r\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\r\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\r\n     */\r\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\r\n        // For branchless setting of the `nextInitialized` flag.\r\n        assembly {\r\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\r\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                      APPROVAL OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the\r\n     * zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) public virtual override {\r\n        address owner = ownerOf(tokenId);\r\n\r\n        if (_msgSenderERC721A() != owner)\r\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\r\n                revert ApprovalCallerNotOwnerNorApproved();\r\n            }\r\n\r\n        _tokenApprovals[tokenId].value = to;\r\n        emit Approval(owner, to, tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\r\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\r\n\r\n        return _tokenApprovals[tokenId].value;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom}\r\n     * for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) public virtual override {\r\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\r\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r\n        return _operatorApprovals[owner][operator];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `tokenId` exists.\r\n     *\r\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\r\n     *\r\n     * Tokens start existing when they are minted. See {_mint}.\r\n     */\r\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\r\n        return\r\n            _startTokenId() <= tokenId &&\r\n            tokenId < _currentIndex && // If within bounds,\r\n            _packedOwnerships[tokenId] & _BITMASK_BURNED == 0; // and not burned.\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\r\n     */\r\n    function _isSenderApprovedOrOwner(\r\n        address approvedAddress,\r\n        address owner,\r\n        address msgSender\r\n    ) private pure returns (bool result) {\r\n        assembly {\r\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            owner := and(owner, _BITMASK_ADDRESS)\r\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\r\n            // `msgSender == owner || msgSender == approvedAddress`.\r\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\r\n     */\r\n    function _getApprovedSlotAndAddress(uint256 tokenId)\r\n        private\r\n        view\r\n        returns (uint256 approvedAddressSlot, address approvedAddress)\r\n    {\r\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\r\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\r\n        assembly {\r\n            approvedAddressSlot := tokenApproval.slot\r\n            approvedAddress := sload(approvedAddressSlot)\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                      TRANSFER OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token\r\n     * by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\r\n\r\n        // The nested ifs save around 20+ gas over a compound boolean condition.\r\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\r\n\r\n        if (to == address(0)) revert TransferToZeroAddress();\r\n\r\n        _beforeTokenTransfers(from, to, tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\r\n        unchecked {\r\n            // We can directly increment and decrement the balances.\r\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\r\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\r\n\r\n            // Updates:\r\n            // - `address` to the next owner.\r\n            // - `startTimestamp` to the timestamp of transfering.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `true`.\r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                to,\r\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, tokenId);\r\n        _afterTokenTransfers(from, to, tokenId, 1);\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual override {\r\n        safeTransferFrom(from, to, tokenId, '');\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token\r\n     * by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement\r\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) public virtual override {\r\n        transferFrom(from, to, tokenId);\r\n        if (to.code.length != 0)\r\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before a set of serially-ordered token IDs\r\n     * are about to be transferred. This includes minting.\r\n     * And also called before burning one token.\r\n     *\r\n     * `startTokenId` - the first token ID to be transferred.\r\n     * `quantity` - the amount to be transferred.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _beforeTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after a set of serially-ordered token IDs\r\n     * have been transferred. This includes minting.\r\n     * And also called after one token has been burned.\r\n     *\r\n     * `startTokenId` - the first token ID to be transferred.\r\n     * `quantity` - the amount to be transferred.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` has been minted for `to`.\r\n     * - When `to` is zero, `tokenId` has been burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _afterTokenTransfers(\r\n        address from,\r\n        address to,\r\n        uint256 startTokenId,\r\n        uint256 quantity\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\r\n     *\r\n     * `from` - Previous owner of the given token ID.\r\n     * `to` - Target address that will receive the token.\r\n     * `tokenId` - Token ID to be transferred.\r\n     * `_data` - Optional data to send along with the call.\r\n     *\r\n     * Returns whether the call correctly returned the expected magic value.\r\n     */\r\n    function _checkContractOnERC721Received(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory _data\r\n    ) private returns (bool) {\r\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\r\n            bytes4 retval\r\n        ) {\r\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\r\n        } catch (bytes memory reason) {\r\n            if (reason.length == 0) {\r\n                revert TransferToNonERC721ReceiverImplementer();\r\n            } else {\r\n                assembly {\r\n                    revert(add(32, reason), mload(reason))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                        MINT OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {Transfer} event for each mint.\r\n     */\r\n    function _mint(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are incredibly unrealistic.\r\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\r\n        // `tokenId` has a maximum limit of 2**256.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\r\n\r\n            // Updates:\r\n            // - `address` to the owner.\r\n            // - `startTimestamp` to the timestamp of minting.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `quantity == 1`.\r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            uint256 toMasked;\r\n            uint256 end = startTokenId + quantity;\r\n\r\n            // Use assembly to loop and emit the `Transfer` event for gas savings.\r\n            // The duplicated `log4` removes an extra check and reduces stack juggling.\r\n            // The assembly, together with the surrounding Solidity code, have been\r\n            // delicately arranged to nudge the compiler into producing optimized opcodes.\r\n            assembly {\r\n                // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\r\n                toMasked := and(to, _BITMASK_ADDRESS)\r\n                // Emit the `Transfer` event.\r\n                log4(\r\n                    0, // Start of data (0, since no data).\r\n                    0, // End of data (0, since no data).\r\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\r\n                    0, // `address(0)`.\r\n                    toMasked, // `to`.\r\n                    startTokenId // `tokenId`.\r\n                )\r\n\r\n                for {\r\n                    let tokenId := add(startTokenId, 1)\r\n                } iszero(eq(tokenId, end)) {\r\n                    tokenId := add(tokenId, 1)\r\n                } {\r\n                    // Emit the `Transfer` event. Similar to above.\r\n                    log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId)\r\n                }\r\n            }\r\n            if (toMasked == 0) revert MintToZeroAddress();\r\n\r\n            _currentIndex = end;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * This function is intended for efficient minting only during contract creation.\r\n     *\r\n     * It emits only one {ConsecutiveTransfer} as defined in\r\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\r\n     * instead of a sequence of {Transfer} event(s).\r\n     *\r\n     * Calling this function outside of contract creation WILL make your contract\r\n     * non-compliant with the ERC721 standard.\r\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\r\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * Emits a {ConsecutiveTransfer} event.\r\n     */\r\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\r\n        uint256 startTokenId = _currentIndex;\r\n        if (to == address(0)) revert MintToZeroAddress();\r\n        if (quantity == 0) revert MintZeroQuantity();\r\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\r\n\r\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\r\n\r\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance += quantity`.\r\n            // - `numberMinted += quantity`.\r\n            //\r\n            // We can directly add to the `balance` and `numberMinted`.\r\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\r\n\r\n            // Updates:\r\n            // - `address` to the owner.\r\n            // - `startTimestamp` to the timestamp of minting.\r\n            // - `burned` to `false`.\r\n            // - `nextInitialized` to `quantity == 1`.\r\n            _packedOwnerships[startTokenId] = _packOwnershipData(\r\n                to,\r\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\r\n            );\r\n\r\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\r\n\r\n            _currentIndex = startTokenId + quantity;\r\n        }\r\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\r\n    }\r\n\r\n    /**\r\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - If `to` refers to a smart contract, it must implement\r\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\r\n     * - `quantity` must be greater than 0.\r\n     *\r\n     * See {_mint}.\r\n     *\r\n     * Emits a {Transfer} event for each mint.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 quantity,\r\n        bytes memory _data\r\n    ) internal virtual {\r\n        _mint(to, quantity);\r\n\r\n        unchecked {\r\n            if (to.code.length != 0) {\r\n                uint256 end = _currentIndex;\r\n                uint256 index = end - quantity;\r\n                do {\r\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\r\n                        revert TransferToNonERC721ReceiverImplementer();\r\n                    }\r\n                } while (index < end);\r\n                // Reentrancy protection.\r\n                if (_currentIndex != end) revert();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\r\n     */\r\n    function _safeMint(address to, uint256 quantity) internal virtual {\r\n        _safeMint(to, quantity, '');\r\n    }\r\n\r\n    // =============================================================\r\n    //                        BURN OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Equivalent to `_burn(tokenId, false)`.\r\n     */\r\n    function _burn(uint256 tokenId) internal virtual {\r\n        _burn(tokenId, false);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\r\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\r\n\r\n        address from = address(uint160(prevOwnershipPacked));\r\n\r\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\r\n\r\n        if (approvalCheck) {\r\n            // The nested ifs save around 20+ gas over a compound boolean condition.\r\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\r\n        }\r\n\r\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Clear approvals from the previous owner.\r\n        assembly {\r\n            if approvedAddress {\r\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\r\n                sstore(approvedAddressSlot, 0)\r\n            }\r\n        }\r\n\r\n        // Underflow of the sender's balance is impossible because we check for\r\n        // ownership above and the recipient's balance can't realistically overflow.\r\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\r\n        unchecked {\r\n            // Updates:\r\n            // - `balance -= 1`.\r\n            // - `numberBurned += 1`.\r\n            //\r\n            // We can directly decrement the balance, and increment the number burned.\r\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\r\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\r\n\r\n            // Updates:\r\n            // - `address` to the last owner.\r\n            // - `startTimestamp` to the timestamp of burning.\r\n            // - `burned` to `true`.\r\n            // - `nextInitialized` to `true`.\r\n            _packedOwnerships[tokenId] = _packOwnershipData(\r\n                from,\r\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\r\n            );\r\n\r\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\r\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r\n                uint256 nextTokenId = tokenId + 1;\r\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\r\n                if (_packedOwnerships[nextTokenId] == 0) {\r\n                    // If the next slot is within bounds.\r\n                    if (nextTokenId != _currentIndex) {\r\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\r\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, address(0), tokenId);\r\n        _afterTokenTransfers(from, address(0), tokenId, 1);\r\n\r\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\r\n        unchecked {\r\n            _burnCounter++;\r\n        }\r\n    }\r\n\r\n    // =============================================================\r\n    //                     EXTRA DATA OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Directly sets the extra data for the ownership data `index`.\r\n     */\r\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\r\n        uint256 packed = _packedOwnerships[index];\r\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\r\n        uint256 extraDataCasted;\r\n        // Cast `extraData` with assembly to avoid redundant masking.\r\n        assembly {\r\n            extraDataCasted := extraData\r\n        }\r\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\r\n        _packedOwnerships[index] = packed;\r\n    }\r\n\r\n    /**\r\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\r\n     * Intended to be overridden by the cosumer contract.\r\n     *\r\n     * `previousExtraData` - the value of `extraData` before transfer.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\r\n     * transferred to `to`.\r\n     * - When `from` is zero, `tokenId` will be minted for `to`.\r\n     * - When `to` is zero, `tokenId` will be burned by `from`.\r\n     * - `from` and `to` are never both zero.\r\n     */\r\n    function _extraData(\r\n        address from,\r\n        address to,\r\n        uint24 previousExtraData\r\n    ) internal view virtual returns (uint24) {}\r\n\r\n    /**\r\n     * @dev Returns the next extra data for the packed ownership data.\r\n     * The returned result is shifted into position.\r\n     */\r\n    function _nextExtraData(\r\n        address from,\r\n        address to,\r\n        uint256 prevOwnershipPacked\r\n    ) private view returns (uint256) {\r\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\r\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\r\n    }\r\n\r\n    // =============================================================\r\n    //                       OTHER OPERATIONS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the message sender (defaults to `msg.sender`).\r\n     *\r\n     * If you are writing GSN compatible contracts, you need to override this function.\r\n     */\r\n    function _msgSenderERC721A() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a uint256 to its ASCII string decimal representation.\r\n     */\r\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\r\n        assembly {\r\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit),\r\n            // but we allocate 0x80 bytes to keep the free memory pointer 32-byte word aligned.\r\n            // We will need 1 32-byte word to store the length,\r\n            // and 3 32-byte words to store a maximum of 78 digits. Total: 0x20 + 3 * 0x20 = 0x80.\r\n            str := add(mload(0x40), 0x80)\r\n            // Update the free memory pointer to allocate.\r\n            mstore(0x40, str)\r\n\r\n            // Cache the end of the memory to calculate the length later.\r\n            let end := str\r\n\r\n            // We write the string from rightmost digit to leftmost digit.\r\n            // The following is essentially a do-while loop that also handles the zero case.\r\n            // prettier-ignore\r\n            for { let temp := value } 1 {} {\r\n                str := sub(str, 1)\r\n                // Write the character to the pointer.\r\n                // The ASCII index of the '0' character is 48.\r\n                mstore8(str, add(48, mod(temp, 10)))\r\n                // Keep dividing `temp` until zero.\r\n                temp := div(temp, 10)\r\n                // prettier-ignore\r\n                if iszero(temp) { break }\r\n            }\r\n\r\n            let length := sub(end, str)\r\n            // Move the pointer 32 bytes leftwards to make room for the length.\r\n            str := sub(str, 0x20)\r\n            // Store the length.\r\n            mstore(str, length)\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// ERC721A Contracts v4.2.2\r\n// Creator: Chiru Labs\r\n\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev Interface of ERC721A.\r\n */\r\ninterface IERC721A {\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error ApprovalCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error ApprovalQueryForNonexistentToken();\r\n\r\n    /**\r\n     * Cannot query the balance for the zero address.\r\n     */\r\n    error BalanceQueryForZeroAddress();\r\n\r\n    /**\r\n     * Cannot mint to the zero address.\r\n     */\r\n    error MintToZeroAddress();\r\n\r\n    /**\r\n     * The quantity of tokens minted must be more than zero.\r\n     */\r\n    error MintZeroQuantity();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error OwnerQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The caller must own the token or be an approved operator.\r\n     */\r\n    error TransferCallerNotOwnerNorApproved();\r\n\r\n    /**\r\n     * The token must be owned by `from`.\r\n     */\r\n    error TransferFromIncorrectOwner();\r\n\r\n    /**\r\n     * Cannot safely transfer to a contract that does not implement the\r\n     * ERC721Receiver interface.\r\n     */\r\n    error TransferToNonERC721ReceiverImplementer();\r\n\r\n    /**\r\n     * Cannot transfer to the zero address.\r\n     */\r\n    error TransferToZeroAddress();\r\n\r\n    /**\r\n     * The token does not exist.\r\n     */\r\n    error URIQueryForNonexistentToken();\r\n\r\n    /**\r\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\r\n     */\r\n    error MintERC2309QuantityExceedsLimit();\r\n\r\n    /**\r\n     * The `extraData` cannot be set on an unintialized ownership slot.\r\n     */\r\n    error OwnershipNotInitializedForExtraData();\r\n\r\n    // =============================================================\r\n    //                            STRUCTS\r\n    // =============================================================\r\n\r\n    struct TokenOwnership {\r\n        // The address of the owner.\r\n        address addr;\r\n        // Stores the start time of ownership with minimal overhead for tokenomics.\r\n        uint64 startTimestamp;\r\n        // Whether the token has been burned.\r\n        bool burned;\r\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\r\n        uint24 extraData;\r\n    }\r\n\r\n    // =============================================================\r\n    //                         TOKEN COUNTERS\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the total number of tokens in existence.\r\n     * Burned tokens will reduce the count.\r\n     * To get the total number of tokens minted, please see {_totalMinted}.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    // =============================================================\r\n    //                            IERC165\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n\r\n    // =============================================================\r\n    //                            IERC721\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables\r\n     * (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Returns the number of tokens in `owner`'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\r\n     * checking first that contract recipients are aware of the ERC721 protocol\r\n     * to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be have been allowed to move\r\n     * this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement\r\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\r\n     * whenever possible.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token\r\n     * by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the\r\n     * zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom}\r\n     * for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the caller.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool _approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(uint256 tokenId) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\r\n\r\n    // =============================================================\r\n    //                        IERC721Metadata\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n\r\n    // =============================================================\r\n    //                           IERC2309\r\n    // =============================================================\r\n\r\n    /**\r\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\r\n     * (inclusive) is transferred from `from` to `to`, as defined in the\r\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\r\n     *\r\n     * See {_mintERC2309} for more details.\r\n     */\r\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8305  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204bbfd4273bcb6e2aafa0a16dc95c02e028ffe3253c6c762cb45076c0508acb9764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204bbfd4273bcb6e2aafa0a16dc95c02e028ffe3253c6c762cb45076c0508acb9764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xBF 0xD4 0x27 EXTCODESIZE 0xCB PUSH15 0x2AAFA0A16DC95C02E028FFE3253C6C PUSH23 0x2CB45076C0508ACB9764736F6C63430008070033000000 ",
							"sourceMap": "194:8111:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8111:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204bbfd4273bcb6e2aafa0a16dc95c02e028ffe3253c6c762cb45076c0508acb9764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xBF 0xD4 0x27 EXTCODESIZE 0xCB PUSH15 0x2AAFA0A16DC95C02E028FFE3253C6C PUSH23 0x2CB45076C0508ACB9764736F6C63430008070033000000 ",
							"sourceMap": "194:8111:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8305,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204bbfd4273bcb6e2aafa0a16dc95c02e028ffe3253c6c762cb45076c0508acb9764736f6c63430008070033",
									".code": [
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8305,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":161:2396  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220841227ceec917adeb05ff8c6dc5d18499b87316fa81ffa997ae136a1e874b02064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220841227ceec917adeb05ff8c6dc5d18499b87316fa81ffa997ae136a1e874b02064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SLT 0x27 0xCE 0xEC SWAP2 PUSH27 0xDEB05FF8C6DC5D18499B87316FA81FFA997AE136A1E874B0206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "161:2235:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;161:2235:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220841227ceec917adeb05ff8c6dc5d18499b87316fa81ffa997ae136a1e874b02064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SLT 0x27 0xCE 0xEC SWAP2 PUSH27 0xDEB05FF8C6DC5D18499B87316FA81FFA997AE136A1E874B0206473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "161:2235:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 161,
									"end": 2396,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220841227ceec917adeb05ff8c6dc5d18499b87316fa81ffa997ae136a1e874b02064736f6c63430008070033",
									".code": [
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 161,
											"end": 2396,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC721A.sol\":1089:42112  contract ERC721A is IERC721A {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC721A.sol\":5201:5359  constructor(string memory name_, string memory symbol_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC721A.sol\":5268:5281  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"contracts/ERC721A.sol\":5268:5273  _name */\n  0x02\n  swap1\n    /* \"contracts/ERC721A.sol\":5268:5281  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/ERC721A.sol\":5292:5309  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"contracts/ERC721A.sol\":5292:5299  _symbol */\n  0x03\n  swap1\n    /* \"contracts/ERC721A.sol\":5292:5309  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"contracts/ERC721A.sol\":5751:5758  uint256 */\n  0x00\n    /* \"contracts/ERC721A.sol\":5320:5351  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"contracts/ERC721A.sol\":1089:42112  contract ERC721A is IERC721A {\r... */\n  jump(tag_24)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_13\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_16\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_19)\ntag_16:\n  dup3\n  0x1f\n  lt\n  tag_17\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_19)\ntag_17:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_19\n  jumpi\n  swap2\n  dup3\n  add\ntag_18:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_18)\ntag_19:\n  pop\n  tag_20\n  swap3\n  swap2\n  pop\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n  swap1\n  jump\t// out\ntag_21:\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_22)\n    /* \"#utility.yul\":14:899   */\ntag_25:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_27:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_32\n  tag_30\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_33:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_34:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_34)\ntag_36:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_37:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_39:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_40:\n    /* \"#utility.yul\":1222:1283   */\n  tag_41\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_25\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_42:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_43\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_25\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_14:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_45:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_46:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_30:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_24:\n    /* \"contracts/ERC721A.sol\":1089:42112  contract ERC721A is IERC721A {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC721A.sol\":1089:42112  contract ERC721A is IERC721A {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC721A.sol\":9526:10165  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":5027:5041   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5020:5042   */\n      iszero\n        /* \"#utility.yul\":5002:5043   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4990:4992   */\n      0x20\n        /* \"#utility.yul\":4975:4993   */\n      add\n        /* \"contracts/ERC721A.sol\":9526:10165  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC721A.sol\":10428:10528  function name() public view virtual override returns (string memory) {\r... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":16911:17129  function getApproved(uint256 tokenId) public view virtual override returns (address) {\r... */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4325:4357   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4307:4358   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4295:4297   */\n      0x20\n        /* \"#utility.yul\":4280:4298   */\n      add\n        /* \"contracts/ERC721A.sol\":16911:17129  function getApproved(uint256 tokenId) public view virtual override returns (address) {\r... */\n      tag_24\n        /* \"#utility.yul\":4161:4364   */\n      jump\n        /* \"contracts/ERC721A.sol\":16352:16752  function approve(address to, uint256 tokenId) public virtual override {\r... */\n    tag_6:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/ERC721A.sol\":6179:6502  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_7:\n        /* \"contracts/ERC721A.sol\":6453:6465  _burnCounter */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":6240:6247  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":6437:6450  _currentIndex */\n      sload\n        /* \"contracts/ERC721A.sol\":6437:6465  _currentIndex - _burnCounter */\n      sub\n        /* \"contracts/ERC721A.sol\":6179:6502  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":5424:5449   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5412:5414   */\n      0x20\n        /* \"#utility.yul\":5397:5415   */\n      add\n        /* \"contracts/ERC721A.sol\":6179:6502  function totalSupply() public view virtual override returns (uint256) {\r... */\n      tag_24\n        /* \"#utility.yul\":5278:5455   */\n      jump\n        /* \"contracts/ERC721A.sol\":20550:23367  function transferFrom(\r... */\n    tag_8:\n      tag_36\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":23463:23648  function safeTransferFrom(\r... */\n    tag_9:\n      tag_36\n      tag_49\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":11821:11973  function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r... */\n    tag_10:\n      tag_30\n      tag_52\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":7363:7596  function balanceOf(address owner) public view virtual override returns (uint256) {\r... */\n    tag_11:\n      tag_40\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":10604:10708  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_12:\n      tag_26\n      tag_61\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17469:17703  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_13:\n      tag_36\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":24246:24645  function safeTransferFrom(\r... */\n    tag_14:\n      tag_36\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":10814:11132  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r... */\n    tag_15:\n      tag_26\n      tag_72\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17860:18024  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r... */\n    tag_16:\n      tag_20\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":17981:18006  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":17957:17961  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":17981:18006  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17981:17999  _operatorApprovals */\n      0x07\n        /* \"contracts/ERC721A.sol\":17981:18006  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC721A.sol\":17981:18016  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":17860:18024  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r... */\n      jump\n        /* \"contracts/ERC721A.sol\":9526:10165  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n    tag_23:\n        /* \"contracts/ERC721A.sol\":9611:9615  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":9935:9960  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"contracts/ERC721A.sol\":9935:10037  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r... */\n      tag_81\n      jumpi\n      pop\n      shl(0xe0, 0x80ac58cd)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":10012:10037  interfaceId == 0x80ac58cd */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":9935:10037  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r... */\n    tag_81:\n        /* \"contracts/ERC721A.sol\":9935:10114  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r... */\n      dup1\n      tag_82\n      jumpi\n      pop\n      shl(0xe0, 0x5b5e139f)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":10089:10114  interfaceId == 0x5b5e139f */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":9935:10114  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r... */\n    tag_82:\n        /* \"contracts/ERC721A.sol\":9915:10114  return\r... */\n      swap3\n        /* \"contracts/ERC721A.sol\":9526:10165  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10428:10528  function name() public view virtual override returns (string memory) {\r... */\n    tag_27:\n        /* \"contracts/ERC721A.sol\":10482:10495  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10515:10520  _name */\n      0x02\n        /* \"contracts/ERC721A.sol\":10508:10520  return _name */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_85\n      jump\t// in\n    tag_86:\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_88\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_87)\n    tag_88:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_89:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_89\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":10428:10528  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":16911:17129  function getApproved(uint256 tokenId) public view virtual override returns (address) {\r... */\n    tag_33:\n        /* \"contracts/ERC721A.sol\":16987:16994  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":17012:17028  _exists(tokenId) */\n      tag_91\n        /* \"contracts/ERC721A.sol\":17020:17027  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":17012:17019  _exists */\n      tag_92\n        /* \"contracts/ERC721A.sol\":17012:17028  _exists(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/ERC721A.sol\":17007:17071  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_93\n      jumpi\n        /* \"contracts/ERC721A.sol\":17037:17071  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":17007:17071  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_93:\n      pop\n        /* \"contracts/ERC721A.sol\":17091:17115  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17091:17106  _tokenApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":17091:17115  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":17091:17121  _tokenApprovals[tokenId].value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":16911:17129  function getApproved(uint256 tokenId) public view virtual override returns (address) {\r... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":16352:16752  function approve(address to, uint256 tokenId) public virtual override {\r... */\n    tag_39:\n        /* \"contracts/ERC721A.sol\":16433:16446  address owner */\n      0x00\n        /* \"contracts/ERC721A.sol\":16449:16465  ownerOf(tokenId) */\n      tag_95\n        /* \"contracts/ERC721A.sol\":16457:16464  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":16449:16456  ownerOf */\n      tag_53\n        /* \"contracts/ERC721A.sol\":16449:16465  ownerOf(tokenId) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/ERC721A.sol\":16433:16465  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":16482:16510  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":16478:16653  if (_msgSenderERC721A() != owner)\r... */\n      tag_101\n      jumpi\n        /* \"contracts/ERC721A.sol\":16530:16574  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_99\n        /* \"contracts/ERC721A.sol\":16547:16552  owner */\n      dup2\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17860:18024  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r... */\n      tag_76\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":16530:16574  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_99:\n        /* \"contracts/ERC721A.sol\":16525:16653  if (!isApprovedForAll(owner, _msgSenderERC721A())) {\r... */\n      tag_101\n      jumpi\n        /* \"contracts/ERC721A.sol\":16602:16637  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":16525:16653  if (!isApprovedForAll(owner, _msgSenderERC721A())) {\r... */\n    tag_101:\n        /* \"contracts/ERC721A.sol\":16665:16689  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":16665:16680  _tokenApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":16665:16689  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC721A.sol\":16665:16700  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC721A.sol\":16716:16744  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"contracts/ERC721A.sol\":16665:16689  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"contracts/ERC721A.sol\":16716:16744  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"contracts/ERC721A.sol\":16422:16752  {\r... */\n      pop\n        /* \"contracts/ERC721A.sol\":16352:16752  function approve(address to, uint256 tokenId) public virtual override {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":20550:23367  function transferFrom(\r... */\n    tag_47:\n        /* \"contracts/ERC721A.sol\":20684:20711  uint256 prevOwnershipPacked */\n      0x00\n        /* \"contracts/ERC721A.sol\":20714:20741  _packedOwnershipOf(tokenId) */\n      tag_106\n        /* \"contracts/ERC721A.sol\":20733:20740  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":20714:20732  _packedOwnershipOf */\n      tag_107\n        /* \"contracts/ERC721A.sol\":20714:20741  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/ERC721A.sol\":20684:20741  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":20799:20803  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":20758:20803  address(uint160(prevOwnershipPacked)) != from */\n      and\n        /* \"contracts/ERC721A.sol\":20774:20793  prevOwnershipPacked */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":20758:20803  address(uint160(prevOwnershipPacked)) != from */\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":20754:20840  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_108\n      jumpi\n        /* \"contracts/ERC721A.sol\":20812:20840  TransferFromIncorrectOwner() */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":20754:20840  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_108:\n        /* \"contracts/ERC721A.sol\":20854:20881  uint256 approvedAddressSlot */\n      0x00\n        /* \"contracts/ERC721A.sol\":19658:19682  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":19658:19673  _tokenApprovals */\n      0x06\n        /* \"contracts/ERC721A.sol\":19658:19682  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":19886:19912  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":19283:19313  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":18976:19004  and(owner, _BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"contracts/ERC721A.sol\":19261:19281  eq(msgSender, owner) */\n      swap1\n      swap2\n      eq\n        /* \"contracts/ERC721A.sol\":19258:19314  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"contracts/ERC721A.sol\":21040:21220  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r... */\n      tag_117\n      jumpi\n        /* \"contracts/ERC721A.sol\":21133:21176  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_115\n        /* \"contracts/ERC721A.sol\":21150:21154  from */\n      dup7\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17860:18024  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r... */\n      tag_76\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":21133:21176  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_115:\n        /* \"contracts/ERC721A.sol\":21128:21220  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_117\n      jumpi\n        /* \"contracts/ERC721A.sol\":21185:21220  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":21128:21220  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":21237:21253  to == address(0) */\n      dup6\n      and\n        /* \"contracts/ERC721A.sol\":21233:21285  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_118\n      jumpi\n        /* \"contracts/ERC721A.sol\":21262:21285  TransferToZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":21233:21285  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_118:\n        /* \"contracts/ERC721A.sol\":21434:21449  approvedAddress */\n      dup1\n        /* \"contracts/ERC721A.sol\":21431:21591  if approvedAddress {\r... */\n      iszero\n      tag_121\n      jumpi\n        /* \"contracts/ERC721A.sol\":21574:21575  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":21553:21572  approvedAddressSlot */\n      dup3\n        /* \"contracts/ERC721A.sol\":21546:21576  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"contracts/ERC721A.sol\":21431:21591  if approvedAddress {\r... */\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":21971:21995  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":21971:21989  _packedAddressData */\n      0x05\n        /* \"contracts/ERC721A.sol\":21971:21995  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC721A.sol\":21969:21995  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":22040:22062  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":22038:22062  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":15210:15221  timestamp() */\n      timestamp\n        /* \"contracts/ERC721A.sol\":15185:15208  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"contracts/ERC721A.sol\":15181:15222  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"contracts/ERC721A.sol\":15168:15231  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"contracts/ERC721A.sol\":22333:22359  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":22333:22350  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":22333:22359  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":22333:22508  _packedOwnerships[tokenId] = _packOwnershipData(\r... */\n      sstore\n      shl(0xe1, 0x01)\n        /* \"contracts/ERC721A.sol\":22628:22675  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup4\n      and\n        /* \"contracts/ERC721A.sol\":22624:23251  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r... */\n      tag_126\n      jumpi\n        /* \"contracts/ERC721A.sol\":22733:22734  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":22723:22734  tokenId + 1 */\n      dup5\n      add\n        /* \"contracts/ERC721A.sol\":22701:22720  uint256 nextTokenId */\n      0x00\n        /* \"contracts/ERC721A.sol\":22856:22886  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":22856:22873  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":22856:22886  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":22852:23236  if (_packedOwnerships[nextTokenId] == 0) {\r... */\n      tag_128\n      jumpi\n        /* \"contracts/ERC721A.sol\":22994:23007  _currentIndex */\n      sload(0x00)\n        /* \"contracts/ERC721A.sol\":22979:22990  nextTokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":22979:23007  nextTokenId != _currentIndex */\n      eq\n        /* \"contracts/ERC721A.sol\":22975:23217  if (nextTokenId != _currentIndex) {\r... */\n      tag_128\n      jumpi\n        /* \"contracts/ERC721A.sol\":23141:23171  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":23141:23158  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":23141:23171  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":23141:23193  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":22975:23217  if (nextTokenId != _currentIndex) {\r... */\n    tag_128:\n        /* \"contracts/ERC721A.sol\":22682:23251  {\r... */\n      pop\n        /* \"contracts/ERC721A.sol\":22624:23251  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r... */\n    tag_126:\n        /* \"contracts/ERC721A.sol\":23298:23305  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":23294:23296  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":23279:23306  Transfer(from, to, tokenId) */\n      and\n        /* \"contracts/ERC721A.sol\":23288:23292  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":23279:23306  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC721A.sol\":20673:23367  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":20550:23367  function transferFrom(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":23463:23648  function safeTransferFrom(\r... */\n    tag_50:\n        /* \"contracts/ERC721A.sol\":23601:23640  safeTransferFrom(from, to, tokenId, '') */\n      tag_132\n        /* \"contracts/ERC721A.sol\":23618:23622  from */\n      dup4\n        /* \"contracts/ERC721A.sol\":23624:23626  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":23628:23635  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":23601:23640  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721A.sol\":23601:23617  safeTransferFrom */\n      tag_70\n        /* \"contracts/ERC721A.sol\":23601:23640  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_132:\n        /* \"contracts/ERC721A.sol\":23463:23648  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":11821:11973  function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r... */\n    tag_53:\n        /* \"contracts/ERC721A.sol\":11893:11900  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":11936:11963  _packedOwnershipOf(tokenId) */\n      tag_82\n        /* \"contracts/ERC721A.sol\":11955:11962  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":11936:11954  _packedOwnershipOf */\n      tag_107\n        /* \"contracts/ERC721A.sol\":11936:11963  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":7363:7596  function balanceOf(address owner) public view virtual override returns (uint256) {\r... */\n    tag_58:\n        /* \"contracts/ERC721A.sol\":7435:7442  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":7459:7478  owner == address(0) */\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":7455:7515  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_136\n      jumpi\n        /* \"contracts/ERC721A.sol\":7487:7515  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":7455:7515  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_136:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":7533:7558  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":7533:7551  _packedAddressData */\n      0x05\n        /* \"contracts/ERC721A.sol\":7533:7558  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":1522:1535  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"contracts/ERC721A.sol\":7533:7588  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":7363:7596  function balanceOf(address owner) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10604:10708  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_61:\n        /* \"contracts/ERC721A.sol\":10660:10673  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10693:10700  _symbol */\n      0x03\n        /* \"contracts/ERC721A.sol\":10686:10700  return _symbol */\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17469:17703  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_66:\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17564:17603  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17564:17582  _operatorApprovals */\n      0x07\n        /* \"contracts/ERC721A.sol\":17564:17603  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":17564:17613  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":17564:17624  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC721A.sol\":17640:17695  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":5002:5043   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17564:17613  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      swap2\n        /* \"contracts/ERC721A.sol\":17640:17695  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":4975:4993   */\n      add\n        /* \"contracts/ERC721A.sol\":17640:17695  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC721A.sol\":17469:17703  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":24246:24645  function safeTransferFrom(\r... */\n    tag_70:\n        /* \"contracts/ERC721A.sol\":24413:24444  transferFrom(from, to, tokenId) */\n      tag_148\n        /* \"contracts/ERC721A.sol\":24426:24430  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":24432:24434  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":24436:24443  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":24413:24425  transferFrom */\n      tag_47\n        /* \"contracts/ERC721A.sol\":24413:24444  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":24459:24473  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"contracts/ERC721A.sol\":24459:24478  to.code.length != 0 */\n      iszero\n        /* \"contracts/ERC721A.sol\":24455:24638  if (to.code.length != 0)\r... */\n      tag_152\n      jumpi\n        /* \"contracts/ERC721A.sol\":24498:24554  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_150\n        /* \"contracts/ERC721A.sol\":24529:24533  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":24535:24537  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":24539:24546  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":24548:24553  _data */\n      dup5\n        /* \"contracts/ERC721A.sol\":24498:24528  _checkContractOnERC721Received */\n      tag_151\n        /* \"contracts/ERC721A.sol\":24498:24554  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/ERC721A.sol\":24493:24638  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r... */\n      tag_152\n      jumpi\n        /* \"contracts/ERC721A.sol\":24582:24622  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":24493:24638  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r... */\n    tag_152:\n        /* \"contracts/ERC721A.sol\":24246:24645  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10814:11132  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r... */\n    tag_73:\n        /* \"contracts/ERC721A.sol\":10887:10900  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10918:10934  _exists(tokenId) */\n      tag_154\n        /* \"contracts/ERC721A.sol\":10926:10933  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":10918:10925  _exists */\n      tag_92\n        /* \"contracts/ERC721A.sol\":10918:10934  _exists(tokenId) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/ERC721A.sol\":10913:10972  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n      tag_155\n      jumpi\n        /* \"contracts/ERC721A.sol\":10943:10972  URIQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe4, 0x0a14c4b5)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":10913:10972  if (!_exists(tokenId)) revert URIQueryForNonexistentToken() */\n    tag_155:\n        /* \"contracts/ERC721A.sol\":10985:11006  string memory baseURI */\n      0x00\n        /* \"contracts/ERC721A.sol\":11009:11019  _baseURI() */\n      tag_156\n        /* \"contracts/ERC721A.sol\":11461:11470  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"contracts/ERC721A.sol\":11384:11478  function _baseURI() internal view virtual returns (string memory) {\r... */\n      jump\n        /* \"contracts/ERC721A.sol\":11009:11019  _baseURI() */\n    tag_156:\n        /* \"contracts/ERC721A.sol\":10985:11019  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":11043:11050  baseURI */\n      dup1\n        /* \"contracts/ERC721A.sol\":11037:11058  bytes(baseURI).length */\n      mload\n        /* \"contracts/ERC721A.sol\":11062:11063  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":11037:11063  bytes(baseURI).length != 0 */\n      eq\n      iszero\n        /* \"contracts/ERC721A.sol\":11037:11124  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_158\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_159)\n    tag_158:\n        /* \"contracts/ERC721A.sol\":11090:11097  baseURI */\n      dup1\n        /* \"contracts/ERC721A.sol\":11099:11117  _toString(tokenId) */\n      tag_160\n        /* \"contracts/ERC721A.sol\":11109:11116  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":11099:11108  _toString */\n      tag_161\n        /* \"contracts/ERC721A.sol\":11099:11117  _toString(tokenId) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/ERC721A.sol\":11073:11118  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_162\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ERC721A.sol\":11037:11124  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_159:\n        /* \"contracts/ERC721A.sol\":11030:11124  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"contracts/ERC721A.sol\":10814:11132  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":18282:18564  function _exists(uint256 tokenId) internal view virtual returns (bool) {\r... */\n    tag_92:\n        /* \"contracts/ERC721A.sol\":18347:18351  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":18437:18450  _currentIndex */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":18427:18434  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":18427:18450  tokenId < _currentIndex */\n      lt\n        /* \"contracts/ERC721A.sol\":18384:18537  _startTokenId() <= tokenId &&\r... */\n      dup1\n      iszero\n      tag_82\n      jumpi\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":18488:18514  _packedOwnerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":18488:18505  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":18488:18514  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"contracts/ERC721A.sol\":18488:18532  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"contracts/ERC721A.sol\":18488:18537  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n        /* \"contracts/ERC721A.sol\":18282:18564  function _exists(uint256 tokenId) internal view virtual returns (bool) {\r... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":12976:14251  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\r... */\n    tag_107:\n        /* \"contracts/ERC721A.sol\":13043:13050  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":13078:13085  tokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":13180:13193  _currentIndex */\n      sload(0x00)\n        /* \"contracts/ERC721A.sol\":13173:13177  curr */\n      dup2\n        /* \"contracts/ERC721A.sol\":13173:13193  curr < _currentIndex */\n      lt\n        /* \"contracts/ERC721A.sol\":13169:14184  if (curr < _currentIndex) {\r... */\n      iszero\n      tag_174\n      jumpi\n        /* \"contracts/ERC721A.sol\":13218:13232  uint256 packed */\n      0x00\n        /* \"contracts/ERC721A.sol\":13235:13258  _packedOwnerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":13235:13252  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":13235:13258  _packedOwnerships[curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"contracts/ERC721A.sol\":13324:13348  packed & _BITMASK_BURNED */\n      dup2\n      and\n        /* \"contracts/ERC721A.sol\":13320:14165  if (packed & _BITMASK_BURNED == 0) {\r... */\n      tag_175\n      jumpi\n        /* \"contracts/ERC721A.sol\":13989:14102  while (packed == 0) {\r... */\n    tag_176:\n        /* \"contracts/ERC721A.sol\":13996:14007  packed == 0 */\n      dup1\n        /* \"contracts/ERC721A.sol\":13989:14102  while (packed == 0) {\r... */\n      tag_159\n      jumpi\n      pop\n      not(0x00)\n        /* \"contracts/ERC721A.sol\":14067:14073  --curr */\n      add\n        /* \"contracts/ERC721A.sol\":14049:14074  _packedOwnerships[--curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":14049:14066  _packedOwnerships */\n      0x04\n        /* \"contracts/ERC721A.sol\":14049:14074  _packedOwnerships[--curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":13989:14102  while (packed == 0) {\r... */\n      jump(tag_176)\n        /* \"contracts/ERC721A.sol\":13320:14165  if (packed & _BITMASK_BURNED == 0) {\r... */\n    tag_175:\n        /* \"contracts/ERC721A.sol\":13195:14184  {\r... */\n      pop\n        /* \"contracts/ERC721A.sol\":13169:14184  if (curr < _currentIndex) {\r... */\n    tag_174:\n        /* \"contracts/ERC721A.sol\":14212:14243  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":26729:27445  function _checkContractOnERC721Received(\r... */\n    tag_151:\n        /* \"contracts/ERC721A.sol\":26913:27001  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":26892:26896  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":26913:26958  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"contracts/ERC721A.sol\":26913:27001  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_188\n      swap1\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ERC721A.sol\":26980:26984  from */\n      dup10\n      swap1\n        /* \"contracts/ERC721A.sol\":26986:26993  tokenId */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":26995:27000  _data */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":26913:27001  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_189\n      jump\t// in\n    tag_188:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_191\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_192\n      swap2\n      dup2\n      add\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      0x01\n    tag_191:\n        /* \"contracts/ERC721A.sol\":26909:27438  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\r... */\n      tag_194\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_199\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_198)\n    tag_199:\n      0x60\n      swap2\n      pop\n    tag_198:\n      pop\n        /* \"contracts/ERC721A.sol\":27196:27209  reason.length */\n      dup1\n      mload\n        /* \"contracts/ERC721A.sol\":27192:27427  if (reason.length == 0) {\r... */\n      tag_200\n      jumpi\n        /* \"contracts/ERC721A.sol\":27242:27282  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":27192:27427  if (reason.length == 0) {\r... */\n    tag_200:\n        /* \"contracts/ERC721A.sol\":27385:27391  reason */\n      dup1\n        /* \"contracts/ERC721A.sol\":27379:27392  mload(reason) */\n      mload\n        /* \"contracts/ERC721A.sol\":27370:27376  reason */\n      dup2\n        /* \"contracts/ERC721A.sol\":27366:27368  32 */\n      0x20\n        /* \"contracts/ERC721A.sol\":27362:27377  add(32, reason) */\n      add\n        /* \"contracts/ERC721A.sol\":27355:27393  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/ERC721A.sol\":26909:27438  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\r... */\n    tag_194:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":27072:27136  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":26729:27445  function _checkContractOnERC721Received(\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":40527:42109  function _toString(uint256 value) internal pure virtual returns (string memory str) {\r... */\n    tag_161:\n        /* \"contracts/ERC721A.sol\":41011:41015  0x40 */\n      0x40\n        /* \"contracts/ERC721A.sol\":41005:41016  mload(0x40) */\n      dup1\n      mload\n        /* \"contracts/ERC721A.sol\":41018:41022  0x80 */\n      0x80\n        /* \"contracts/ERC721A.sol\":41001:41023  add(mload(0x40), 0x80) */\n      add\n        /* \"contracts/ERC721A.sol\":41097:41114  mstore(0x40, str) */\n      swap1\n      dup2\n      swap1\n      mstore\n        /* \"contracts/ERC721A.sol\":41001:41023  add(mload(0x40), 0x80) */\n      dup1\n        /* \"contracts/ERC721A.sol\":41455:41460  value */\n      dup3\n        /* \"contracts/ERC721A.sol\":41437:41865  for { let temp := value } 1 {} {\r... */\n    tag_205:\n        /* \"contracts/ERC721A.sol\":41503:41504  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":41498:41501  str */\n      dup4\n        /* \"contracts/ERC721A.sol\":41494:41505  sub(str, 1) */\n      sub\n        /* \"contracts/ERC721A.sol\":41487:41505  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"contracts/ERC721A.sol\":41674:41676  10 */\n      0x0a\n        /* \"contracts/ERC721A.sol\":41668:41672  temp */\n      dup2\n        /* \"contracts/ERC721A.sol\":41664:41677  mod(temp, 10) */\n      mod\n        /* \"contracts/ERC721A.sol\":41660:41662  48 */\n      0x30\n        /* \"contracts/ERC721A.sol\":41656:41678  add(48, mod(temp, 10)) */\n      add\n        /* \"contracts/ERC721A.sol\":41651:41654  str */\n      dup4\n        /* \"contracts/ERC721A.sol\":41643:41679  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"contracts/ERC721A.sol\":41768:41770  10 */\n      0x0a\n        /* \"contracts/ERC721A.sol\":41758:41771  div(temp, 10) */\n      swap1\n      div\n      dup1\n        /* \"contracts/ERC721A.sol\":41825:41850  if iszero(temp) { break } */\n      tag_208\n      jumpi\n        /* \"contracts/ERC721A.sol\":41843:41848  break */\n      jump(tag_207)\n        /* \"contracts/ERC721A.sol\":41825:41850  if iszero(temp) { break } */\n    tag_208:\n        /* \"contracts/ERC721A.sol\":41437:41865  for { let temp := value } 1 {} {\r... */\n      jump(tag_205)\n    tag_207:\n      pop\n        /* \"contracts/ERC721A.sol\":41895:41908  sub(end, str) */\n      dup2\n      swap1\n      sub\n      not(0x1f)\n        /* \"contracts/ERC721A.sol\":42010:42024  sub(str, 0x20) */\n      swap1\n      swap2\n      add\n        /* \"contracts/ERC721A.sol\":42072:42091  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":42010:42024  sub(str, 0x20) */\n      swap2\n        /* \"contracts/ERC721A.sol\":40527:42109  function _toString(uint256 value) internal pure virtual returns (string memory str) {\r... */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_211:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_213:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_57:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_215:\n        /* \"#utility.yul\":343:372   */\n      tag_159\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_211\n      jump\t// in\n        /* \"#utility.yul\":383:643   */\n    tag_77:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_218:\n        /* \"#utility.yul\":551:580   */\n      tag_219\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_211\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_220\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_211\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_46:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_222:\n        /* \"#utility.yul\":833:862   */\n      tag_223\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_211\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_224\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_211\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:2119   */\n    tag_69:\n        /* \"#utility.yul\":1076:1082   */\n      0x00\n        /* \"#utility.yul\":1084:1090   */\n      dup1\n        /* \"#utility.yul\":1092:1098   */\n      0x00\n        /* \"#utility.yul\":1100:1106   */\n      dup1\n        /* \"#utility.yul\":1153:1156   */\n      0x80\n        /* \"#utility.yul\":1141:1150   */\n      dup6\n        /* \"#utility.yul\":1132:1139   */\n      dup8\n        /* \"#utility.yul\":1128:1151   */\n      sub\n        /* \"#utility.yul\":1124:1157   */\n      slt\n        /* \"#utility.yul\":1121:1174   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":1170:1171   */\n      0x00\n        /* \"#utility.yul\":1167:1168   */\n      dup1\n        /* \"#utility.yul\":1160:1172   */\n      revert\n        /* \"#utility.yul\":1121:1174   */\n    tag_226:\n        /* \"#utility.yul\":1193:1222   */\n      tag_227\n        /* \"#utility.yul\":1212:1221   */\n      dup6\n        /* \"#utility.yul\":1193:1222   */\n      tag_211\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1183:1222   */\n      swap4\n      pop\n        /* \"#utility.yul\":1241:1279   */\n      tag_228\n        /* \"#utility.yul\":1275:1277   */\n      0x20\n        /* \"#utility.yul\":1264:1273   */\n      dup7\n        /* \"#utility.yul\":1260:1278   */\n      add\n        /* \"#utility.yul\":1241:1279   */\n      tag_211\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1231:1279   */\n      swap3\n      pop\n        /* \"#utility.yul\":1326:1328   */\n      0x40\n        /* \"#utility.yul\":1315:1324   */\n      dup6\n        /* \"#utility.yul\":1311:1329   */\n      add\n        /* \"#utility.yul\":1298:1330   */\n      calldataload\n        /* \"#utility.yul\":1288:1330   */\n      swap2\n      pop\n        /* \"#utility.yul\":1381:1383   */\n      0x60\n        /* \"#utility.yul\":1370:1379   */\n      dup6\n        /* \"#utility.yul\":1366:1384   */\n      add\n        /* \"#utility.yul\":1353:1385   */\n      calldataload\n        /* \"#utility.yul\":1404:1422   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1445:1447   */\n      dup1\n        /* \"#utility.yul\":1437:1443   */\n      dup3\n        /* \"#utility.yul\":1434:1448   */\n      gt\n        /* \"#utility.yul\":1431:1465   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":1461:1462   */\n      0x00\n        /* \"#utility.yul\":1458:1459   */\n      dup1\n        /* \"#utility.yul\":1451:1463   */\n      revert\n        /* \"#utility.yul\":1431:1465   */\n    tag_229:\n        /* \"#utility.yul\":1499:1505   */\n      dup2\n        /* \"#utility.yul\":1488:1497   */\n      dup8\n        /* \"#utility.yul\":1484:1506   */\n      add\n        /* \"#utility.yul\":1474:1506   */\n      swap2\n      pop\n        /* \"#utility.yul\":1544:1551   */\n      dup8\n        /* \"#utility.yul\":1537:1541   */\n      0x1f\n        /* \"#utility.yul\":1533:1535   */\n      dup4\n        /* \"#utility.yul\":1529:1542   */\n      add\n        /* \"#utility.yul\":1525:1552   */\n      slt\n        /* \"#utility.yul\":1515:1570   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":1566:1567   */\n      0x00\n        /* \"#utility.yul\":1563:1564   */\n      dup1\n        /* \"#utility.yul\":1556:1568   */\n      revert\n        /* \"#utility.yul\":1515:1570   */\n    tag_230:\n        /* \"#utility.yul\":1602:1604   */\n      dup2\n        /* \"#utility.yul\":1589:1605   */\n      calldataload\n        /* \"#utility.yul\":1624:1626   */\n      dup2\n        /* \"#utility.yul\":1620:1622   */\n      dup2\n        /* \"#utility.yul\":1617:1627   */\n      gt\n        /* \"#utility.yul\":1614:1650   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":1630:1648   */\n      tag_232\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1705:1707   */\n      0x40\n        /* \"#utility.yul\":1699:1708   */\n      mload\n        /* \"#utility.yul\":1673:1675   */\n      0x1f\n        /* \"#utility.yul\":1759:1772   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1755:1777   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1779:1781   */\n      0x3f\n        /* \"#utility.yul\":1751:1782   */\n      add\n        /* \"#utility.yul\":1747:1787   */\n      and\n        /* \"#utility.yul\":1735:1788   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1803:1821   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1823:1845   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1800:1846   */\n      or\n        /* \"#utility.yul\":1797:1869   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":1849:1867   */\n      tag_235\n      tag_233\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1889:1899   */\n      dup2\n        /* \"#utility.yul\":1885:1887   */\n      0x40\n        /* \"#utility.yul\":1878:1900   */\n      mstore\n        /* \"#utility.yul\":1924:1926   */\n      dup3\n        /* \"#utility.yul\":1916:1922   */\n      dup2\n        /* \"#utility.yul\":1909:1927   */\n      mstore\n        /* \"#utility.yul\":1964:1971   */\n      dup11\n        /* \"#utility.yul\":1959:1961   */\n      0x20\n        /* \"#utility.yul\":1954:1956   */\n      dup5\n        /* \"#utility.yul\":1950:1952   */\n      dup8\n        /* \"#utility.yul\":1946:1957   */\n      add\n        /* \"#utility.yul\":1942:1962   */\n      add\n        /* \"#utility.yul\":1939:1972   */\n      gt\n        /* \"#utility.yul\":1936:1989   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":1985:1986   */\n      0x00\n        /* \"#utility.yul\":1982:1983   */\n      dup1\n        /* \"#utility.yul\":1975:1987   */\n      revert\n        /* \"#utility.yul\":1936:1989   */\n    tag_236:\n        /* \"#utility.yul\":2041:2043   */\n      dup3\n        /* \"#utility.yul\":2036:2038   */\n      0x20\n        /* \"#utility.yul\":2032:2034   */\n      dup7\n        /* \"#utility.yul\":2028:2039   */\n      add\n        /* \"#utility.yul\":2023:2025   */\n      0x20\n        /* \"#utility.yul\":2015:2021   */\n      dup4\n        /* \"#utility.yul\":2011:2026   */\n      add\n        /* \"#utility.yul\":1998:2044   */\n      calldatacopy\n        /* \"#utility.yul\":2086:2087   */\n      0x00\n        /* \"#utility.yul\":2081:2083   */\n      0x20\n        /* \"#utility.yul\":2076:2078   */\n      dup5\n        /* \"#utility.yul\":2068:2074   */\n      dup4\n        /* \"#utility.yul\":2064:2079   */\n      add\n        /* \"#utility.yul\":2060:2084   */\n      add\n        /* \"#utility.yul\":2053:2088   */\n      mstore\n        /* \"#utility.yul\":2107:2113   */\n      dup1\n        /* \"#utility.yul\":2097:2113   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:2119   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2124:2471   */\n    tag_65:\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2197:2203   */\n      dup1\n        /* \"#utility.yul\":2250:2252   */\n      0x40\n        /* \"#utility.yul\":2238:2247   */\n      dup4\n        /* \"#utility.yul\":2229:2236   */\n      dup6\n        /* \"#utility.yul\":2225:2248   */\n      sub\n        /* \"#utility.yul\":2221:2253   */\n      slt\n        /* \"#utility.yul\":2218:2270   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2263:2264   */\n      dup1\n        /* \"#utility.yul\":2256:2268   */\n      revert\n        /* \"#utility.yul\":2218:2270   */\n    tag_238:\n        /* \"#utility.yul\":2289:2318   */\n      tag_239\n        /* \"#utility.yul\":2308:2317   */\n      dup4\n        /* \"#utility.yul\":2289:2318   */\n      tag_211\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":2279:2318   */\n      swap2\n      pop\n        /* \"#utility.yul\":2368:2370   */\n      0x20\n        /* \"#utility.yul\":2357:2366   */\n      dup4\n        /* \"#utility.yul\":2353:2371   */\n      add\n        /* \"#utility.yul\":2340:2372   */\n      calldataload\n        /* \"#utility.yul\":2415:2420   */\n      dup1\n        /* \"#utility.yul\":2408:2421   */\n      iszero\n        /* \"#utility.yul\":2401:2422   */\n      iszero\n        /* \"#utility.yul\":2394:2399   */\n      dup2\n        /* \"#utility.yul\":2391:2423   */\n      eq\n        /* \"#utility.yul\":2381:2441   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":2437:2438   */\n      0x00\n        /* \"#utility.yul\":2434:2435   */\n      dup1\n        /* \"#utility.yul\":2427:2439   */\n      revert\n        /* \"#utility.yul\":2381:2441   */\n    tag_240:\n        /* \"#utility.yul\":2460:2465   */\n      dup1\n        /* \"#utility.yul\":2450:2465   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2124:2471   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2476:2730   */\n    tag_38:\n        /* \"#utility.yul\":2544:2550   */\n      0x00\n        /* \"#utility.yul\":2552:2558   */\n      dup1\n        /* \"#utility.yul\":2605:2607   */\n      0x40\n        /* \"#utility.yul\":2593:2602   */\n      dup4\n        /* \"#utility.yul\":2584:2591   */\n      dup6\n        /* \"#utility.yul\":2580:2603   */\n      sub\n        /* \"#utility.yul\":2576:2608   */\n      slt\n        /* \"#utility.yul\":2573:2625   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":2621:2622   */\n      0x00\n        /* \"#utility.yul\":2618:2619   */\n      dup1\n        /* \"#utility.yul\":2611:2623   */\n      revert\n        /* \"#utility.yul\":2573:2625   */\n    tag_242:\n        /* \"#utility.yul\":2644:2673   */\n      tag_243\n        /* \"#utility.yul\":2663:2672   */\n      dup4\n        /* \"#utility.yul\":2644:2673   */\n      tag_211\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2634:2673   */\n      swap5\n        /* \"#utility.yul\":2720:2722   */\n      0x20\n        /* \"#utility.yul\":2705:2723   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2692:2724   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2476:2730   */\n      jump\t// out\n        /* \"#utility.yul\":2735:2980   */\n    tag_22:\n        /* \"#utility.yul\":2793:2799   */\n      0x00\n        /* \"#utility.yul\":2846:2848   */\n      0x20\n        /* \"#utility.yul\":2834:2843   */\n      dup3\n        /* \"#utility.yul\":2825:2832   */\n      dup5\n        /* \"#utility.yul\":2821:2844   */\n      sub\n        /* \"#utility.yul\":2817:2849   */\n      slt\n        /* \"#utility.yul\":2814:2866   */\n      iszero\n      tag_245\n      jumpi\n        /* \"#utility.yul\":2862:2863   */\n      0x00\n        /* \"#utility.yul\":2859:2860   */\n      dup1\n        /* \"#utility.yul\":2852:2864   */\n      revert\n        /* \"#utility.yul\":2814:2866   */\n    tag_245:\n        /* \"#utility.yul\":2901:2910   */\n      dup2\n        /* \"#utility.yul\":2888:2911   */\n      calldataload\n        /* \"#utility.yul\":2920:2950   */\n      tag_159\n        /* \"#utility.yul\":2944:2949   */\n      dup2\n        /* \"#utility.yul\":2920:2950   */\n      tag_247\n      jump\t// in\n        /* \"#utility.yul\":2985:3234   */\n    tag_193:\n        /* \"#utility.yul\":3054:3060   */\n      0x00\n        /* \"#utility.yul\":3107:3109   */\n      0x20\n        /* \"#utility.yul\":3095:3104   */\n      dup3\n        /* \"#utility.yul\":3086:3093   */\n      dup5\n        /* \"#utility.yul\":3082:3105   */\n      sub\n        /* \"#utility.yul\":3078:3110   */\n      slt\n        /* \"#utility.yul\":3075:3127   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":3123:3124   */\n      0x00\n        /* \"#utility.yul\":3120:3121   */\n      dup1\n        /* \"#utility.yul\":3113:3125   */\n      revert\n        /* \"#utility.yul\":3075:3127   */\n    tag_249:\n        /* \"#utility.yul\":3155:3164   */\n      dup2\n        /* \"#utility.yul\":3149:3165   */\n      mload\n        /* \"#utility.yul\":3174:3204   */\n      tag_159\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3174:3204   */\n      tag_247\n      jump\t// in\n        /* \"#utility.yul\":3239:3419   */\n    tag_32:\n        /* \"#utility.yul\":3298:3304   */\n      0x00\n        /* \"#utility.yul\":3351:3353   */\n      0x20\n        /* \"#utility.yul\":3339:3348   */\n      dup3\n        /* \"#utility.yul\":3330:3337   */\n      dup5\n        /* \"#utility.yul\":3326:3349   */\n      sub\n        /* \"#utility.yul\":3322:3354   */\n      slt\n        /* \"#utility.yul\":3319:3371   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":3367:3368   */\n      0x00\n        /* \"#utility.yul\":3364:3365   */\n      dup1\n        /* \"#utility.yul\":3357:3369   */\n      revert\n        /* \"#utility.yul\":3319:3371   */\n    tag_252:\n      pop\n        /* \"#utility.yul\":3390:3413   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3239:3419   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3424:3681   */\n    tag_253:\n        /* \"#utility.yul\":3465:3468   */\n      0x00\n        /* \"#utility.yul\":3503:3508   */\n      dup2\n        /* \"#utility.yul\":3497:3509   */\n      mload\n        /* \"#utility.yul\":3530:3536   */\n      dup1\n        /* \"#utility.yul\":3525:3528   */\n      dup5\n        /* \"#utility.yul\":3518:3537   */\n      mstore\n        /* \"#utility.yul\":3546:3609   */\n      tag_255\n        /* \"#utility.yul\":3602:3608   */\n      dup2\n        /* \"#utility.yul\":3595:3599   */\n      0x20\n        /* \"#utility.yul\":3590:3593   */\n      dup7\n        /* \"#utility.yul\":3586:3600   */\n      add\n        /* \"#utility.yul\":3579:3583   */\n      0x20\n        /* \"#utility.yul\":3572:3577   */\n      dup7\n        /* \"#utility.yul\":3568:3584   */\n      add\n        /* \"#utility.yul\":3546:3609   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3663:3665   */\n      0x1f\n        /* \"#utility.yul\":3642:3657   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3638:3667   */\n      and\n        /* \"#utility.yul\":3629:3668   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3670:3674   */\n      0x20\n        /* \"#utility.yul\":3625:3675   */\n      add\n      swap3\n        /* \"#utility.yul\":3424:3681   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3686:4156   */\n    tag_163:\n        /* \"#utility.yul\":3865:3868   */\n      0x00\n        /* \"#utility.yul\":3903:3909   */\n      dup4\n        /* \"#utility.yul\":3897:3910   */\n      mload\n        /* \"#utility.yul\":3919:3972   */\n      tag_258\n        /* \"#utility.yul\":3965:3971   */\n      dup2\n        /* \"#utility.yul\":3960:3963   */\n      dup5\n        /* \"#utility.yul\":3953:3957   */\n      0x20\n        /* \"#utility.yul\":3945:3951   */\n      dup9\n        /* \"#utility.yul\":3941:3958   */\n      add\n        /* \"#utility.yul\":3919:3972   */\n      tag_256\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4035:4048   */\n      dup4\n      mload\n        /* \"#utility.yul\":3994:4010   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":4057:4114   */\n      tag_259\n        /* \"#utility.yul\":4035:4048   */\n      dup2\n        /* \"#utility.yul\":3994:4010   */\n      dup4\n        /* \"#utility.yul\":4091:4095   */\n      0x20\n        /* \"#utility.yul\":4079:4096   */\n      dup9\n      add\n        /* \"#utility.yul\":4057:4114   */\n      tag_256\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":4130:4150   */\n      add\n      swap5\n        /* \"#utility.yul\":3686:4156   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4369:4857   */\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4638:4653   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":4620:4654   */\n      dup3\n      mstore\n        /* \"#utility.yul\":4690:4705   */\n      dup5\n      and\n        /* \"#utility.yul\":4685:4687   */\n      0x20\n        /* \"#utility.yul\":4670:4688   */\n      dup3\n      add\n        /* \"#utility.yul\":4663:4706   */\n      mstore\n        /* \"#utility.yul\":4737:4739   */\n      0x40\n        /* \"#utility.yul\":4722:4740   */\n      dup2\n      add\n        /* \"#utility.yul\":4715:4749   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4785:4788   */\n      0x80\n        /* \"#utility.yul\":4780:4782   */\n      0x60\n        /* \"#utility.yul\":4765:4783   */\n      dup3\n      add\n        /* \"#utility.yul\":4758:4789   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4563:4567   */\n      0x00\n      swap1\n        /* \"#utility.yul\":4806:4851   */\n      tag_262\n      swap1\n        /* \"#utility.yul\":4831:4850   */\n      dup4\n      add\n        /* \"#utility.yul\":4823:4829   */\n      dup5\n        /* \"#utility.yul\":4806:4851   */\n      tag_253\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":4798:4851   */\n      swap7\n        /* \"#utility.yul\":4369:4857   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5054:5273   */\n    tag_29:\n        /* \"#utility.yul\":5203:5205   */\n      0x20\n        /* \"#utility.yul\":5192:5201   */\n      dup2\n        /* \"#utility.yul\":5185:5206   */\n      mstore\n        /* \"#utility.yul\":5166:5170   */\n      0x00\n        /* \"#utility.yul\":5223:5267   */\n      tag_159\n        /* \"#utility.yul\":5263:5265   */\n      0x20\n        /* \"#utility.yul\":5252:5261   */\n      dup4\n        /* \"#utility.yul\":5248:5266   */\n      add\n        /* \"#utility.yul\":5240:5246   */\n      dup5\n        /* \"#utility.yul\":5223:5267   */\n      tag_253\n      jump\t// in\n        /* \"#utility.yul\":5460:5718   */\n    tag_256:\n        /* \"#utility.yul\":5532:5533   */\n      0x00\n        /* \"#utility.yul\":5542:5655   */\n    tag_268:\n        /* \"#utility.yul\":5556:5562   */\n      dup4\n        /* \"#utility.yul\":5553:5554   */\n      dup2\n        /* \"#utility.yul\":5550:5563   */\n      lt\n        /* \"#utility.yul\":5542:5655   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":5632:5643   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5626:5644   */\n      mload\n        /* \"#utility.yul\":5613:5624   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":5606:5645   */\n      mstore\n        /* \"#utility.yul\":5578:5580   */\n      0x20\n        /* \"#utility.yul\":5571:5581   */\n      add\n        /* \"#utility.yul\":5542:5655   */\n      jump(tag_268)\n    tag_270:\n        /* \"#utility.yul\":5673:5679   */\n      dup4\n        /* \"#utility.yul\":5670:5671   */\n      dup2\n        /* \"#utility.yul\":5667:5680   */\n      gt\n        /* \"#utility.yul\":5664:5712   */\n      iszero\n      tag_152\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":5708:5709   */\n      0x00\n        /* \"#utility.yul\":5690:5706   */\n      swap2\n      add\n        /* \"#utility.yul\":5683:5710   */\n      mstore\n        /* \"#utility.yul\":5460:5718   */\n      jump\t// out\n        /* \"#utility.yul\":5723:6103   */\n    tag_85:\n        /* \"#utility.yul\":5802:5803   */\n      0x01\n        /* \"#utility.yul\":5798:5810   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5845:5857   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5866:5927   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":5920:5924   */\n      0x7f\n        /* \"#utility.yul\":5912:5918   */\n      dup3\n        /* \"#utility.yul\":5908:5925   */\n      and\n        /* \"#utility.yul\":5898:5925   */\n      swap2\n      pop\n        /* \"#utility.yul\":5866:5927   */\n    tag_273:\n        /* \"#utility.yul\":5973:5975   */\n      0x20\n        /* \"#utility.yul\":5965:5971   */\n      dup3\n        /* \"#utility.yul\":5962:5976   */\n      lt\n        /* \"#utility.yul\":5942:5960   */\n      dup2\n        /* \"#utility.yul\":5939:5977   */\n      eq\n        /* \"#utility.yul\":5936:6097   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":6019:6029   */\n      0x4e487b71\n        /* \"#utility.yul\":6014:6017   */\n      0xe0\n        /* \"#utility.yul\":6010:6030   */\n      shl\n        /* \"#utility.yul\":6007:6008   */\n      0x00\n        /* \"#utility.yul\":6000:6031   */\n      mstore\n        /* \"#utility.yul\":6054:6058   */\n      0x22\n        /* \"#utility.yul\":6051:6052   */\n      0x04\n        /* \"#utility.yul\":6044:6059   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":5936:6097   */\n    tag_274:\n      pop\n        /* \"#utility.yul\":5723:6103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6108:6235   */\n    tag_233:\n        /* \"#utility.yul\":6169:6179   */\n      0x4e487b71\n        /* \"#utility.yul\":6164:6167   */\n      0xe0\n        /* \"#utility.yul\":6160:6180   */\n      shl\n        /* \"#utility.yul\":6157:6158   */\n      0x00\n        /* \"#utility.yul\":6150:6181   */\n      mstore\n        /* \"#utility.yul\":6200:6204   */\n      0x41\n        /* \"#utility.yul\":6197:6198   */\n      0x04\n        /* \"#utility.yul\":6190:6205   */\n      mstore\n        /* \"#utility.yul\":6224:6228   */\n      0x24\n        /* \"#utility.yul\":6221:6222   */\n      0x00\n        /* \"#utility.yul\":6214:6229   */\n      revert\n        /* \"#utility.yul\":6240:6371   */\n    tag_247:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":6314:6346   */\n      dup2\n      and\n        /* \"#utility.yul\":6304:6347   */\n      dup2\n      eq\n        /* \"#utility.yul\":6294:6365   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":6361:6362   */\n      0x00\n        /* \"#utility.yul\":6358:6359   */\n      dup1\n        /* \"#utility.yul\":6351:6363   */\n      revert\n        /* \"#utility.yul\":6294:6365   */\n    tag_277:\n        /* \"#utility.yul\":6240:6371   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200724ed5c4f4339f9517ba7bfe9ba7865470ee7b602f0e642f3f82f3a1232000064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_845": {
									"entryPoint": null,
									"id": 845,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:8"
															},
															"nodeType": "YulIf",
															"src": "88:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:8"
															},
															"nodeType": "YulIf",
															"src": "221:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:8"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:8"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:8"
															},
															"nodeType": "YulIf",
															"src": "404:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:8"
															},
															"nodeType": "YulIf",
															"src": "566:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:8"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:8"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:8",
																"statements": []
															},
															"src": "647:133:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:8"
															},
															"nodeType": "YulIf",
															"src": "789:80:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:8",
														"type": ""
													}
												],
												"src": "14:885:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:8"
															},
															"nodeType": "YulIf",
															"src": "1032:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:8"
															},
															"nodeType": "YulIf",
															"src": "1169:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:8"
															},
															"nodeType": "YulIf",
															"src": "1342:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:8",
														"type": ""
													}
												],
												"src": "904:562:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:8"
															},
															"nodeType": "YulIf",
															"src": "1614:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:8"
															},
															"nodeType": "YulIf",
															"src": "1684:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:8",
														"type": ""
													}
												],
												"src": "1471:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000f7e38038062000f7e8339810160408190526200003491620001c9565b8151620000499060029060208501906200006c565b5080516200005f9060039060208401906200006c565b5050600080555062000286565b8280546200007a9062000233565b90600052602060002090601f0160209004810192826200009e5760008555620000e9565b82601f10620000b957805160ff1916838001178555620000e9565b82800160010185558215620000e9579182015b82811115620000e9578251825591602001919060010190620000cc565b50620000f7929150620000fb565b5090565b5b80821115620000f75760008155600101620000fc565b600082601f8301126200012457600080fd5b81516001600160401b038082111562000141576200014162000270565b604051601f8301601f19908116603f011681019082821181831017156200016c576200016c62000270565b816040528381526020925086838588010111156200018957600080fd5b600091505b83821015620001ad57858201830151818301840152908201906200018e565b83821115620001bf5760008385830101525b9695505050505050565b60008060408385031215620001dd57600080fd5b82516001600160401b0380821115620001f557600080fd5b620002038683870162000112565b935060208501519150808211156200021a57600080fd5b50620002298582860162000112565b9150509250929050565b600181811c908216806200024857607f821691505b602082108114156200026a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610ce880620002966000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d6578063b88d4fde146101e9578063c87b56dd146101fc578063e985e9c51461020f57600080fd5b80636352211e146101a857806370a08231146101bb57806395d89b41146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806318160ddd1461016c57806323b872dd1461018257806342842e0e1461019557600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610b1e565b61024b565b60405190151581526020015b60405180910390f35b61011f61029d565b60405161010e9190610c09565b61013f61013a366004610b58565b61032f565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610af4565b610373565b005b600154600054035b60405190815260200161010e565b61016a6101903660046109a0565b610413565b61016a6101a33660046109a0565b6105a4565b61013f6101b6366004610b58565b6105c4565b6101746101c9366004610952565b6105cf565b61011f61061e565b61016a6101e4366004610ab8565b61062d565b61016a6101f73660046109dc565b610699565b61011f61020a366004610b58565b6106e3565b61010261021d36600461096d565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061027c57506380ac58cd60e01b6001600160e01b03198316145b806102975750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600280546102ac90610c48565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610c48565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061033a82610775565b610357576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061037e826105c4565b9050336001600160a01b038216146103b75761039a813361021d565b6103b7576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061041e8261079c565b9050836001600160a01b0316816001600160a01b0316146104515760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761049e57610481863361021d565b61049e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166104c557604051633a954ecd60e21b815260040160405180910390fd5b80156104d057600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040902055600160e11b831661055b57600184016000818152600460205260409020546105595760005481146105595760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6105bf83838360405180602001604052806000815250610699565b505050565b60006102978261079c565b60006001600160a01b0382166105f8576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546102ac90610c48565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106a4848484610413565b6001600160a01b0383163b156106dd576106c0848484846107fd565b6106dd576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606106ee82610775565b61070b57604051630a14c4b560e41b815260040160405180910390fd5b600061072260408051602081019091526000815290565b9050805160001415610743576040518060200160405280600081525061076e565b8061074d846108f4565b60405160200161075e929190610b9d565b6040516020818303038152906040525b9392505050565b6000805482108015610297575050600090815260046020526040902054600160e01b161590565b6000816000548110156107e457600081815260046020526040902054600160e01b81166107e2575b8061076e5750600019016000818152600460205260409020546107c4565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610832903390899088908890600401610bcc565b602060405180830381600087803b15801561084c57600080fd5b505af192505050801561087c575060408051601f3d908101601f1916820190925261087991810190610b3b565b60015b6108d7573d8080156108aa576040519150601f19603f3d011682016040523d82523d6000602084013e6108af565b606091505b5080516108cf576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080019081905280825b600183039250600a81066030018353600a90048061091f57610924565b610902565b50819003601f19909101908152919050565b80356001600160a01b038116811461094d57600080fd5b919050565b60006020828403121561096457600080fd5b61076e82610936565b6000806040838503121561098057600080fd5b61098983610936565b915061099760208401610936565b90509250929050565b6000806000606084860312156109b557600080fd5b6109be84610936565b92506109cc60208501610936565b9150604084013590509250925092565b600080600080608085870312156109f257600080fd5b6109fb85610936565b9350610a0960208601610936565b925060408501359150606085013567ffffffffffffffff80821115610a2d57600080fd5b818701915087601f830112610a4157600080fd5b813581811115610a5357610a53610c83565b604051601f8201601f19908116603f01168101908382118183101715610a7b57610a7b610c83565b816040528281528a6020848701011115610a9457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610acb57600080fd5b610ad483610936565b915060208301358015158114610ae957600080fd5b809150509250929050565b60008060408385031215610b0757600080fd5b610b1083610936565b946020939093013593505050565b600060208284031215610b3057600080fd5b813561076e81610c99565b600060208284031215610b4d57600080fd5b815161076e81610c99565b600060208284031215610b6a57600080fd5b5035919050565b60008151808452610b89816020860160208601610c1c565b601f01601f19169290920160200192915050565b60008351610baf818460208801610c1c565b835190830190610bc3818360208801610c1c565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610bff90830184610b71565b9695505050505050565b60208152600061076e6020830184610b71565b60005b83811015610c37578181015183820152602001610c1f565b838111156106dd5750506000910152565b600181811c90821680610c5c57607f821691505b60208210811415610c7d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610caf57600080fd5b5056fea26469706673582212200724ed5c4f4339f9517ba7bfe9ba7865470ee7b602f0e642f3f82f3a1232000064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xF7E CODESIZE SUB DUP1 PUSH3 0xF7E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C9 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x6C JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x6C JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SSTORE POP PUSH3 0x286 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7A SWAP1 PUSH3 0x233 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xCC JUMP JUMPDEST POP PUSH3 0xF7 SWAP3 SWAP2 POP PUSH3 0xFB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xFC JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x141 JUMPI PUSH3 0x141 PUSH3 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x16C JUMPI PUSH3 0x16C PUSH3 0x270 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1AD JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18E JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BF JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x203 DUP7 DUP4 DUP8 ADD PUSH3 0x112 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x229 DUP6 DUP3 DUP7 ADD PUSH3 0x112 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x248 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x26A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xCE8 DUP1 PUSH3 0x296 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x11F PUSH2 0x61E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x27C JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x297 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC48 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xC48 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A DUP3 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x5C4 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x3B7 JUMPI PUSH2 0x39A DUP2 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E DUP3 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x49E JUMPI PUSH2 0x481 DUP7 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP4 AND PUSH2 0x55B JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x559 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x559 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5BF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x699 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297 DUP3 PUSH2 0x79C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC48 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6A4 DUP5 DUP5 DUP5 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x6DD JUMPI PUSH2 0x6C0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x6DD JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6EE DUP3 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x722 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x76E JUMP JUMPDEST DUP1 PUSH2 0x74D DUP5 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x75E SWAP3 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x297 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH2 0x7E2 JUMPI JUMPDEST DUP1 PUSH2 0x76E JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7C4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x832 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x87C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x879 SWAP2 DUP2 ADD SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x8D7 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x8CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 ADD SWAP1 DUP2 SWAP1 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x91F JUMPI PUSH2 0x924 JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76E DUP3 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x989 DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP2 POP PUSH2 0x997 PUSH1 0x20 DUP5 ADD PUSH2 0x936 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9BE DUP5 PUSH2 0x936 JUMP JUMPDEST SWAP3 POP PUSH2 0x9CC PUSH1 0x20 DUP6 ADD PUSH2 0x936 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FB DUP6 PUSH2 0x936 JUMP JUMPDEST SWAP4 POP PUSH2 0xA09 PUSH1 0x20 DUP7 ADD PUSH2 0x936 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xA53 JUMPI PUSH2 0xA53 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xA7B JUMPI PUSH2 0xA7B PUSH2 0xC83 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xA94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAD4 DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB10 DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x76E DUP2 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x76E DUP2 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xB89 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xBAF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC1C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xBC3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC1C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xBFF SWAP1 DUP4 ADD DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x76E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC37 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC1F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6DD JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC5C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC7D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0x24 0xED 0x5C 0x4F NUMBER CODECOPY 0xF9 MLOAD PUSH28 0xA7BFE9BA7865470EE7B602F0E642F3F82F3A1232000064736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1089:41023:5:-:0;;;5201:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5268:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;5292:17:5;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;5751:7:5;5320:31;;-1:-1:-1;1089:41023:5;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1089:41023:5;;;-1:-1:-1;1089:41023:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:8;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:8;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:8;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:8:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:8;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;1089:41023:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1706": {
									"entryPoint": null,
									"id": 1706,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_1103": {
									"entryPoint": null,
									"id": 1103,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1693": {
									"entryPoint": null,
									"id": 1693,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1761": {
									"entryPoint": 2045,
									"id": 1761,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1445": {
									"entryPoint": 1909,
									"id": 1445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_2267": {
									"entryPoint": null,
									"id": 2267,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_1478": {
									"entryPoint": null,
									"id": 1478,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_1459": {
									"entryPoint": null,
									"id": 1459,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_2310": {
									"entryPoint": null,
									"id": 2310,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2300": {
									"entryPoint": null,
									"id": 2300,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_1297": {
									"entryPoint": null,
									"id": 1297,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_1231": {
									"entryPoint": 1948,
									"id": 1231,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_startTokenId_845": {
									"entryPoint": null,
									"id": 845,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_2320": {
									"entryPoint": 2292,
									"id": 2320,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_1352": {
									"entryPoint": 883,
									"id": 1352,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_918": {
									"entryPoint": 1487,
									"id": 918,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1375": {
									"entryPoint": 815,
									"id": 1375,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1419": {
									"entryPoint": null,
									"id": 1419,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_1041": {
									"entryPoint": 669,
									"id": 1041,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1123": {
									"entryPoint": 1476,
									"id": 1123,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1642": {
									"entryPoint": 1444,
									"id": 1642,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1680": {
									"entryPoint": 1689,
									"id": 1680,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1401": {
									"entryPoint": 1581,
									"id": 1401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1031": {
									"entryPoint": 587,
									"id": 1031,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1051": {
									"entryPoint": 1566,
									"id": 1051,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_1094": {
									"entryPoint": 1763,
									"id": 1094,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_870": {
									"entryPoint": null,
									"id": 870,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1623": {
									"entryPoint": 1043,
									"id": 1623,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 2744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 2875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 2929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2973,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 3020,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3100,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 3203,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6373:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:8"
															},
															"nodeType": "YulIf",
															"src": "111:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "14:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:8"
															},
															"nodeType": "YulIf",
															"src": "272:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:8",
														"type": ""
													}
												],
												"src": "192:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:8"
															},
															"nodeType": "YulIf",
															"src": "480:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:8",
														"type": ""
													}
												],
												"src": "383:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:8"
															},
															"nodeType": "YulIf",
															"src": "762:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:8",
														"type": ""
													}
												],
												"src": "648:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1111:1008:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1158:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1170:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1160:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1160:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1160:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1132:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1141:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1128:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1128:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1153:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1124:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:33:8"
															},
															"nodeType": "YulIf",
															"src": "1121:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1183:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1193:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1183:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1231:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1264:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1275:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1260:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1260:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1241:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1241:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1288:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1315:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1326:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1298:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1298:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1288:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1339:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1370:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1381:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1366:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1366:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1353:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:32:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1343:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1394:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1404:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1398:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1437:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1434:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1434:14:8"
															},
															"nodeType": "YulIf",
															"src": "1431:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1474:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1488:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1499:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1484:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:22:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1478:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1554:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1563:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1566:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1556:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1556:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1556:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1533:2:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1537:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1529:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1529:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1544:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1525:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:35:8"
															},
															"nodeType": "YulIf",
															"src": "1515:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1579:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1589:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:16:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1583:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1628:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1630:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1630:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1630:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1620:2:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1624:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1617:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:10:8"
															},
															"nodeType": "YulIf",
															"src": "1614:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1659:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1673:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:7:8"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1663:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1685:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1705:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1699:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1699:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1689:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1717:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1739:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1763:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1767:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1759:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1759:13:8"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1774:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1755:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1755:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1779:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1751:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1751:31:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1784:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1747:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1747:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1735:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1735:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1721:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1847:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1849:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1849:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1849:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1806:10:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1818:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1803:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1803:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1826:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1838:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1823:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1823:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1800:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:46:8"
															},
															"nodeType": "YulIf",
															"src": "1797:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1885:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1889:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1878:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1878:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1916:6:8"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1924:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1909:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1909:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1909:18:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1973:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1982:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1985:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1975:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1975:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1975:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1950:2:8"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1954:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1946:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1946:11:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1959:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1942:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1942:20:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1964:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1939:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1939:33:8"
															},
															"nodeType": "YulIf",
															"src": "1936:53:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2015:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2023:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2011:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2011:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2032:2:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2036:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:11:8"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2041:2:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1998:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1998:46:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2068:6:8"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2076:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2064:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2064:15:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2081:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2060:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2060:24:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2086:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2053:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2053:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2053:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2097:16:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2107:6:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2097:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1053:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1064:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1076:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1084:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1092:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1100:6:8",
														"type": ""
													}
												],
												"src": "981:1138:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2254:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2263:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2266:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2256:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2256:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2256:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2229:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2238:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2225:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2250:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2221:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:32:8"
															},
															"nodeType": "YulIf",
															"src": "2218:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2279:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2308:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2289:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2327:45:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2357:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2368:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2340:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2340:32:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2331:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2425:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2434:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2427:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2427:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2427:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2394:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2415:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2408:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2408:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2401:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2401:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2391:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2391:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2384:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2384:40:8"
															},
															"nodeType": "YulIf",
															"src": "2381:60:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2450:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2460:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2166:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2177:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2189:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2197:6:8",
														"type": ""
													}
												],
												"src": "2124:347:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2563:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2609:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2618:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2621:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2611:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2611:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2611:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2584:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2593:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2580:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2605:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2576:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2576:32:8"
															},
															"nodeType": "YulIf",
															"src": "2573:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2634:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2663:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2644:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2634:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2682:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2709:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2720:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2705:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2705:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2692:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2692:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2521:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2532:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2544:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2552:6:8",
														"type": ""
													}
												],
												"src": "2476:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:176:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2850:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2859:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2862:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2852:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2852:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2852:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2825:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2834:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2821:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2821:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2846:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2817:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:32:8"
															},
															"nodeType": "YulIf",
															"src": "2814:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2875:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2901:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2888:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2888:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2879:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2944:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2920:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2920:30:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2959:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2969:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2959:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2770:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2781:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2793:6:8",
														"type": ""
													}
												],
												"src": "2735:245:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:169:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3111:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3120:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3123:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3113:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3113:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3113:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:32:8"
															},
															"nodeType": "YulIf",
															"src": "3075:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3136:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3155:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3149:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3140:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3174:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3174:30:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3213:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3223:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3213:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3031:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3042:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3054:6:8",
														"type": ""
													}
												],
												"src": "2985:249:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3309:110:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3355:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3364:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3367:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3357:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3357:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3357:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3330:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3339:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3326:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3326:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3351:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3322:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3322:32:8"
															},
															"nodeType": "YulIf",
															"src": "3319:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3380:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3403:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3390:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3390:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3380:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3275:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3286:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3298:6:8",
														"type": ""
													}
												],
												"src": "3239:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3473:208:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3483:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3503:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3497:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:12:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3487:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3525:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3530:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3518:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3518:19:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3572:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3568:16:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3590:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3595:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3586:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3586:14:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3602:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3546:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:63:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3546:63:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3618:57:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3633:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3646:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3654:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3642:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3642:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3663:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3659:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3659:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3638:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3638:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3629:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3629:39:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3625:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3625:50:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3618:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3450:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3457:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3465:3:8",
														"type": ""
													}
												],
												"src": "3424:257:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3873:283:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3883:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3903:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3897:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3897:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3887:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3945:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3953:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3941:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3941:17:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3960:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3965:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3919:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:53:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3919:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3981:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3998:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4003:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3994:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3994:16:8"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "3985:5:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4019:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4041:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4035:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4035:13:8"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "4023:8:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4083:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4091:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4079:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4079:17:8"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4098:5:8"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4105:8:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4057:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4057:57:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4123:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4134:5:8"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4141:8:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4130:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:20:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4123:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3841:3:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3846:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3854:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3865:3:8",
														"type": ""
													}
												],
												"src": "3686:470:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4262:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4272:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4284:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4295:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4280:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4280:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4272:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4314:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4329:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4345:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4350:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4341:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4341:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4354:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4337:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4337:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4325:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4325:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4307:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4307:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4307:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4231:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4242:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4253:4:8",
														"type": ""
													}
												],
												"src": "4161:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4572:285:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4582:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4600:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4605:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4596:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4596:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4609:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4592:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4592:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4586:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4627:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4642:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4650:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4620:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4620:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4620:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4674:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4685:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4670:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4670:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4694:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4702:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4690:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4690:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4663:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4663:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4726:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4737:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4722:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4722:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4742:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4715:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4715:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4715:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4769:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4780:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4765:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4765:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4785:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4758:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4758:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4758:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4798:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4823:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4835:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4846:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4831:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4831:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4806:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:45:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4798:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4517:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4528:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4536:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4544:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4552:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4563:4:8",
														"type": ""
													}
												],
												"src": "4369:488:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4957:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4967:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4979:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4990:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4975:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4967:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5009:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5034:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5027:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5027:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5020:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5020:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5002:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5002:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4926:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4937:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4948:4:8",
														"type": ""
													}
												],
												"src": "4862:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5175:98:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5192:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5203:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5185:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5185:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5185:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5215:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5240:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5252:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5263:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5248:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5248:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5223:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5223:44:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5215:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5144:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5155:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5166:4:8",
														"type": ""
													}
												],
												"src": "5054:219:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5379:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5389:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5401:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5412:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5397:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5397:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5389:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5431:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5442:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5424:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5424:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5424:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5348:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5359:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5370:4:8",
														"type": ""
													}
												],
												"src": "5278:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5513:205:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5523:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5532:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5527:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5592:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5617:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5622:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5613:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5613:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "5636:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5641:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5632:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5632:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5626:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5626:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5606:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5606:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5606:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5553:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5556:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5550:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5550:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5564:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5566:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5575:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5578:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5571:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5571:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5566:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5546:3:8",
																"statements": []
															},
															"src": "5542:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5681:31:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "5694:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5699:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5690:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5690:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5708:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5683:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5683:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5683:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5670:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5673:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5667:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5667:13:8"
															},
															"nodeType": "YulIf",
															"src": "5664:48:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5491:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5496:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5501:6:8",
														"type": ""
													}
												],
												"src": "5460:258:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5778:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5788:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5802:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5798:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5798:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5788:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5819:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5849:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5855:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5845:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5845:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5823:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5896:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5898:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5912:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5920:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5908:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5908:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5898:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5876:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5869:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5869:26:8"
															},
															"nodeType": "YulIf",
															"src": "5866:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5986:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6007:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6014:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6019:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6010:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6010:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6000:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6000:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6000:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6051:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6054:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6044:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6044:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6044:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6079:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6082:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6072:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6072:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6072:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5942:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5965:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5973:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5962:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5962:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5939:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5939:38:8"
															},
															"nodeType": "YulIf",
															"src": "5936:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5758:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5767:6:8",
														"type": ""
													}
												],
												"src": "5723:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6140:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6157:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6164:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6169:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6160:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6160:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6150:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6150:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6150:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6197:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6200:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6190:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6190:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6190:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6221:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6224:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6214:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6214:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6214:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "6108:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6284:87:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6349:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6358:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6361:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6351:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6351:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6351:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6307:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6318:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6329:3:8",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6334:10:8",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6325:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6325:20:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6314:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6314:32:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6304:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6304:43:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6297:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6297:51:8"
															},
															"nodeType": "YulIf",
															"src": "6294:71:8"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6273:5:8",
														"type": ""
													}
												],
												"src": "6240:131:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101d6578063b88d4fde146101e9578063c87b56dd146101fc578063e985e9c51461020f57600080fd5b80636352211e146101a857806370a08231146101bb57806395d89b41146101ce57600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806318160ddd1461016c57806323b872dd1461018257806342842e0e1461019557600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610b1e565b61024b565b60405190151581526020015b60405180910390f35b61011f61029d565b60405161010e9190610c09565b61013f61013a366004610b58565b61032f565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610af4565b610373565b005b600154600054035b60405190815260200161010e565b61016a6101903660046109a0565b610413565b61016a6101a33660046109a0565b6105a4565b61013f6101b6366004610b58565b6105c4565b6101746101c9366004610952565b6105cf565b61011f61061e565b61016a6101e4366004610ab8565b61062d565b61016a6101f73660046109dc565b610699565b61011f61020a366004610b58565b6106e3565b61010261021d36600461096d565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061027c57506380ac58cd60e01b6001600160e01b03198316145b806102975750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600280546102ac90610c48565b80601f01602080910402602001604051908101604052809291908181526020018280546102d890610c48565b80156103255780601f106102fa57610100808354040283529160200191610325565b820191906000526020600020905b81548152906001019060200180831161030857829003601f168201915b5050505050905090565b600061033a82610775565b610357576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061037e826105c4565b9050336001600160a01b038216146103b75761039a813361021d565b6103b7576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061041e8261079c565b9050836001600160a01b0316816001600160a01b0316146104515760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761049e57610481863361021d565b61049e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166104c557604051633a954ecd60e21b815260040160405180910390fd5b80156104d057600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040902055600160e11b831661055b57600184016000818152600460205260409020546105595760005481146105595760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6105bf83838360405180602001604052806000815250610699565b505050565b60006102978261079c565b60006001600160a01b0382166105f8576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546102ac90610c48565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106a4848484610413565b6001600160a01b0383163b156106dd576106c0848484846107fd565b6106dd576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606106ee82610775565b61070b57604051630a14c4b560e41b815260040160405180910390fd5b600061072260408051602081019091526000815290565b9050805160001415610743576040518060200160405280600081525061076e565b8061074d846108f4565b60405160200161075e929190610b9d565b6040516020818303038152906040525b9392505050565b6000805482108015610297575050600090815260046020526040902054600160e01b161590565b6000816000548110156107e457600081815260046020526040902054600160e01b81166107e2575b8061076e5750600019016000818152600460205260409020546107c4565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610832903390899088908890600401610bcc565b602060405180830381600087803b15801561084c57600080fd5b505af192505050801561087c575060408051601f3d908101601f1916820190925261087991810190610b3b565b60015b6108d7573d8080156108aa576040519150601f19603f3d011682016040523d82523d6000602084013e6108af565b606091505b5080516108cf576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b604080516080019081905280825b600183039250600a81066030018353600a90048061091f57610924565b610902565b50819003601f19909101908152919050565b80356001600160a01b038116811461094d57600080fd5b919050565b60006020828403121561096457600080fd5b61076e82610936565b6000806040838503121561098057600080fd5b61098983610936565b915061099760208401610936565b90509250929050565b6000806000606084860312156109b557600080fd5b6109be84610936565b92506109cc60208501610936565b9150604084013590509250925092565b600080600080608085870312156109f257600080fd5b6109fb85610936565b9350610a0960208601610936565b925060408501359150606085013567ffffffffffffffff80821115610a2d57600080fd5b818701915087601f830112610a4157600080fd5b813581811115610a5357610a53610c83565b604051601f8201601f19908116603f01168101908382118183101715610a7b57610a7b610c83565b816040528281528a6020848701011115610a9457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610acb57600080fd5b610ad483610936565b915060208301358015158114610ae957600080fd5b809150509250929050565b60008060408385031215610b0757600080fd5b610b1083610936565b946020939093013593505050565b600060208284031215610b3057600080fd5b813561076e81610c99565b600060208284031215610b4d57600080fd5b815161076e81610c99565b600060208284031215610b6a57600080fd5b5035919050565b60008151808452610b89816020860160208601610c1c565b601f01601f19169290920160200192915050565b60008351610baf818460208801610c1c565b835190830190610bc3818360208801610c1c565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610bff90830184610b71565b9695505050505050565b60208152600061076e6020830184610b71565b60005b83811015610c37578181015183820152602001610c1f565b838111156106dd5750506000910152565b600181811c90821680610c5c57607f821691505b60208210811415610c7d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610caf57600080fd5b5056fea26469706673582212200724ed5c4f4339f9517ba7bfe9ba7865470ee7b602f0e642f3f82f3a1232000064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x24B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x13A CALLDATASIZE PUSH1 0x4 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST PUSH2 0x13F PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x5C4 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x952 JUMP JUMPDEST PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x11F PUSH2 0x61E JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xAB8 JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH2 0x16A PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x9DC JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH2 0x11F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xB58 JUMP JUMPDEST PUSH2 0x6E3 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x27C JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x297 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC48 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xC48 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x325 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x308 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33A DUP3 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x357 JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x5C4 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x3B7 JUMPI PUSH2 0x39A DUP2 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E DUP3 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x49E JUMPI PUSH2 0x481 DUP7 CALLER PUSH2 0x21D JUMP JUMPDEST PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP4 AND PUSH2 0x55B JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x559 JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x559 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5BF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x699 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x297 DUP3 PUSH2 0x79C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2AC SWAP1 PUSH2 0xC48 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6A4 DUP5 DUP5 DUP5 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x6DD JUMPI PUSH2 0x6C0 DUP5 DUP5 DUP5 DUP5 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x6DD JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x6EE DUP3 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14C4B5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x722 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x76E JUMP JUMPDEST DUP1 PUSH2 0x74D DUP5 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x75E SWAP3 SWAP2 SWAP1 PUSH2 0xB9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x297 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH2 0x7E2 JUMPI JUMPDEST DUP1 PUSH2 0x76E JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7C4 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x832 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xBCC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x87C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x879 SWAP2 DUP2 ADD SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x8D7 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x8AA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x8CF JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 ADD SWAP1 DUP2 SWAP1 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0x91F JUMPI PUSH2 0x924 JUMP JUMPDEST PUSH2 0x902 JUMP JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F NOT SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76E DUP3 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x989 DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP2 POP PUSH2 0x997 PUSH1 0x20 DUP5 ADD PUSH2 0x936 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9BE DUP5 PUSH2 0x936 JUMP JUMPDEST SWAP3 POP PUSH2 0x9CC PUSH1 0x20 DUP6 ADD PUSH2 0x936 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9FB DUP6 PUSH2 0x936 JUMP JUMPDEST SWAP4 POP PUSH2 0xA09 PUSH1 0x20 DUP7 ADD PUSH2 0x936 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xA2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xA53 JUMPI PUSH2 0xA53 PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xA7B JUMPI PUSH2 0xA7B PUSH2 0xC83 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xA94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xACB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAD4 DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB10 DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x76E DUP2 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x76E DUP2 PUSH2 0xC99 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xB89 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xC1C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xBAF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xC1C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xBC3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xC1C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xBFF SWAP1 DUP4 ADD DUP5 PUSH2 0xB71 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x76E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC37 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xC1F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x6DD JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC5C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC7D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0x24 0xED 0x5C 0x4F NUMBER CODECOPY 0xF9 MLOAD PUSH28 0xA7BFE9BA7865470EE7B602F0E642F3F82F3A1232000064736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1089:41023:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9526:639;;;;;;:::i;:::-;;:::i;:::-;;;5027:14:8;;5020:22;5002:41;;4990:2;4975:18;9526:639:5;;;;;;;;10428:100;;;:::i;:::-;;;;;;;:::i;16911:218::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4325:32:8;;;4307:51;;4295:2;4280:18;16911:218:5;4161:203:8;16352:400:5;;;;;;:::i;:::-;;:::i;:::-;;6179:323;6453:12;;6240:7;6437:13;:28;6179:323;;;5424:25:8;;;5412:2;5397:18;6179:323:5;5278:177:8;20550:2817:5;;;;;;:::i;:::-;;:::i;23463:185::-;;;;;;:::i;:::-;;:::i;11821:152::-;;;;;;:::i;:::-;;:::i;7363:233::-;;;;;;:::i;:::-;;:::i;10604:104::-;;;:::i;17469:234::-;;;;;;:::i;:::-;;:::i;24246:399::-;;;;;;:::i;:::-;;:::i;10814:318::-;;;;;;:::i;:::-;;:::i;17860:164::-;;;;;;:::i;:::-;-1:-1:-1;;;;;17981:25:5;;;17957:4;17981:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17860:164;9526:639;9611:4;-1:-1:-1;;;;;;;;;9935:25:5;;;;:102;;-1:-1:-1;;;;;;;;;;10012:25:5;;;9935:102;:179;;;-1:-1:-1;;;;;;;;;;10089:25:5;;;9935:179;9915:199;9526:639;-1:-1:-1;;9526:639:5:o;10428:100::-;10482:13;10515:5;10508:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10428:100;:::o;16911:218::-;16987:7;17012:16;17020:7;17012;:16::i;:::-;17007:64;;17037:34;;-1:-1:-1;;;17037:34:5;;;;;;;;;;;17007:64;-1:-1:-1;17091:24:5;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;17091:30:5;;16911:218::o;16352:400::-;16433:13;16449:16;16457:7;16449;:16::i;:::-;16433:32;-1:-1:-1;40407:10:5;-1:-1:-1;;;;;16482:28:5;;;16478:175;;16530:44;16547:5;40407:10;17860:164;:::i;16530:44::-;16525:128;;16602:35;;-1:-1:-1;;;16602:35:5;;;;;;;;;;;16525:128;16665:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;16665:35:5;-1:-1:-1;;;;;16665:35:5;;;;;;;;;16716:28;;16665:24;;16716:28;;;;;;;16422:330;16352:400;;:::o;20550:2817::-;20684:27;20714;20733:7;20714:18;:27::i;:::-;20684:57;;20799:4;-1:-1:-1;;;;;20758:45:5;20774:19;-1:-1:-1;;;;;20758:45:5;;20754:86;;20812:28;;-1:-1:-1;;;20812:28:5;;;;;;;;;;;20754:86;20854:27;19658:24;;;:15;:24;;;;;19886:26;;40407:10;19283:30;;;-1:-1:-1;;;;;18976:28:5;;19261:20;;;19258:56;21040:180;;21133:43;21150:4;40407:10;17860:164;:::i;21133:43::-;21128:92;;21185:35;;-1:-1:-1;;;21185:35:5;;;;;;;;;;;21128:92;-1:-1:-1;;;;;21237:16:5;;21233:52;;21262:23;;-1:-1:-1;;;21262:23:5;;;;;;;;;;;21233:52;21434:15;21431:160;;;21574:1;21553:19;21546:30;21431:160;-1:-1:-1;;;;;21971:24:5;;;;;;;:18;:24;;;;;;21969:26;;-1:-1:-1;;21969:26:5;;;22040:22;;;;;;;;;22038:24;;-1:-1:-1;22038:24:5;;;15210:11;15185:23;15181:41;15168:63;-1:-1:-1;;;15168:63:5;22333:26;;;;:17;:26;;;;;:175;-1:-1:-1;;;22628:47:5;;22624:627;;22733:1;22723:11;;22701:19;22856:30;;;:17;:30;;;;;;22852:384;;22994:13;;22979:11;:28;22975:242;;23141:30;;;;:17;:30;;;;;:52;;;22975:242;22682:569;22624:627;23298:7;23294:2;-1:-1:-1;;;;;23279:27:5;23288:4;-1:-1:-1;;;;;23279:27:5;;;;;;;;;;;20673:2694;;;20550:2817;;;:::o;23463:185::-;23601:39;23618:4;23624:2;23628:7;23601:39;;;;;;;;;;;;:16;:39::i;:::-;23463:185;;;:::o;11821:152::-;11893:7;11936:27;11955:7;11936:18;:27::i;7363:233::-;7435:7;-1:-1:-1;;;;;7459:19:5;;7455:60;;7487:28;;-1:-1:-1;;;7487:28:5;;;;;;;;;;;7455:60;-1:-1:-1;;;;;;7533:25:5;;;;;:18;:25;;;;;;1522:13;7533:55;;7363:233::o;10604:104::-;10660:13;10693:7;10686:14;;;;;:::i;17469:234::-;40407:10;17564:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;17564:49:5;;;;;;;;;;;;:60;;-1:-1:-1;;17564:60:5;;;;;;;;;;17640:55;;5002:41:8;;;17564:49:5;;40407:10;17640:55;;4975:18:8;17640:55:5;;;;;;;17469:234;;:::o;24246:399::-;24413:31;24426:4;24432:2;24436:7;24413:12;:31::i;:::-;-1:-1:-1;;;;;24459:14:5;;;:19;24455:183;;24498:56;24529:4;24535:2;24539:7;24548:5;24498:30;:56::i;:::-;24493:145;;24582:40;;-1:-1:-1;;;24582:40:5;;;;;;;;;;;24493:145;24246:399;;;;:::o;10814:318::-;10887:13;10918:16;10926:7;10918;:16::i;:::-;10913:59;;10943:29;;-1:-1:-1;;;10943:29:5;;;;;;;;;;;10913:59;10985:21;11009:10;11461:9;;;;;;;;;-1:-1:-1;11461:9:5;;;11384:94;11009:10;10985:34;;11043:7;11037:21;11062:1;11037:26;;:87;;;;;;;;;;;;;;;;;11090:7;11099:18;11109:7;11099:9;:18::i;:::-;11073:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11037:87;11030:94;10814:318;-1:-1:-1;;;10814:318:5:o;18282:282::-;18347:4;18437:13;;18427:7;:23;18384:153;;;;-1:-1:-1;;18488:26:5;;;;:17;:26;;;;;;-1:-1:-1;;;18488:44:5;:49;;18282:282::o;12976:1275::-;13043:7;13078;13180:13;;13173:4;:20;13169:1015;;;13218:14;13235:23;;;:17;:23;;;;;;-1:-1:-1;;;13324:24:5;;13320:845;;13989:113;13996:11;13989:113;;-1:-1:-1;;;14067:6:5;14049:25;;;;:17;:25;;;;;;13989:113;;13320:845;13195:989;13169:1015;14212:31;;-1:-1:-1;;;14212:31:5;;;;;;;;;;;26729:716;26913:88;;-1:-1:-1;;;26913:88:5;;26892:4;;-1:-1:-1;;;;;26913:45:5;;;;;:88;;40407:10;;26980:4;;26986:7;;26995:5;;26913:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26913:88:5;;;;;;;;-1:-1:-1;;26913:88:5;;;;;;;;;;;;:::i;:::-;;;26909:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27196:13:5;;27192:235;;27242:40;;-1:-1:-1;;;27242:40:5;;;;;;;;;;;27192:235;27385:6;27379:13;27370:6;27366:2;27362:15;27355:38;26909:529;-1:-1:-1;;;;;;27072:64:5;-1:-1:-1;;;27072:64:5;;-1:-1:-1;26729:716:5;;;;;;:::o;40527:1582::-;41011:4;41005:11;;41018:4;41001:22;41097:17;;;;41001:22;41455:5;41437:428;41503:1;41498:3;41494:11;41487:18;;41674:2;41668:4;41664:13;41660:2;41656:22;41651:3;41643:36;41768:2;41758:13;;;41825:25;;41843:5;;41825:25;41437:428;;;-1:-1:-1;41895:13:5;;;-1:-1:-1;;42010:14:5;;;42072:19;;;42010:14;40527:1582;-1:-1:-1;40527:1582:5:o;14:173:8:-;82:20;;-1:-1:-1;;;;;131:31:8;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:1138::-;1076:6;1084;1092;1100;1153:3;1141:9;1132:7;1128:23;1124:33;1121:53;;;1170:1;1167;1160:12;1121:53;1193:29;1212:9;1193:29;:::i;:::-;1183:39;;1241:38;1275:2;1264:9;1260:18;1241:38;:::i;:::-;1231:48;;1326:2;1315:9;1311:18;1298:32;1288:42;;1381:2;1370:9;1366:18;1353:32;1404:18;1445:2;1437:6;1434:14;1431:34;;;1461:1;1458;1451:12;1431:34;1499:6;1488:9;1484:22;1474:32;;1544:7;1537:4;1533:2;1529:13;1525:27;1515:55;;1566:1;1563;1556:12;1515:55;1602:2;1589:16;1624:2;1620;1617:10;1614:36;;;1630:18;;:::i;:::-;1705:2;1699:9;1673:2;1759:13;;-1:-1:-1;;1755:22:8;;;1779:2;1751:31;1747:40;1735:53;;;1803:18;;;1823:22;;;1800:46;1797:72;;;1849:18;;:::i;:::-;1889:10;1885:2;1878:22;1924:2;1916:6;1909:18;1964:7;1959:2;1954;1950;1946:11;1942:20;1939:33;1936:53;;;1985:1;1982;1975:12;1936:53;2041:2;2036;2032;2028:11;2023:2;2015:6;2011:15;1998:46;2086:1;2081:2;2076;2068:6;2064:15;2060:24;2053:35;2107:6;2097:16;;;;;;;981:1138;;;;;;;:::o;2124:347::-;2189:6;2197;2250:2;2238:9;2229:7;2225:23;2221:32;2218:52;;;2266:1;2263;2256:12;2218:52;2289:29;2308:9;2289:29;:::i;:::-;2279:39;;2368:2;2357:9;2353:18;2340:32;2415:5;2408:13;2401:21;2394:5;2391:32;2381:60;;2437:1;2434;2427:12;2381:60;2460:5;2450:15;;;2124:347;;;;;:::o;2476:254::-;2544:6;2552;2605:2;2593:9;2584:7;2580:23;2576:32;2573:52;;;2621:1;2618;2611:12;2573:52;2644:29;2663:9;2644:29;:::i;:::-;2634:39;2720:2;2705:18;;;;2692:32;;-1:-1:-1;;;2476:254:8:o;2735:245::-;2793:6;2846:2;2834:9;2825:7;2821:23;2817:32;2814:52;;;2862:1;2859;2852:12;2814:52;2901:9;2888:23;2920:30;2944:5;2920:30;:::i;2985:249::-;3054:6;3107:2;3095:9;3086:7;3082:23;3078:32;3075:52;;;3123:1;3120;3113:12;3075:52;3155:9;3149:16;3174:30;3198:5;3174:30;:::i;3239:180::-;3298:6;3351:2;3339:9;3330:7;3326:23;3322:32;3319:52;;;3367:1;3364;3357:12;3319:52;-1:-1:-1;3390:23:8;;3239:180;-1:-1:-1;3239:180:8:o;3424:257::-;3465:3;3503:5;3497:12;3530:6;3525:3;3518:19;3546:63;3602:6;3595:4;3590:3;3586:14;3579:4;3572:5;3568:16;3546:63;:::i;:::-;3663:2;3642:15;-1:-1:-1;;3638:29:8;3629:39;;;;3670:4;3625:50;;3424:257;-1:-1:-1;;3424:257:8:o;3686:470::-;3865:3;3903:6;3897:13;3919:53;3965:6;3960:3;3953:4;3945:6;3941:17;3919:53;:::i;:::-;4035:13;;3994:16;;;;4057:57;4035:13;3994:16;4091:4;4079:17;;4057:57;:::i;:::-;4130:20;;3686:470;-1:-1:-1;;;;3686:470:8:o;4369:488::-;-1:-1:-1;;;;;4638:15:8;;;4620:34;;4690:15;;4685:2;4670:18;;4663:43;4737:2;4722:18;;4715:34;;;4785:3;4780:2;4765:18;;4758:31;;;4563:4;;4806:45;;4831:19;;4823:6;4806:45;:::i;:::-;4798:53;4369:488;-1:-1:-1;;;;;;4369:488:8:o;5054:219::-;5203:2;5192:9;5185:21;5166:4;5223:44;5263:2;5252:9;5248:18;5240:6;5223:44;:::i;5460:258::-;5532:1;5542:113;5556:6;5553:1;5550:13;5542:113;;;5632:11;;;5626:18;5613:11;;;5606:39;5578:2;5571:10;5542:113;;;5673:6;5670:1;5667:13;5664:48;;;-1:-1:-1;;5708:1:8;5690:16;;5683:27;5460:258::o;5723:380::-;5802:1;5798:12;;;;5845;;;5866:61;;5920:4;5912:6;5908:17;5898:27;;5866:61;5973:2;5965:6;5962:14;5942:18;5939:38;5936:161;;;6019:10;6014:3;6010:20;6007:1;6000:31;6054:4;6051:1;6044:15;6082:4;6079:1;6072:15;5936:161;;5723:380;;;:::o;6108:127::-;6169:10;6164:3;6160:20;6157:1;6150:31;6200:4;6197:1;6190:15;6224:4;6221:1;6214:15;6240:131;-1:-1:-1;;;;;;6314:32:8;;6304:43;;6294:71;;6361:1;6358;6351:12;6294:71;6240:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "660800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2640",
								"getApproved(uint256)": "6925",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26607",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4432",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4337",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedSlotAndAddress(uint256)": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5273,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 5268,
									"end": 5273,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 5292,
									"end": 5299,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5751,
									"end": 5758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5320,
									"end": 5351,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5320,
									"end": 5351,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 42112,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200724ed5c4f4339f9517ba7bfe9ba7865470ee7b602f0e642f3f82f3a1232000064736f6c63430008070033",
									".code": [
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "6352211E"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "A22CB465"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "A22CB465"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "B88D4FDE"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "C87B56DD"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "E985E9C5"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "6352211E"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "42842E0E"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A7"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "81812FC"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1089,
											"end": 42112,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5027,
											"end": 5041,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5027,
											"end": 5041,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5020,
											"end": 5042,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4307,
											"end": 4358,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4307,
											"end": 4358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4297,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4161,
											"end": 4364,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6240,
											"end": 6247,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6437,
											"end": 6450,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6437,
											"end": 6465,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5424,
											"end": 5449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5424,
											"end": 5449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5424,
											"end": 5449,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5412,
											"end": 5414,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5278,
											"end": 5455,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17957,
											"end": 17961,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 17999,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9615,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 9935,
											"end": 10037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10012,
											"end": 10037,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10012,
											"end": 10037,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10012,
											"end": 10037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 10037,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 9935,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 10114,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 9935,
											"end": 10114,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10089,
											"end": 10114,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10089,
											"end": 10114,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10089,
											"end": 10114,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 10114,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 9935,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9915,
											"end": 10114,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10482,
											"end": 10495,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10515,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16987,
											"end": 16994,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17012,
											"end": 17028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 17020,
											"end": 17027,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17012,
											"end": 17019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 17012,
											"end": 17028,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17012,
											"end": 17028,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 17012,
											"end": 17028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17007,
											"end": 17071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 17007,
											"end": 17071,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17007,
											"end": 17071,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 17007,
											"end": 17071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17091,
											"end": 17106,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17091,
											"end": 17121,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17091,
											"end": 17121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17091,
											"end": 17121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16433,
											"end": 16446,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16449,
											"end": 16465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 16457,
											"end": 16464,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16449,
											"end": 16456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 16449,
											"end": 16465,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16449,
											"end": 16465,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 16449,
											"end": 16465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16433,
											"end": 16465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16482,
											"end": 16510,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16482,
											"end": 16510,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16482,
											"end": 16510,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 16478,
											"end": 16653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 16478,
											"end": 16653,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16530,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 16547,
											"end": 16552,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16530,
											"end": 16574,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 16530,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16525,
											"end": 16653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 16525,
											"end": 16653,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16525,
											"end": 16653,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 16525,
											"end": 16653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16680,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 16422,
											"end": 16752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20684,
											"end": 20711,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 20714,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 20733,
											"end": 20740,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 20714,
											"end": 20732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 20714,
											"end": 20741,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 20714,
											"end": 20741,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 20714,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20684,
											"end": 20741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20684,
											"end": 20741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20799,
											"end": 20803,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20758,
											"end": 20803,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 20774,
											"end": 20793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20758,
											"end": 20803,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 20758,
											"end": 20803,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 20754,
											"end": 20840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 20754,
											"end": 20840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 20754,
											"end": 20840,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 20754,
											"end": 20840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20854,
											"end": 20881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19658,
											"end": 19673,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 19886,
											"end": 19912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 19886,
											"end": 19912,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 19283,
											"end": 19313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 19283,
											"end": 19313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19283,
											"end": 19313,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18976,
											"end": 19004,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 18976,
											"end": 19004,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 19258,
											"end": 19314,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 21040,
											"end": 21220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 21040,
											"end": 21220,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21133,
											"end": 21176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 21150,
											"end": 21154,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 21133,
											"end": 21176,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 21133,
											"end": 21176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21128,
											"end": 21220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 21128,
											"end": 21220,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 21128,
											"end": 21220,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 21128,
											"end": 21220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21237,
											"end": 21253,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 21237,
											"end": 21253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21233,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 21233,
											"end": 21285,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 21233,
											"end": 21285,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 21233,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21434,
											"end": 21449,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21574,
											"end": 21575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 21553,
											"end": 21572,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 21546,
											"end": 21576,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21989,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 22038,
											"end": 22062,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 22038,
											"end": 22062,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 22038,
											"end": 22062,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 22038,
											"end": 22062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22038,
											"end": 22062,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15210,
											"end": 15221,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 15185,
											"end": 15208,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 15181,
											"end": 15222,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 15168,
											"end": 15231,
											"name": "OR",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15168,
											"end": 15231,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22333,
											"end": 22350,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 22333,
											"end": 22508,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22628,
											"end": 22675,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 22628,
											"end": 22675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 22624,
											"end": 23251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 22624,
											"end": 23251,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 22733,
											"end": 22734,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 22723,
											"end": 22734,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 22723,
											"end": 22734,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 22701,
											"end": 22720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22856,
											"end": 22873,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22852,
											"end": 23236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 22852,
											"end": 23236,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 22994,
											"end": 23007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22994,
											"end": 23007,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22979,
											"end": 22990,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22979,
											"end": 23007,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 22975,
											"end": 23217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 22975,
											"end": 23217,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23158,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23193,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23193,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 22975,
											"end": 23217,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 22975,
											"end": 23217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22682,
											"end": 23251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 22624,
											"end": 23251,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 22624,
											"end": 23251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23298,
											"end": 23305,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23294,
											"end": 23296,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 23288,
											"end": 23292,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 20673,
											"end": 23367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20673,
											"end": 23367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20673,
											"end": 23367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 23618,
											"end": 23622,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23624,
											"end": 23626,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23628,
											"end": 23635,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11893,
											"end": 11900,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11936,
											"end": 11963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 11955,
											"end": 11962,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11936,
											"end": 11954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 11936,
											"end": 11963,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7435,
											"end": 7442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7459,
											"end": 7478,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7459,
											"end": 7478,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 7455,
											"end": 7515,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7515,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 7455,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7551,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7533,
											"end": 7588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10660,
											"end": 10673,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10693,
											"end": 10700,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17582,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24413,
											"end": 24444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 24426,
											"end": 24430,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24432,
											"end": 24434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24436,
											"end": 24443,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24413,
											"end": 24425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 24413,
											"end": 24444,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 24413,
											"end": 24444,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 24413,
											"end": 24444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24459,
											"end": 24473,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 24459,
											"end": 24473,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 24459,
											"end": 24473,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 24459,
											"end": 24478,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 24455,
											"end": 24638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 24455,
											"end": 24638,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 24529,
											"end": 24533,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24535,
											"end": 24537,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24539,
											"end": 24546,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24548,
											"end": 24553,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 24498,
											"end": 24554,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 24498,
											"end": 24554,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 24498,
											"end": 24554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24493,
											"end": 24638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 24493,
											"end": 24638,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 24493,
											"end": 24638,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 24493,
											"end": 24638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10887,
											"end": 10900,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 10926,
											"end": 10933,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10918,
											"end": 10925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 10918,
											"end": 10934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10913,
											"end": 10972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 10913,
											"end": 10972,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A14C4B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10943,
											"end": 10972,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10913,
											"end": 10972,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 10913,
											"end": 10972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10985,
											"end": 11006,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11009,
											"end": 11019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11461,
											"end": 11470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11384,
											"end": 11478,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11009,
											"end": 11019,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 11009,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10985,
											"end": 11019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10985,
											"end": 11019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11043,
											"end": 11050,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11058,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11062,
											"end": 11063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11037,
											"end": 11063,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11063,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11090,
											"end": 11097,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11099,
											"end": 11117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 11109,
											"end": 11116,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11099,
											"end": 11108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 11099,
											"end": 11117,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11099,
											"end": 11117,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 11099,
											"end": 11117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 11073,
											"end": 11118,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 11037,
											"end": 11124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11030,
											"end": 11124,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10814,
											"end": 11132,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18282,
											"end": 18564,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 18282,
											"end": 18564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18347,
											"end": 18351,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18437,
											"end": 18450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18437,
											"end": 18450,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 18427,
											"end": 18434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18427,
											"end": 18450,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 18384,
											"end": 18537,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18384,
											"end": 18537,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 18384,
											"end": 18537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 18384,
											"end": 18537,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18505,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18488,
											"end": 18532,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18537,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18282,
											"end": 18564,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12976,
											"end": 14251,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 12976,
											"end": 14251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13043,
											"end": 13050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13078,
											"end": 13085,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13180,
											"end": 13193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13180,
											"end": 13193,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13173,
											"end": 13177,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13173,
											"end": 13193,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 13169,
											"end": 14184,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13169,
											"end": 14184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 13169,
											"end": 14184,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13218,
											"end": 13232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13235,
											"end": 13252,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13324,
											"end": 13348,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13324,
											"end": 13348,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13320,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 13320,
											"end": 14165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13996,
											"end": 14007,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14067,
											"end": 14073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14049,
											"end": 14066,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13320,
											"end": 14165,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 13320,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13195,
											"end": 14184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13169,
											"end": 14184,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 13169,
											"end": 14184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26892,
											"end": 26896,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26892,
											"end": 26896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26913,
											"end": 26958,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 26958,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 26958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 26958,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 26913,
											"end": 26958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26980,
											"end": 26984,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 26980,
											"end": 26984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26986,
											"end": 26993,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 26986,
											"end": 26993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26995,
											"end": 27000,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 26995,
											"end": 27000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27196,
											"end": 27209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27196,
											"end": 27209,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 27192,
											"end": 27427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 27192,
											"end": 27427,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 27192,
											"end": 27427,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 27192,
											"end": 27427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 27385,
											"end": 27391,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27379,
											"end": 27392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 27370,
											"end": 27376,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 27366,
											"end": 27368,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 27362,
											"end": 27377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 27355,
											"end": 27393,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 27072,
											"end": 27136,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27072,
											"end": 27136,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 27072,
											"end": 27136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 40527,
											"end": 42109,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 40527,
											"end": 42109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 41011,
											"end": 41015,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 41005,
											"end": 41016,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 41005,
											"end": 41016,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 41018,
											"end": 41022,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 41001,
											"end": 41023,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 41097,
											"end": 41114,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 41097,
											"end": 41114,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 41097,
											"end": 41114,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 41097,
											"end": 41114,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 41001,
											"end": 41023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 41455,
											"end": 41460,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 41437,
											"end": 41865,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 41437,
											"end": 41865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 41503,
											"end": 41504,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 41498,
											"end": 41501,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 41494,
											"end": 41505,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 41487,
											"end": 41505,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 41487,
											"end": 41505,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 41674,
											"end": 41676,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 41668,
											"end": 41672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 41664,
											"end": 41677,
											"name": "MOD",
											"source": 5
										},
										{
											"begin": 41660,
											"end": 41662,
											"name": "PUSH",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 41656,
											"end": 41678,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 41651,
											"end": 41654,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 41643,
											"end": 41679,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 41768,
											"end": 41770,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 41758,
											"end": 41771,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 41758,
											"end": 41771,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 41758,
											"end": 41771,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 41825,
											"end": 41850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 41825,
											"end": 41850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 41843,
											"end": 41848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 41843,
											"end": 41848,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 41825,
											"end": 41850,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 41825,
											"end": 41850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 41437,
											"end": 41865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 41437,
											"end": 41865,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 41437,
											"end": 41865,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 41437,
											"end": 41865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41895,
											"end": 41908,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 41895,
											"end": 41908,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 41895,
											"end": 41908,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 42010,
											"end": 42024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 42010,
											"end": 42024,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 42010,
											"end": 42024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 42072,
											"end": 42091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 42072,
											"end": 42091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 42072,
											"end": 42091,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 42010,
											"end": 42024,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 40527,
											"end": 42109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40527,
											"end": 42109,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1153,
											"end": 1156,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1139,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1128,
											"end": 1151,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1124,
											"end": 1157,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1170,
											"end": 1171,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1168,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1160,
											"end": 1172,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1212,
											"end": 1221,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1183,
											"end": 1222,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1183,
											"end": 1222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1275,
											"end": 1277,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1279,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1279,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1326,
											"end": 1328,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1311,
											"end": 1329,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1298,
											"end": 1330,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1330,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1288,
											"end": 1330,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1381,
											"end": 1383,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 1379,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1404,
											"end": 1422,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1445,
											"end": 1447,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1451,
											"end": 1463,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1506,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1506,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1506,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1537,
											"end": 1541,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1533,
											"end": 1535,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1542,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1525,
											"end": 1552,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1566,
											"end": 1567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1556,
											"end": 1568,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1589,
											"end": 1605,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1626,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1617,
											"end": 1627,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1708,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1673,
											"end": 1675,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1781,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 1751,
											"end": 1782,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1747,
											"end": 1787,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 1846,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1889,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1885,
											"end": 1887,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1900,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1924,
											"end": 1926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1916,
											"end": 1922,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1909,
											"end": 1927,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1964,
											"end": 1971,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1954,
											"end": 1956,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1952,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1962,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 1972,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 1986,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1987,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2043,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2028,
											"end": 2039,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2023,
											"end": 2025,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2011,
											"end": 2026,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1998,
											"end": 2044,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2083,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2088,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2250,
											"end": 2252,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2248,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2221,
											"end": 2253,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2256,
											"end": 2268,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2308,
											"end": 2317,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2318,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2318,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2370,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 2366,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2372,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2420,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2401,
											"end": 2422,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2394,
											"end": 2399,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2391,
											"end": 2423,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2435,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 2550,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2607,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2593,
											"end": 2602,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2584,
											"end": 2591,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2621,
											"end": 2622,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2623,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2663,
											"end": 2672,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2634,
											"end": 2673,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2720,
											"end": 2722,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2692,
											"end": 2724,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2692,
											"end": 2724,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2735,
											"end": 2980,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 2735,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2793,
											"end": 2799,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2848,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2843,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2825,
											"end": 2832,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2821,
											"end": 2844,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2817,
											"end": 2849,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2862,
											"end": 2863,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 2910,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 2911,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2944,
											"end": 2949,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3234,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2985,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3060,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3109,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3078,
											"end": 3110,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3124,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3120,
											"end": 3121,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3113,
											"end": 3125,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3149,
											"end": 3165,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3298,
											"end": 3304,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3353,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3337,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3349,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3322,
											"end": 3354,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3367,
											"end": 3368,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3365,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3357,
											"end": 3369,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3413,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3390,
											"end": 3413,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3468,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3508,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3497,
											"end": 3509,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3530,
											"end": 3536,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3525,
											"end": 3528,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3518,
											"end": 3537,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3602,
											"end": 3608,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3595,
											"end": 3599,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3590,
											"end": 3593,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3586,
											"end": 3600,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3583,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3577,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3568,
											"end": 3584,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3674,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3675,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3625,
											"end": 3675,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 3868,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3909,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3965,
											"end": 3971,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3953,
											"end": 3957,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3945,
											"end": 3951,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3941,
											"end": 3958,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4048,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4035,
											"end": 4048,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 4035,
											"end": 4048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4091,
											"end": 4095,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4096,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4079,
											"end": 4096,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4130,
											"end": 4150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4130,
											"end": 4150,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4654,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4620,
											"end": 4654,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4685,
											"end": 4687,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4706,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4737,
											"end": 4739,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4722,
											"end": 4740,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4722,
											"end": 4740,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4749,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4749,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4785,
											"end": 4788,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4780,
											"end": 4782,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4765,
											"end": 4783,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4765,
											"end": 4783,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4758,
											"end": 4789,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4758,
											"end": 4789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4758,
											"end": 4789,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4831,
											"end": 4850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4831,
											"end": 4850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4823,
											"end": 4829,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4798,
											"end": 4851,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5054,
											"end": 5273,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 5054,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5203,
											"end": 5205,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5201,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5206,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 5263,
											"end": 5265,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5252,
											"end": 5261,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5223,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 5223,
											"end": 5267,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5460,
											"end": 5718,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 5460,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5532,
											"end": 5533,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5556,
											"end": 5562,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5553,
											"end": 5554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5550,
											"end": 5563,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5643,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5643,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5626,
											"end": 5644,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5613,
											"end": 5624,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5613,
											"end": 5624,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5613,
											"end": 5624,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5606,
											"end": 5645,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5578,
											"end": 5580,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5571,
											"end": 5581,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5542,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5673,
											"end": 5679,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5670,
											"end": 5671,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5667,
											"end": 5680,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5712,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 5664,
											"end": 5712,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5708,
											"end": 5709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5706,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5690,
											"end": 5706,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5683,
											"end": 5710,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5718,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5723,
											"end": 6103,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 5723,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5802,
											"end": 5803,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 5798,
											"end": 5810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5845,
											"end": 5857,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5845,
											"end": 5857,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5845,
											"end": 5857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5866,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5866,
											"end": 5927,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5920,
											"end": 5924,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 5912,
											"end": 5918,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5908,
											"end": 5925,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 5925,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5898,
											"end": 5925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5866,
											"end": 5927,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5866,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5973,
											"end": 5975,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5965,
											"end": 5971,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5962,
											"end": 5976,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5942,
											"end": 5960,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5939,
											"end": 5977,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 6097,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 5936,
											"end": 6097,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6029,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 6014,
											"end": 6017,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6010,
											"end": 6030,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6007,
											"end": 6008,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6000,
											"end": 6031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6054,
											"end": 6058,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6051,
											"end": 6052,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6044,
											"end": 6059,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 6097,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 5936,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5936,
											"end": 6097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5723,
											"end": 6103,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5723,
											"end": 6103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5723,
											"end": 6103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5723,
											"end": 6103,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6108,
											"end": 6235,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 6108,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6169,
											"end": 6179,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 6164,
											"end": 6167,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6160,
											"end": 6180,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6150,
											"end": 6181,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6204,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 6197,
											"end": 6198,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6190,
											"end": 6205,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6224,
											"end": 6228,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6221,
											"end": 6222,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6229,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6371,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 6240,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6314,
											"end": 6346,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6314,
											"end": 6346,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6347,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6304,
											"end": 6347,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 6294,
											"end": 6365,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6358,
											"end": 6359,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6351,
											"end": 6363,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6365,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 6294,
											"end": 6365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6240,
											"end": 6371,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"contracts/ERC721A.sol\":{\"keccak256\":\"0xb0471dec724f0725c1bcbad030b9e84f9b0eb81b5ded06e14eaa549a32dfbb0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://552b6961ee7704c1f7a059d54aa6207ae2df5de4eaec77bd6dbc0b0c2a8f6aec\",\"dweb:/ipfs/QmRME5NFYsQdWBW7WLMbLFnwAejEuexqFjd9S5VkD4iQuo\"]},\"contracts/IERC721A.sol\":{\"keccak256\":\"0x62c93219335387b2052d161c29a3b38bcdb89cff897d19a5276738c44a825ee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c31b2128eed6dcaedbf256024ce4e2a104a3dfab635f1af34dfb304ea38fd556\",\"dweb:/ipfs/QmXpXFocJBGTPua7Wc7HwbbSbD1cAAe51L5daFYyFqsozS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 790,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 792,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 794,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 796,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 800,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 804,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 809,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)722_storage)"
							},
							{
								"astId": 815,
								"contract": "contracts/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)722_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)722_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)722_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 721,
										"contract": "contracts/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"contracts/ERC721A.sol\":{\"keccak256\":\"0xb0471dec724f0725c1bcbad030b9e84f9b0eb81b5ded06e14eaa549a32dfbb0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://552b6961ee7704c1f7a059d54aa6207ae2df5de4eaec77bd6dbc0b0c2a8f6aec\",\"dweb:/ipfs/QmRME5NFYsQdWBW7WLMbLFnwAejEuexqFjd9S5VkD4iQuo\"]},\"contracts/IERC721A.sol\":{\"keccak256\":\"0x62c93219335387b2052d161c29a3b38bcdb89cff897d19a5276738c44a825ee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c31b2128eed6dcaedbf256024ce4e2a104a3dfab635f1af34dfb304ea38fd556\",\"dweb:/ipfs/QmXpXFocJBGTPua7Wc7HwbbSbD1cAAe51L5daFYyFqsozS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC721A.sol\":{\"keccak256\":\"0x62c93219335387b2052d161c29a3b38bcdb89cff897d19a5276738c44a825ee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c31b2128eed6dcaedbf256024ce4e2a104a3dfab635f1af34dfb304ea38fd556\",\"dweb:/ipfs/QmXpXFocJBGTPua7Wc7HwbbSbD1cAAe51L5daFYyFqsozS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/imiltestTwo.sol": {
				"imiltestTwo": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_initBaseURI",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_initClaimURI",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "AllowlistLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "addressMintedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowlist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"name": "allowlistUsers",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "baseExtension",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claim",
									"type": "uint256"
								}
							],
							"name": "checkClaimed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "claimActiveByPhase",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claim",
									"type": "uint256"
								}
							],
							"name": "claimItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "claimPhaseByToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "claimedItemByPhase",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cost",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentSet",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "isAllowlisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_mintAmount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onlyAllowlisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								}
							],
							"name": "ownerOfTokenIds",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_state",
									"type": "bool"
								}
							],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"name": "removeUsersFromAllowlist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_newBaseExtension",
									"type": "string"
								}
							],
							"name": "setBaseExtension",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_newBaseURI",
									"type": "string"
								}
							],
							"name": "setBaseURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_newClaimURI",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "claim",
									"type": "uint256"
								}
							],
							"name": "setClaimURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "setTotal",
									"type": "uint256"
								}
							],
							"name": "setCurrentSetAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_state",
									"type": "bool"
								}
							],
							"name": "setOnlyAllowlisted",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_state",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "claim",
									"type": "uint256"
								}
							],
							"name": "toggleClaim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/imiltestTwo.sol\":359:396  string public baseExtension = \".json\" */\n  0xc0\n    /* \"contracts/imiltestTwo.sol\":205:5632  contract imiltestTwo is Ownable, ERC721A, ReentrancyGuard {... */\n  0x40\n    /* \"contracts/imiltestTwo.sol\":359:396  string public baseExtension = \".json\" */\n  mstore\n  0x05\n    /* \"contracts/imiltestTwo.sol\":205:5632  contract imiltestTwo is Ownable, ERC721A, ReentrancyGuard {... */\n  0x80\n    /* \"contracts/imiltestTwo.sol\":359:396  string public baseExtension = \".json\" */\n  dup2\n  swap1\n  mstore\n  shl(0xd9, 0x173539b7b7)\n  0xa0\n  swap1\n  dup2\n  mstore\n  tag_1\n  swap2\n  0x0c\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/imiltestTwo.sol\":425:436  0.033 ether */\n  0x753d533d968000\n    /* \"contracts/imiltestTwo.sol\":403:436  uint256 public cost = 0.033 ether */\n  0x0d\n  sstore\n    /* \"contracts/imiltestTwo.sol\":468:470  69 */\n  0x45\n    /* \"contracts/imiltestTwo.sol\":441:470  uint256 public maxSupply = 69 */\n  0x0e\n  sstore\n    /* \"contracts/imiltestTwo.sol\":503:504  9 */\n  0x09\n    /* \"contracts/imiltestTwo.sol\":475:504  uint256 public currentSet = 9 */\n  0x0f\n  sstore\n    /* \"contracts/imiltestTwo.sol\":541:542  5 */\n  0x05\n    /* \"contracts/imiltestTwo.sol\":509:542  uint256 public AllowlistLimit = 5 */\n  0x10\n  sstore\n    /* \"contracts/imiltestTwo.sol\":549:575  bool public paused = false */\n  0x11\n  dup1\n  sload\n  not(0xff)\n  swap1\n  dup2\n  and\n  swap1\n  swap2\n  sstore\n    /* \"contracts/imiltestTwo.sol\":767:802  bool public onlyAllowlisted = false */\n  0x15\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  sstore\n    /* \"contracts/imiltestTwo.sol\":915:1098  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_4\n  swap2\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"contracts/ERC721A.sol\":5201:5359  constructor(string memory name_, string memory symbol_) {\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc1, 0x34b6b4ba32b9ba19)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x494d49)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_11:\n    /* \"contracts/ERC721A.sol\":5268:5281  _name = name_ */\n  dup2\n  mload\n  tag_16\n  swap1\n    /* \"contracts/ERC721A.sol\":5268:5273  _name */\n  0x03\n  swap1\n    /* \"contracts/ERC721A.sol\":5268:5281  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_16:\n  pop\n    /* \"contracts/ERC721A.sol\":5292:5309  _symbol = symbol_ */\n  dup1\n  mload\n  tag_17\n  swap1\n    /* \"contracts/ERC721A.sol\":5292:5299  _symbol */\n  0x04\n  swap1\n    /* \"contracts/ERC721A.sol\":5292:5309  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_17:\n  pop\n  pop\n    /* \"contracts/ERC721A.sol\":5751:5758  uint256 */\n  0x00\n    /* \"contracts/ERC721A.sol\":5320:5333  _currentIndex */\n  0x01\n    /* \"contracts/ERC721A.sol\":5320:5351  _currentIndex = _startTokenId() */\n  swap1\n  dup2\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x09\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  sstore\n  pop\n    /* \"contracts/imiltestTwo.sol\":1033:1057  setBaseURI(_initBaseURI) */\n  tag_22\n    /* \"contracts/imiltestTwo.sol\":1044:1056  _initBaseURI */\n  dup3\n    /* \"contracts/imiltestTwo.sol\":1033:1043  setBaseURI */\n  tag_23\n    /* \"contracts/imiltestTwo.sol\":1033:1057  setBaseURI(_initBaseURI) */\n  jump\t// in\ntag_22:\n    /* \"contracts/imiltestTwo.sol\":1064:1092  setClaimURI(_initClaimURI,1) */\n  tag_24\n    /* \"contracts/imiltestTwo.sol\":1076:1089  _initClaimURI */\n  dup2\n    /* \"contracts/imiltestTwo.sol\":1090:1091  1 */\n  0x01\n    /* \"contracts/imiltestTwo.sol\":1064:1075  setClaimURI */\n  tag_25\n    /* \"contracts/imiltestTwo.sol\":1064:1092  setClaimURI(_initClaimURI,1) */\n  jump\t// in\ntag_24:\n    /* \"contracts/imiltestTwo.sol\":915:1098  constructor(... */\n  pop\n  pop\n    /* \"contracts/imiltestTwo.sol\":205:5632  contract imiltestTwo is Ownable, ERC721A, ReentrancyGuard {... */\n  jump(tag_58)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/imiltestTwo.sol\":4022:4120  function setBaseURI(string memory _newBaseURI) public onlyOwner {... */\ntag_23:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n  tag_31\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n  tag_32\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n  jump\t// in\ntag_31:\n    /* \"contracts/imiltestTwo.sol\":4093:4114  baseURI = _newBaseURI */\n  dup1\n  mload\n  tag_34\n  swap1\n    /* \"contracts/imiltestTwo.sol\":4093:4100  baseURI */\n  0x0a\n  swap1\n    /* \"contracts/imiltestTwo.sol\":4093:4114  baseURI = _newBaseURI */\n  0x20\n  dup5\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_34:\n  pop\n    /* \"contracts/imiltestTwo.sol\":4022:4120  function setBaseURI(string memory _newBaseURI) public onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"contracts/imiltestTwo.sol\":4127:4248  function setClaimURI(string memory _newClaimURI, uint claim) public onlyOwner {... */\ntag_25:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n  tag_36\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n  tag_32\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n  jump\t// in\ntag_36:\n    /* \"contracts/imiltestTwo.sol\":4212:4227  claimURI[claim] */\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"contracts/imiltestTwo.sol\":4212:4220  claimURI */\n  0x0b\n    /* \"contracts/imiltestTwo.sol\":4212:4227  claimURI[claim] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/imiltestTwo.sol\":4212:4242  claimURI[claim] = _newClaimURI */\n  dup4\n  mload\n  tag_38\n  swap3\n  dup6\n  add\n  swap1\n  tag_2\n  jump\t// in\ntag_38:\n  pop\n    /* \"contracts/imiltestTwo.sol\":4127:4248  function setClaimURI(string memory _newClaimURI, uint claim) public onlyOwner {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\ntag_32:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  tag_43\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1673:1675   */\n  0x20\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1655:1676   */\n  dup2\n  swap1\n  mstore\n    /* \"#utility.yul\":1692:1710   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1685:1715   */\n  mstore\n    /* \"#utility.yul\":1751:1785   */\n  0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n    /* \"#utility.yul\":1731:1749   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1724:1786   */\n  mstore\n    /* \"#utility.yul\":1803:1821   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_43:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n  jump\t// out\n    /* \"contracts/imiltestTwo.sol\":205:5632  contract imiltestTwo is Ownable, ERC721A, ReentrancyGuard {... */\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_47\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_50\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_53)\ntag_50:\n  dup3\n  0x1f\n  lt\n  tag_51\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_53)\ntag_51:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_53\n  jumpi\n  swap2\n  dup3\n  add\ntag_52:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_53\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_52)\ntag_53:\n  pop\n  tag_54\n  swap3\n  swap2\n  pop\n  tag_55\n  jump\t// in\ntag_54:\n  pop\n  swap1\n  jump\t// out\ntag_55:\ntag_56:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_54\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_56)\n    /* \"#utility.yul\":14:899   */\ntag_59:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_61:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_63\n  tag_64\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_66\n  tag_64\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_67:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_68:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_68)\ntag_70:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_71:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_5:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_73:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_74:\n    /* \"#utility.yul\":1222:1283   */\n  tag_75\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_59\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_76:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_77\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_59\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1832:2212   */\ntag_48:\n    /* \"#utility.yul\":1911:1912   */\n  0x01\n    /* \"#utility.yul\":1907:1919   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1954:1966   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1975:2036   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2029:2033   */\n  0x7f\n    /* \"#utility.yul\":2021:2027   */\n  dup3\n    /* \"#utility.yul\":2017:2034   */\n  and\n    /* \"#utility.yul\":2007:2034   */\n  swap2\n  pop\n    /* \"#utility.yul\":1975:2036   */\ntag_80:\n    /* \"#utility.yul\":2082:2084   */\n  0x20\n    /* \"#utility.yul\":2074:2080   */\n  dup3\n    /* \"#utility.yul\":2071:2085   */\n  lt\n    /* \"#utility.yul\":2051:2069   */\n  dup2\n    /* \"#utility.yul\":2048:2086   */\n  eq\n    /* \"#utility.yul\":2045:2206   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2128:2138   */\n  0x4e487b71\n    /* \"#utility.yul\":2123:2126   */\n  0xe0\n    /* \"#utility.yul\":2119:2139   */\n  shl\n    /* \"#utility.yul\":2116:2117   */\n  0x00\n    /* \"#utility.yul\":2109:2140   */\n  mstore\n    /* \"#utility.yul\":2163:2167   */\n  0x22\n    /* \"#utility.yul\":2160:2161   */\n  0x04\n    /* \"#utility.yul\":2153:2168   */\n  mstore\n    /* \"#utility.yul\":2191:2195   */\n  0x24\n    /* \"#utility.yul\":2188:2189   */\n  0x00\n    /* \"#utility.yul\":2181:2196   */\n  revert\n    /* \"#utility.yul\":2045:2206   */\ntag_81:\n  pop\n    /* \"#utility.yul\":1832:2212   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2217:2344   */\ntag_64:\n    /* \"#utility.yul\":2278:2288   */\n  0x4e487b71\n    /* \"#utility.yul\":2273:2276   */\n  0xe0\n    /* \"#utility.yul\":2269:2289   */\n  shl\n    /* \"#utility.yul\":2266:2267   */\n  0x00\n    /* \"#utility.yul\":2259:2290   */\n  mstore\n    /* \"#utility.yul\":2309:2313   */\n  0x41\n    /* \"#utility.yul\":2306:2307   */\n  0x04\n    /* \"#utility.yul\":2299:2314   */\n  mstore\n    /* \"#utility.yul\":2333:2337   */\n  0x24\n    /* \"#utility.yul\":2330:2331   */\n  0x00\n    /* \"#utility.yul\":2323:2338   */\n  revert\n    /* \"#utility.yul\":2217:2344   */\ntag_58:\n    /* \"contracts/imiltestTwo.sol\":205:5632  contract imiltestTwo is Ownable, ERC721A, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/imiltestTwo.sol\":205:5632  contract imiltestTwo is Ownable, ERC721A, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x674c02aa\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xb3807b1d\n      gt\n      tag_47\n      jumpi\n      dup1\n      0xc87b56dd\n      gt\n      tag_48\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xca8a7d5e\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xda3ef23f\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup1\n      0xb3807b1d\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xbf705b1c\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xc4d2e8d6\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xc6682862\n      eq\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xa7cd52cb\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xa7dc7f2a\n      eq\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      dup1\n      0x674c02aa\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x74f59666\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x85649743\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      dup1\n      0x18cae269\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x42842e0e\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x55f804b3\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x5b9e3ccf\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x5f93e9e3\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup1\n      0x18cae269\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x1ee50697\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x30b86627\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup1\n      0x095ea7b3\n      gt\n      tag_52\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x0a70a191\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x13faede6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x142b0fbe\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x17dc10c4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x02329a29\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x05a3b809\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC721A.sol\":9526:10165  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n        /* \"#utility.yul\":9216:9230   */\n      swap1\n      iszero\n        /* \"#utility.yul\":9209:9231   */\n      iszero\n        /* \"#utility.yul\":9191:9232   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9179:9181   */\n      0x20\n        /* \"#utility.yul\":9164:9182   */\n      add\n        /* \"contracts/ERC721A.sol\":9526:10165  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/imiltestTwo.sol\":4488:4563  function pause(bool _state) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/imiltestTwo.sol\":2504:2605  function isAllowlisted(address _user) public view returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_54\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/imiltestTwo.sol\":2583:2599  allowlist[_user] */\n      and\n        /* \"contracts/imiltestTwo.sol\":2563:2567  bool */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":2583:2599  allowlist[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/imiltestTwo.sol\":2583:2592  allowlist */\n      0x16\n        /* \"contracts/imiltestTwo.sol\":2583:2599  allowlist[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/imiltestTwo.sol\":2504:2605  function isAllowlisted(address _user) public view returns (bool) {... */\n      jump\n        /* \"contracts/ERC721A.sol\":10428:10528  function name() public view virtual override returns (string memory) {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":16911:17129  function getApproved(uint256 tokenId) public view virtual override returns (address) {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7877:7909   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7859:7910   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7847:7849   */\n      0x20\n        /* \"#utility.yul\":7832:7850   */\n      add\n        /* \"contracts/ERC721A.sol\":16911:17129  function getApproved(uint256 tokenId) public view virtual override returns (address) {\r... */\n      tag_58\n        /* \"#utility.yul\":7713:7916   */\n      jump\n        /* \"contracts/ERC721A.sol\":16352:16752  function approve(address to, uint256 tokenId) public virtual override {\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_61\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":3392:3502  function toggleClaim(bool _state, uint claim) public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_61\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":403:436  uint256 public cost = 0.033 ether */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_94\n      sload(0x0d)\n      dup2\n      jump\n    tag_94:\n      mload(0x40)\n        /* \"#utility.yul\":15011:15036   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":14999:15001   */\n      0x20\n        /* \"#utility.yul\":14984:15002   */\n      add\n        /* \"contracts/imiltestTwo.sol\":403:436  uint256 public cost = 0.033 ether */\n      tag_58\n        /* \"#utility.yul\":14865:15042   */\n      jump\n        /* \"contracts/imiltestTwo.sol\":4855:5045  function removeUsersFromAllowlist(address[] calldata addresses) external onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_61\n      tag_100\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":4569:4664  function setOnlyAllowlisted(bool _state) public onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_61\n      tag_105\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":6179:6502  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n        /* \"contracts/ERC721A.sol\":6453:6465  _burnCounter */\n      sload(0x02)\n        /* \"contracts/ERC721A.sol\":6437:6450  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":6437:6465  _currentIndex - _burnCounter */\n      sub\n        /* \"contracts/ERC721A.sol\":6179:6502  function totalSupply() public view virtual override returns (uint256) {\r... */\n      jump(tag_94)\n        /* \"contracts/imiltestTwo.sol\":853:908  mapping(address => uint256) public addressMintedBalance */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_94\n      tag_113\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_113:\n      mstore(0x20, 0x17)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/imiltestTwo.sol\":707:758  mapping (uint256 =>  uint) public claimPhaseByToken */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_94\n      tag_118\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_118:\n      mstore(0x20, 0x14)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/ERC721A.sol\":20550:23367  function transferFrom(\r... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_61\n      tag_123\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":475:504  uint256 public currentSet = 9 */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_94\n      sload(0x0f)\n      dup2\n      jump\n        /* \"contracts/imiltestTwo.sol\":5519:5625  function withdraw() public payable onlyOwner {... */\n    tag_17:\n      tag_61\n      tag_131\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":23463:23648  function safeTransferFrom(\r... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_61\n      tag_134\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":4022:4120  function setBaseURI(string memory _newBaseURI) public onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_61\n      tag_138\n      calldatasize\n      0x04\n      tag_139\n      jump\t// in\n    tag_138:\n      tag_140\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":4670:4849  function allowlistUsers(address[] calldata addresses) external onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_61\n      tag_143\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":549:575  bool public paused = false */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      sload(0x11)\n      tag_54\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/imiltestTwo.sol\":4127:4248  function setClaimURI(string memory _newClaimURI, uint claim) public onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_61\n      tag_151\n      calldatasize\n      0x04\n      tag_152\n      jump\t// in\n    tag_151:\n      tag_153\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":11821:11973  function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_77\n      tag_156\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":767:802  bool public onlyAllowlisted = false */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      sload(0x15)\n      tag_54\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/ERC721A.sol\":7363:7596  function balanceOf(address owner) public view virtual override returns (uint256) {\r... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_94\n      tag_165\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_165:\n      tag_166\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      tag_61\n      tag_170\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":636:702  mapping (uint =>  mapping(uint => bool)) public claimedItemByPhase */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_54\n      tag_173\n      calldatasize\n      0x04\n      tag_174\n      jump\t// in\n    tag_173:\n      0x13\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/imiltestTwo.sol\":3882:4016  function checkClaimed(uint256 tokenId, uint claim) external view returns (bool) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      tag_54\n      tag_179\n      calldatasize\n      0x04\n      tag_174\n      jump\t// in\n    tag_179:\n        /* \"contracts/imiltestTwo.sol\":3956:3960  bool */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":3976:4003  claimedItemByPhase[tokenId] */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/imiltestTwo.sol\":3976:3994  claimedItemByPhase */\n      0x13\n        /* \"contracts/imiltestTwo.sol\":3976:4003  claimedItemByPhase[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/imiltestTwo.sol\":3976:4010  claimedItemByPhase[tokenId][claim] */\n      swap3\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/imiltestTwo.sol\":3882:4016  function checkClaimed(uint256 tokenId, uint claim) external view returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_77)\n        /* \"contracts/ERC721A.sol\":10604:10708  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      tag_72\n      tag_188\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":1358:2498  function mint(uint256 _mintAmount) public payable {... */\n    tag_31:\n      tag_61\n      tag_191\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_191:\n      tag_192\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17469:17703  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      tag_61\n      tag_195\n      calldatasize\n      0x04\n      tag_196\n      jump\t// in\n    tag_195:\n      tag_197\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":807:848  mapping(address => bool) public allowlist */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_198\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_198:\n      pop\n      tag_54\n      tag_200\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_200:\n      mstore(0x20, 0x16)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/imiltestTwo.sol\":3508:3876  function claimItem(uint256 tokenId, uint claim) external {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      tag_61\n      tag_205\n      calldatasize\n      0x04\n      tag_174\n      jump\t// in\n    tag_205:\n      tag_206\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":509:542  uint256 public AllowlistLimit = 5 */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_207\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_207:\n      pop\n      tag_94\n      sload(0x10)\n      dup2\n      jump\n        /* \"contracts/ERC721A.sol\":24246:24645  function safeTransferFrom(\r... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      tag_61\n      tag_213\n      calldatasize\n      0x04\n      tag_214\n      jump\t// in\n    tag_213:\n      tag_215\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":582:631  mapping (uint =>  bool) public claimActiveByPhase */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      tag_54\n      tag_218\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_218:\n      mstore(0x20, 0x12)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/imiltestTwo.sol\":4382:4482  function setCurrentSetAmount(uint256 setTotal) external onlyOwner {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n      pop\n      tag_61\n      tag_223\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_223:\n      tag_224\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":359:396  string public baseExtension = \".json\" */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_225\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_225:\n      pop\n      tag_72\n      tag_227\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":2611:3386  function tokenURI(uint256 tokenId)... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n      pop\n      tag_72\n      tag_231\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_231:\n      tag_232\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":5051:5512  function ownerOfTokenIds(address tokenOwner) external view returns (uint256[] memory) {... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      pop\n      tag_235\n      tag_236\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_236:\n      tag_237\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":441:470  uint256 public maxSupply = 69 */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_240\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_240:\n      pop\n      tag_94\n      sload(0x0e)\n      dup2\n      jump\n        /* \"contracts/imiltestTwo.sol\":4254:4376  function setBaseExtension(string memory _newBaseExtension) public onlyOwner {... */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_244\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_244:\n      pop\n      tag_61\n      tag_246\n      calldatasize\n      0x04\n      tag_139\n      jump\t// in\n    tag_246:\n      tag_247\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":17860:18024  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r... */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_248\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_248:\n      pop\n      tag_54\n      tag_250\n      calldatasize\n      0x04\n      tag_251\n      jump\t// in\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":17981:18006  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":17957:17961  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":17981:18006  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17981:17999  _operatorApprovals */\n      0x08\n        /* \"contracts/ERC721A.sol\":17981:18006  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC721A.sol\":17981:18016  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":17860:18024  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_45:\n      callvalue\n      dup1\n      iszero\n      tag_254\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_254:\n      pop\n      tag_61\n      tag_256\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_256:\n      tag_257\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":9526:10165  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n    tag_57:\n        /* \"contracts/ERC721A.sol\":9611:9615  bool */\n      0x00\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":9935:9960  interfaceId == 0x01ffc9a7 */\n      dup4\n      and\n      eq\n      dup1\n        /* \"contracts/ERC721A.sol\":9935:10037  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r... */\n      tag_259\n      jumpi\n      pop\n      shl(0xe0, 0x80ac58cd)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":10012:10037  interfaceId == 0x80ac58cd */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":9935:10037  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r... */\n    tag_259:\n        /* \"contracts/ERC721A.sol\":9935:10114  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r... */\n      dup1\n      tag_260\n      jumpi\n      pop\n      shl(0xe0, 0x5b5e139f)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":10089:10114  interfaceId == 0x5b5e139f */\n      dup4\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":9935:10114  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\r... */\n    tag_260:\n        /* \"contracts/ERC721A.sol\":9915:10114  return\r... */\n      swap3\n        /* \"contracts/ERC721A.sol\":9526:10165  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/imiltestTwo.sol\":4488:4563  function pause(bool _state) external onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_262:\n        /* \"contracts/imiltestTwo.sol\":4542:4548  paused */\n      0x11\n        /* \"contracts/imiltestTwo.sol\":4542:4557  paused = _state */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/imiltestTwo.sol\":4488:4563  function pause(bool _state) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10428:10528  function name() public view virtual override returns (string memory) {\r... */\n    tag_73:\n        /* \"contracts/ERC721A.sol\":10482:10495  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10515:10520  _name */\n      0x03\n        /* \"contracts/ERC721A.sol\":10508:10520  return _name */\n      dup1\n      sload\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_269\n      swap1\n      tag_268\n      jump\t// in\n    tag_269:\n      dup1\n      iszero\n      tag_270\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_271\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_270)\n    tag_271:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_272:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_272\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":10428:10528  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":16911:17129  function getApproved(uint256 tokenId) public view virtual override returns (address) {\r... */\n    tag_80:\n        /* \"contracts/ERC721A.sol\":16987:16994  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":17012:17028  _exists(tokenId) */\n      tag_274\n        /* \"contracts/ERC721A.sol\":17020:17027  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":17012:17019  _exists */\n      tag_275\n        /* \"contracts/ERC721A.sol\":17012:17028  _exists(tokenId) */\n      jump\t// in\n    tag_274:\n        /* \"contracts/ERC721A.sol\":17007:17071  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n      tag_276\n      jumpi\n        /* \"contracts/ERC721A.sol\":17037:17071  ApprovalQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe2, 0x33d1c039)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":17007:17071  if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken() */\n    tag_276:\n      pop\n        /* \"contracts/ERC721A.sol\":17091:17115  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17091:17106  _tokenApprovals */\n      0x07\n        /* \"contracts/ERC721A.sol\":17091:17115  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":17091:17121  _tokenApprovals[tokenId].value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":16911:17129  function getApproved(uint256 tokenId) public view virtual override returns (address) {\r... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":16352:16752  function approve(address to, uint256 tokenId) public virtual override {\r... */\n    tag_87:\n        /* \"contracts/ERC721A.sol\":16433:16446  address owner */\n      0x00\n        /* \"contracts/ERC721A.sol\":16449:16465  ownerOf(tokenId) */\n      tag_278\n        /* \"contracts/ERC721A.sol\":16457:16464  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":16449:16456  ownerOf */\n      tag_157\n        /* \"contracts/ERC721A.sol\":16449:16465  ownerOf(tokenId) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/ERC721A.sol\":16433:16465  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":16482:16510  _msgSenderERC721A() != owner */\n      dup3\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":16478:16653  if (_msgSenderERC721A() != owner)\r... */\n      tag_284\n      jumpi\n        /* \"contracts/ERC721A.sol\":16530:16574  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_282\n        /* \"contracts/ERC721A.sol\":16547:16552  owner */\n      dup2\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17860:18024  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r... */\n      tag_250\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":16530:16574  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_282:\n        /* \"contracts/ERC721A.sol\":16525:16653  if (!isApprovedForAll(owner, _msgSenderERC721A())) {\r... */\n      tag_284\n      jumpi\n        /* \"contracts/ERC721A.sol\":16602:16637  ApprovalCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x67d9dca1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":16525:16653  if (!isApprovedForAll(owner, _msgSenderERC721A())) {\r... */\n    tag_284:\n        /* \"contracts/ERC721A.sol\":16665:16689  _tokenApprovals[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":16665:16680  _tokenApprovals */\n      0x07\n        /* \"contracts/ERC721A.sol\":16665:16689  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC721A.sol\":16665:16700  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ERC721A.sol\":16716:16744  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"contracts/ERC721A.sol\":16665:16689  _tokenApprovals[tokenId] */\n      dup6\n      swap4\n        /* \"contracts/ERC721A.sol\":16716:16744  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"contracts/ERC721A.sol\":16422:16752  {\r... */\n      pop\n        /* \"contracts/ERC721A.sol\":16352:16752  function approve(address to, uint256 tokenId) public virtual override {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/imiltestTwo.sol\":3392:3502  function toggleClaim(bool _state, uint claim) public onlyOwner {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_286\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_286:\n        /* \"contracts/imiltestTwo.sol\":3462:3487  claimActiveByPhase[claim] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/imiltestTwo.sol\":3462:3480  claimActiveByPhase */\n      0x12\n        /* \"contracts/imiltestTwo.sol\":3462:3487  claimActiveByPhase[claim] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/imiltestTwo.sol\":3462:3496  claimActiveByPhase[claim] = _state */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/imiltestTwo.sol\":3392:3502  function toggleClaim(bool _state, uint claim) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/imiltestTwo.sol\":4855:5045  function removeUsersFromAllowlist(address[] calldata addresses) external onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_289\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_289:\n        /* \"contracts/imiltestTwo.sol\":4950:4959  uint256 i */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":4945:5040  for (uint256 i = 0; i < addresses.length; i++) {... */\n    tag_291:\n        /* \"contracts/imiltestTwo.sol\":4965:4985  i < addresses.length */\n      dup2\n      dup2\n      lt\n        /* \"contracts/imiltestTwo.sol\":4945:5040  for (uint256 i = 0; i < addresses.length; i++) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/imiltestTwo.sol\":5027:5032  false */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":5001:5010  allowlist */\n      0x16\n        /* \"contracts/imiltestTwo.sol\":5001:5024  allowlist[addresses[i]] */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":5011:5020  addresses */\n      dup6\n      dup6\n        /* \"contracts/imiltestTwo.sol\":5021:5022  i */\n      dup6\n        /* \"contracts/imiltestTwo.sol\":5011:5023  addresses[i] */\n      dup2\n      dup2\n      lt\n      tag_295\n      jumpi\n      tag_295\n      tag_296\n      jump\t// in\n    tag_295:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_297\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_297:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/imiltestTwo.sol\":5001:5024  allowlist[addresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/imiltestTwo.sol\":5001:5032  allowlist[addresses[i]] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/imiltestTwo.sol\":4987:4990  i++ */\n      dup1\n      tag_298\n      dup2\n      tag_299\n      jump\t// in\n    tag_298:\n      swap2\n      pop\n      pop\n        /* \"contracts/imiltestTwo.sol\":4945:5040  for (uint256 i = 0; i < addresses.length; i++) {... */\n      jump(tag_291)\n    tag_292:\n      pop\n        /* \"contracts/imiltestTwo.sol\":4855:5045  function removeUsersFromAllowlist(address[] calldata addresses) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/imiltestTwo.sol\":4569:4664  function setOnlyAllowlisted(bool _state) public onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_301\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_301:\n        /* \"contracts/imiltestTwo.sol\":4634:4649  onlyAllowlisted */\n      0x15\n        /* \"contracts/imiltestTwo.sol\":4634:4658  onlyAllowlisted = _state */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/imiltestTwo.sol\":4569:4664  function setOnlyAllowlisted(bool _state) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":20550:23367  function transferFrom(\r... */\n    tag_125:\n        /* \"contracts/ERC721A.sol\":20684:20711  uint256 prevOwnershipPacked */\n      0x00\n        /* \"contracts/ERC721A.sol\":20714:20741  _packedOwnershipOf(tokenId) */\n      tag_307\n        /* \"contracts/ERC721A.sol\":20733:20740  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":20714:20732  _packedOwnershipOf */\n      tag_308\n        /* \"contracts/ERC721A.sol\":20714:20741  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_307:\n        /* \"contracts/ERC721A.sol\":20684:20741  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":20799:20803  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":20758:20803  address(uint160(prevOwnershipPacked)) != from */\n      and\n        /* \"contracts/ERC721A.sol\":20774:20793  prevOwnershipPacked */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":20758:20803  address(uint160(prevOwnershipPacked)) != from */\n      and\n      eq\n        /* \"contracts/ERC721A.sol\":20754:20840  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n      tag_309\n      jumpi\n        /* \"contracts/ERC721A.sol\":20812:20840  TransferFromIncorrectOwner() */\n      mload(0x40)\n      shl(0xe8, 0xa11481)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":20754:20840  if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner() */\n    tag_309:\n        /* \"contracts/ERC721A.sol\":20854:20881  uint256 approvedAddressSlot */\n      0x00\n        /* \"contracts/ERC721A.sol\":19658:19682  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":19658:19673  _tokenApprovals */\n      0x07\n        /* \"contracts/ERC721A.sol\":19658:19682  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":19886:19912  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":19283:19313  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":18976:19004  and(owner, _BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"contracts/ERC721A.sol\":19261:19281  eq(msgSender, owner) */\n      swap1\n      swap2\n      eq\n        /* \"contracts/ERC721A.sol\":19258:19314  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"contracts/ERC721A.sol\":21040:21220  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\r... */\n      tag_318\n      jumpi\n        /* \"contracts/ERC721A.sol\":21133:21176  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_316\n        /* \"contracts/ERC721A.sol\":21150:21154  from */\n      dup7\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17860:18024  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\r... */\n      tag_250\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":21133:21176  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_316:\n        /* \"contracts/ERC721A.sol\":21128:21220  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n      tag_318\n      jumpi\n        /* \"contracts/ERC721A.sol\":21185:21220  TransferCallerNotOwnerNorApproved() */\n      mload(0x40)\n      shl(0xe1, 0x2ce44b5f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":21128:21220  if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved() */\n    tag_318:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":21237:21253  to == address(0) */\n      dup6\n      and\n        /* \"contracts/ERC721A.sol\":21233:21285  if (to == address(0)) revert TransferToZeroAddress() */\n      tag_319\n      jumpi\n        /* \"contracts/ERC721A.sol\":21262:21285  TransferToZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x3a954ecd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":21233:21285  if (to == address(0)) revert TransferToZeroAddress() */\n    tag_319:\n        /* \"contracts/ERC721A.sol\":21434:21449  approvedAddress */\n      dup1\n        /* \"contracts/ERC721A.sol\":21431:21591  if approvedAddress {\r... */\n      iszero\n      tag_322\n      jumpi\n        /* \"contracts/ERC721A.sol\":21574:21575  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":21553:21572  approvedAddressSlot */\n      dup3\n        /* \"contracts/ERC721A.sol\":21546:21576  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"contracts/ERC721A.sol\":21431:21591  if approvedAddress {\r... */\n    tag_322:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":21971:21995  _packedAddressData[from] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":21971:21989  _packedAddressData */\n      0x06\n        /* \"contracts/ERC721A.sol\":21971:21995  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/ERC721A.sol\":21969:21995  --_packedAddressData[from] */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":22040:22062  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":22038:22062  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":15210:15221  timestamp() */\n      timestamp\n        /* \"contracts/ERC721A.sol\":15185:15208  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"contracts/ERC721A.sol\":15181:15222  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"contracts/ERC721A.sol\":15168:15231  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n      shl(0xe1, 0x01)\n      or\n        /* \"contracts/ERC721A.sol\":22333:22359  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":22333:22350  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":22333:22359  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":22333:22508  _packedOwnerships[tokenId] = _packOwnershipData(\r... */\n      sstore\n      shl(0xe1, 0x01)\n        /* \"contracts/ERC721A.sol\":22628:22675  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup4\n      and\n        /* \"contracts/ERC721A.sol\":22624:23251  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r... */\n      tag_327\n      jumpi\n        /* \"contracts/ERC721A.sol\":22733:22734  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":22723:22734  tokenId + 1 */\n      dup5\n      add\n        /* \"contracts/ERC721A.sol\":22701:22720  uint256 nextTokenId */\n      0x00\n        /* \"contracts/ERC721A.sol\":22856:22886  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":22856:22873  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":22856:22886  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":22852:23236  if (_packedOwnerships[nextTokenId] == 0) {\r... */\n      tag_329\n      jumpi\n        /* \"contracts/ERC721A.sol\":22994:23007  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":22979:22990  nextTokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":22979:23007  nextTokenId != _currentIndex */\n      eq\n        /* \"contracts/ERC721A.sol\":22975:23217  if (nextTokenId != _currentIndex) {\r... */\n      tag_329\n      jumpi\n        /* \"contracts/ERC721A.sol\":23141:23171  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":23141:23158  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":23141:23171  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":23141:23193  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":22975:23217  if (nextTokenId != _currentIndex) {\r... */\n    tag_329:\n        /* \"contracts/ERC721A.sol\":22682:23251  {\r... */\n      pop\n        /* \"contracts/ERC721A.sol\":22624:23251  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\r... */\n    tag_327:\n        /* \"contracts/ERC721A.sol\":23298:23305  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":23294:23296  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":23279:23306  Transfer(from, to, tokenId) */\n      and\n        /* \"contracts/ERC721A.sol\":23288:23292  from */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":23279:23306  Transfer(from, to, tokenId) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/ERC721A.sol\":20673:23367  {\r... */\n      pop\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":20550:23367  function transferFrom(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/imiltestTwo.sol\":5519:5625  function withdraw() public payable onlyOwner {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_333\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      sload\n        /* \"contracts/imiltestTwo.sol\":5571:5619  payable(owner()).transfer(address(this).balance) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/imiltestTwo.sol\":5597:5618  address(this).balance */\n      selfbalance\n        /* \"contracts/imiltestTwo.sol\":5571:5619  payable(owner()).transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap3\n        /* \"contracts/imiltestTwo.sol\":5597:5618  address(this).balance */\n      swap1\n      swap2\n        /* \"contracts/imiltestTwo.sol\":5571:5619  payable(owner()).transfer(address(this).balance) */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      dup2\n        /* \"contracts/imiltestTwo.sol\":5571:5619  payable(owner()).transfer(address(this).balance) */\n      dup2\n        /* \"contracts/imiltestTwo.sol\":5597:5618  address(this).balance */\n      dup6\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup9\n        /* \"contracts/imiltestTwo.sol\":5571:5619  payable(owner()).transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_337\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_337:\n      pop\n        /* \"contracts/imiltestTwo.sol\":5519:5625  function withdraw() public payable onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":23463:23648  function safeTransferFrom(\r... */\n    tag_135:\n        /* \"contracts/ERC721A.sol\":23601:23640  safeTransferFrom(from, to, tokenId, '') */\n      tag_292\n        /* \"contracts/ERC721A.sol\":23618:23622  from */\n      dup4\n        /* \"contracts/ERC721A.sol\":23624:23626  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":23628:23635  tokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":23601:23640  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721A.sol\":23601:23617  safeTransferFrom */\n      tag_215\n        /* \"contracts/ERC721A.sol\":23601:23640  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":4022:4120  function setBaseURI(string memory _newBaseURI) public onlyOwner {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_341\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_341:\n        /* \"contracts/imiltestTwo.sol\":4093:4114  baseURI = _newBaseURI */\n      dup1\n      mload\n      tag_343\n      swap1\n        /* \"contracts/imiltestTwo.sol\":4093:4100  baseURI */\n      0x0a\n      swap1\n        /* \"contracts/imiltestTwo.sol\":4093:4114  baseURI = _newBaseURI */\n      0x20\n      dup5\n      add\n      swap1\n      tag_344\n      jump\t// in\n    tag_343:\n      pop\n        /* \"contracts/imiltestTwo.sol\":4022:4120  function setBaseURI(string memory _newBaseURI) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/imiltestTwo.sol\":4670:4849  function allowlistUsers(address[] calldata addresses) external onlyOwner {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_346\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_346:\n        /* \"contracts/imiltestTwo.sol\":4755:4764  uint256 i */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":4750:4844  for (uint256 i = 0; i < addresses.length; i++) {... */\n    tag_348:\n        /* \"contracts/imiltestTwo.sol\":4770:4790  i < addresses.length */\n      dup2\n      dup2\n      lt\n        /* \"contracts/imiltestTwo.sol\":4750:4844  for (uint256 i = 0; i < addresses.length; i++) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/imiltestTwo.sol\":4832:4836  true */\n      0x01\n        /* \"contracts/imiltestTwo.sol\":4806:4815  allowlist */\n      0x16\n        /* \"contracts/imiltestTwo.sol\":4806:4829  allowlist[addresses[i]] */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":4816:4825  addresses */\n      dup6\n      dup6\n        /* \"contracts/imiltestTwo.sol\":4826:4827  i */\n      dup6\n        /* \"contracts/imiltestTwo.sol\":4816:4828  addresses[i] */\n      dup2\n      dup2\n      lt\n      tag_352\n      jumpi\n      tag_352\n      tag_296\n      jump\t// in\n    tag_352:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_353\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_353:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/imiltestTwo.sol\":4806:4829  allowlist[addresses[i]] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/imiltestTwo.sol\":4806:4836  allowlist[addresses[i]] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/imiltestTwo.sol\":4792:4795  i++ */\n      dup1\n      tag_354\n      dup2\n      tag_299\n      jump\t// in\n    tag_354:\n      swap2\n      pop\n      pop\n        /* \"contracts/imiltestTwo.sol\":4750:4844  for (uint256 i = 0; i < addresses.length; i++) {... */\n      jump(tag_348)\n        /* \"contracts/imiltestTwo.sol\":4127:4248  function setClaimURI(string memory _newClaimURI, uint claim) public onlyOwner {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_356\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_356:\n        /* \"contracts/imiltestTwo.sol\":4212:4227  claimURI[claim] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/imiltestTwo.sol\":4212:4220  claimURI */\n      0x0b\n        /* \"contracts/imiltestTwo.sol\":4212:4227  claimURI[claim] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/imiltestTwo.sol\":4212:4242  claimURI[claim] = _newClaimURI */\n      dup4\n      mload\n      tag_292\n      swap3\n      dup6\n      add\n      swap1\n      tag_344\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":11821:11973  function ownerOf(uint256 tokenId) public view virtual override returns (address) {\r... */\n    tag_157:\n        /* \"contracts/ERC721A.sol\":11893:11900  address */\n      0x00\n        /* \"contracts/ERC721A.sol\":11936:11963  _packedOwnershipOf(tokenId) */\n      tag_260\n        /* \"contracts/ERC721A.sol\":11955:11962  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":11936:11954  _packedOwnershipOf */\n      tag_308\n        /* \"contracts/ERC721A.sol\":11936:11963  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":7363:7596  function balanceOf(address owner) public view virtual override returns (uint256) {\r... */\n    tag_166:\n        /* \"contracts/ERC721A.sol\":7435:7442  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":7459:7478  owner == address(0) */\n      dup3\n      and\n        /* \"contracts/ERC721A.sol\":7455:7515  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n      tag_362\n      jumpi\n        /* \"contracts/ERC721A.sol\":7487:7515  BalanceQueryForZeroAddress() */\n      mload(0x40)\n      shl(0xe2, 0x23d3ad81)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":7455:7515  if (owner == address(0)) revert BalanceQueryForZeroAddress() */\n    tag_362:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":7533:7558  _packedAddressData[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":7533:7551  _packedAddressData */\n      0x06\n        /* \"contracts/ERC721A.sol\":7533:7558  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":1522:1535  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"contracts/ERC721A.sol\":7533:7588  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"contracts/ERC721A.sol\":7363:7596  function balanceOf(address owner) public view virtual override returns (uint256) {\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_364\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_366\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_367\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":10604:10708  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_188:\n        /* \"contracts/ERC721A.sol\":10660:10673  string memory */\n      0x60\n        /* \"contracts/ERC721A.sol\":10693:10700  _symbol */\n      0x04\n        /* \"contracts/ERC721A.sol\":10686:10700  return _symbol */\n      dup1\n      sload\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":1358:2498  function mint(uint256 _mintAmount) public payable {... */\n    tag_192:\n        /* \"contracts/imiltestTwo.sol\":1415:1429  uint256 supply */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":1432:1445  totalSupply() */\n      tag_377\n        /* \"contracts/ERC721A.sol\":6453:6465  _burnCounter */\n      sload(0x02)\n        /* \"contracts/ERC721A.sol\":6437:6450  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":6437:6465  _currentIndex - _burnCounter */\n      sub\n      swap1\n        /* \"contracts/ERC721A.sol\":6179:6502  function totalSupply() public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"contracts/imiltestTwo.sol\":1432:1445  totalSupply() */\n    tag_377:\n        /* \"contracts/imiltestTwo.sol\":1484:1490  paused */\n      sload(0x11)\n        /* \"contracts/imiltestTwo.sol\":1415:1445  uint256 supply = totalSupply() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/imiltestTwo.sol\":1484:1490  paused */\n      0xff\n      and\n        /* \"contracts/imiltestTwo.sol\":1483:1490  !paused */\n      iszero\n        /* \"contracts/imiltestTwo.sol\":1475:1590  require(!paused, \"WOAH hold up the mint is not yet live, a little too early there... or late? Transmission Ending\") */\n      tag_378\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11543:11545   */\n      0x20\n        /* \"contracts/imiltestTwo.sol\":1475:1590  require(!paused, \"WOAH hold up the mint is not yet live, a little too early there... or late? Transmission Ending\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11525:11546   */\n      mstore\n        /* \"#utility.yul\":11582:11584   */\n      0x5f\n        /* \"#utility.yul\":11562:11580   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11555:11585   */\n      mstore\n        /* \"#utility.yul\":11621:11655   */\n      0x574f414820686f6c6420757020746865206d696e74206973206e6f7420796574\n        /* \"#utility.yul\":11601:11619   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11594:11656   */\n      mstore\n        /* \"#utility.yul\":11692:11726   */\n      0x206c6976652c2061206c6974746c6520746f6f206561726c792074686572652e\n        /* \"#utility.yul\":11672:11690   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11665:11727   */\n      mstore\n        /* \"#utility.yul\":11764:11797   */\n      0x2e2e206f72206c6174653f205472616e736d697373696f6e20456e64696e6700\n        /* \"#utility.yul\":11743:11762   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":11736:11798   */\n      mstore\n        /* \"#utility.yul\":11815:11834   */\n      0xa4\n      add\n        /* \"contracts/imiltestTwo.sol\":1475:1590  require(!paused, \"WOAH hold up the mint is not yet live, a little too early there... or late? Transmission Ending\") */\n    tag_379:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_378:\n        /* \"contracts/imiltestTwo.sol\":1619:1620  0 */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":1605:1616  _mintAmount */\n      dup3\n        /* \"contracts/imiltestTwo.sol\":1605:1620  _mintAmount > 0 */\n      gt\n        /* \"contracts/imiltestTwo.sol\":1597:1688  require(_mintAmount > 0, \"must mint at least 1 nft, 0 is not allowed. Transmission Ending\") */\n      tag_381\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11111:11113   */\n      0x20\n        /* \"contracts/imiltestTwo.sol\":1597:1688  require(_mintAmount > 0, \"must mint at least 1 nft, 0 is not allowed. Transmission Ending\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11093:11114   */\n      mstore\n        /* \"#utility.yul\":11150:11152   */\n      0x3f\n        /* \"#utility.yul\":11130:11148   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11123:11153   */\n      mstore\n        /* \"#utility.yul\":11189:11223   */\n      0x6d757374206d696e74206174206c656173742031206e66742c2030206973206e\n        /* \"#utility.yul\":11169:11187   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11162:11224   */\n      mstore\n        /* \"#utility.yul\":11260:11293   */\n      0x6f7420616c6c6f7765642e205472616e736d697373696f6e20456e64696e6700\n        /* \"#utility.yul\":11240:11258   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11233:11294   */\n      mstore\n        /* \"#utility.yul\":11311:11330   */\n      0x84\n      add\n        /* \"contracts/imiltestTwo.sol\":1597:1688  require(_mintAmount > 0, \"must mint at least 1 nft, 0 is not allowed. Transmission Ending\") */\n      tag_379\n        /* \"#utility.yul\":10909:11336   */\n      jump\n        /* \"contracts/imiltestTwo.sol\":1597:1688  require(_mintAmount > 0, \"must mint at least 1 nft, 0 is not allowed. Transmission Ending\") */\n    tag_381:\n        /* \"contracts/imiltestTwo.sol\":1727:1737  currentSet */\n      sload(0x0f)\n        /* \"contracts/imiltestTwo.sol\":1703:1723  supply + _mintAmount */\n      tag_384\n        /* \"contracts/imiltestTwo.sol\":1712:1723  _mintAmount */\n      dup4\n        /* \"contracts/imiltestTwo.sol\":1703:1709  supply */\n      dup4\n        /* \"contracts/imiltestTwo.sol\":1703:1723  supply + _mintAmount */\n      tag_385\n      jump\t// in\n    tag_384:\n        /* \"contracts/imiltestTwo.sol\":1703:1737  supply + _mintAmount <= currentSet */\n      gt\n      iszero\n        /* \"contracts/imiltestTwo.sol\":1695:1793  require(supply + _mintAmount <= currentSet, \"This set of shirts have been minted already, sorry.\") */\n      tag_386\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12047:12049   */\n      0x20\n        /* \"contracts/imiltestTwo.sol\":1695:1793  require(supply + _mintAmount <= currentSet, \"This set of shirts have been minted already, sorry.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12029:12050   */\n      mstore\n        /* \"#utility.yul\":12086:12088   */\n      0x33\n        /* \"#utility.yul\":12066:12084   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12059:12089   */\n      mstore\n        /* \"#utility.yul\":12125:12159   */\n      0x5468697320736574206f66207368697274732068617665206265656e206d696e\n        /* \"#utility.yul\":12105:12123   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12098:12160   */\n      mstore\n      shl(0x69, 0x3a32b21030b63932b0b23c961039b7b9393c97)\n        /* \"#utility.yul\":12176:12194   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12169:12218   */\n      mstore\n        /* \"#utility.yul\":12235:12254   */\n      0x84\n      add\n        /* \"contracts/imiltestTwo.sol\":1695:1793  require(supply + _mintAmount <= currentSet, \"This set of shirts have been minted already, sorry.\") */\n      tag_379\n        /* \"#utility.yul\":11845:12260   */\n      jump\n        /* \"contracts/imiltestTwo.sol\":1695:1793  require(supply + _mintAmount <= currentSet, \"This set of shirts have been minted already, sorry.\") */\n    tag_386:\n        /* \"contracts/imiltestTwo.sol\":1832:1841  maxSupply */\n      sload(0x0e)\n        /* \"contracts/imiltestTwo.sol\":1808:1828  supply + _mintAmount */\n      tag_389\n        /* \"contracts/imiltestTwo.sol\":1817:1828  _mintAmount */\n      dup4\n        /* \"contracts/imiltestTwo.sol\":1808:1814  supply */\n      dup4\n        /* \"contracts/imiltestTwo.sol\":1808:1828  supply + _mintAmount */\n      tag_385\n      jump\t// in\n    tag_389:\n        /* \"contracts/imiltestTwo.sol\":1808:1841  supply + _mintAmount <= maxSupply */\n      gt\n      iszero\n        /* \"contracts/imiltestTwo.sol\":1800:1899  require(supply + _mintAmount <= maxSupply, \"looks like we are popular max supply has been reached\") */\n      tag_390\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12467:12469   */\n      0x20\n        /* \"contracts/imiltestTwo.sol\":1800:1899  require(supply + _mintAmount <= maxSupply, \"looks like we are popular max supply has been reached\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12449:12470   */\n      mstore\n        /* \"#utility.yul\":12506:12508   */\n      0x35\n        /* \"#utility.yul\":12486:12504   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12479:12509   */\n      mstore\n        /* \"#utility.yul\":12545:12579   */\n      0x6c6f6f6b73206c696b652077652061726520706f70756c6172206d6178207375\n        /* \"#utility.yul\":12525:12543   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12518:12580   */\n      mstore\n      shl(0x5a, 0x1c1c1b1e481a185cc81899595b881c995858da1959)\n        /* \"#utility.yul\":12596:12614   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12589:12640   */\n      mstore\n        /* \"#utility.yul\":12657:12676   */\n      0x84\n      add\n        /* \"contracts/imiltestTwo.sol\":1800:1899  require(supply + _mintAmount <= maxSupply, \"looks like we are popular max supply has been reached\") */\n      tag_379\n        /* \"#utility.yul\":12265:12682   */\n      jump\n        /* \"contracts/imiltestTwo.sol\":1800:1899  require(supply + _mintAmount <= maxSupply, \"looks like we are popular max supply has been reached\") */\n    tag_390:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/imiltestTwo.sol\":1918:1928  msg.sender */\n      caller\n        /* \"contracts/imiltestTwo.sol\":1918:1939  msg.sender != owner() */\n      eq\n        /* \"contracts/imiltestTwo.sol\":1914:2396  if (msg.sender != owner()) {... */\n      tag_409\n      jumpi\n        /* \"contracts/imiltestTwo.sol\":2007:2008  1 */\n      0x01\n        /* \"contracts/imiltestTwo.sol\":1992:2003  _mintAmount */\n      dup3\n        /* \"contracts/imiltestTwo.sol\":1992:2008  _mintAmount <= 1 */\n      gt\n      iszero\n        /* \"contracts/imiltestTwo.sol\":1984:2033  require(_mintAmount <= 1, \"only 1 at a time :) \") */\n      tag_395\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14718:14720   */\n      0x20\n        /* \"contracts/imiltestTwo.sol\":1984:2033  require(_mintAmount <= 1, \"only 1 at a time :) \") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14700:14721   */\n      mstore\n        /* \"#utility.yul\":14757:14759   */\n      0x14\n        /* \"#utility.yul\":14737:14755   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14730:14760   */\n      mstore\n      shl(0x65, 0x037b7363c90189030ba1030903a34b6b2901d149)\n        /* \"#utility.yul\":14776:14794   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14769:14819   */\n      mstore\n        /* \"#utility.yul\":14836:14854   */\n      0x64\n      add\n        /* \"contracts/imiltestTwo.sol\":1984:2033  require(_mintAmount <= 1, \"only 1 at a time :) \") */\n      tag_379\n        /* \"#utility.yul\":14516:14860   */\n      jump\n        /* \"contracts/imiltestTwo.sol\":1984:2033  require(_mintAmount <= 1, \"only 1 at a time :) \") */\n    tag_395:\n        /* \"contracts/imiltestTwo.sol\":2047:2062  onlyAllowlisted */\n      and(0xff, sload(0x15))\n        /* \"contracts/imiltestTwo.sol\":2047:2070  onlyAllowlisted == true */\n      iszero\n      iszero\n        /* \"contracts/imiltestTwo.sol\":2047:2062  onlyAllowlisted */\n      0x01\n        /* \"contracts/imiltestTwo.sol\":2047:2070  onlyAllowlisted == true */\n      eq\n        /* \"contracts/imiltestTwo.sol\":2044:2316  if(onlyAllowlisted == true) {... */\n      iszero\n      tag_398\n      jumpi\n        /* \"contracts/imiltestTwo.sol\":2109:2119  msg.sender */\n      caller\n        /* \"contracts/imiltestTwo.sol\":2563:2567  bool */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":2583:2599  allowlist[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/imiltestTwo.sol\":2583:2592  allowlist */\n      0x16\n        /* \"contracts/imiltestTwo.sol\":2583:2599  allowlist[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/imiltestTwo.sol\":2087:2140  require(isAllowlisted(msg.sender), \"Not Allowlisted\") */\n      tag_400\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14022:14024   */\n      0x20\n        /* \"contracts/imiltestTwo.sol\":2087:2140  require(isAllowlisted(msg.sender), \"Not Allowlisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14004:14025   */\n      mstore\n        /* \"#utility.yul\":14061:14063   */\n      0x0f\n        /* \"#utility.yul\":14041:14059   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14034:14064   */\n      mstore\n      shl(0x8a, 0x139bdd08105b1b1bdddb1a5cdd1959)\n        /* \"#utility.yul\":14080:14098   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14073:14118   */\n      mstore\n        /* \"#utility.yul\":14135:14153   */\n      0x64\n      add\n        /* \"contracts/imiltestTwo.sol\":2087:2140  require(isAllowlisted(msg.sender), \"Not Allowlisted\") */\n      tag_379\n        /* \"#utility.yul\":13820:14159   */\n      jump\n        /* \"contracts/imiltestTwo.sol\":2087:2140  require(isAllowlisted(msg.sender), \"Not Allowlisted\") */\n    tag_400:\n        /* \"contracts/imiltestTwo.sol\":2203:2213  msg.sender */\n      caller\n        /* \"contracts/imiltestTwo.sol\":2155:2179  uint256 ownerMintedCount */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":2182:2214  addressMintedBalance[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/imiltestTwo.sol\":2182:2202  addressMintedBalance */\n      0x17\n        /* \"contracts/imiltestTwo.sol\":2182:2214  addressMintedBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/imiltestTwo.sol\":2271:2285  AllowlistLimit */\n      sload(0x10)\n        /* \"contracts/imiltestTwo.sol\":2237:2267  ownerMintedCount + _mintAmount */\n      tag_403\n        /* \"contracts/imiltestTwo.sol\":2256:2267  _mintAmount */\n      dup5\n        /* \"contracts/imiltestTwo.sol\":2182:2214  addressMintedBalance[msg.sender] */\n      dup4\n        /* \"contracts/imiltestTwo.sol\":2237:2267  ownerMintedCount + _mintAmount */\n      tag_385\n      jump\t// in\n    tag_403:\n        /* \"contracts/imiltestTwo.sol\":2237:2285  ownerMintedCount + _mintAmount <= AllowlistLimit */\n      gt\n      iszero\n        /* \"contracts/imiltestTwo.sol\":2229:2304  require(ownerMintedCount + _mintAmount <= AllowlistLimit, \"Already minted\") */\n      tag_404\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9669:9671   */\n      0x20\n        /* \"contracts/imiltestTwo.sol\":2229:2304  require(ownerMintedCount + _mintAmount <= AllowlistLimit, \"Already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9651:9672   */\n      mstore\n        /* \"#utility.yul\":9708:9710   */\n      0x0e\n        /* \"#utility.yul\":9688:9706   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9681:9711   */\n      mstore\n      shl(0x92, 0x105b1c9958591e481b5a5b9d1959)\n        /* \"#utility.yul\":9727:9745   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9720:9764   */\n      mstore\n        /* \"#utility.yul\":9781:9799   */\n      0x64\n      add\n        /* \"contracts/imiltestTwo.sol\":2229:2304  require(ownerMintedCount + _mintAmount <= AllowlistLimit, \"Already minted\") */\n      tag_379\n        /* \"#utility.yul\":9467:9805   */\n      jump\n        /* \"contracts/imiltestTwo.sol\":2229:2304  require(ownerMintedCount + _mintAmount <= AllowlistLimit, \"Already minted\") */\n    tag_404:\n        /* \"contracts/imiltestTwo.sol\":2072:2316  {... */\n      pop\n        /* \"contracts/imiltestTwo.sol\":2044:2316  if(onlyAllowlisted == true) {... */\n    tag_398:\n        /* \"contracts/imiltestTwo.sol\":2354:2365  _mintAmount */\n      dup2\n        /* \"contracts/imiltestTwo.sol\":2347:2351  cost */\n      sload(0x0d)\n        /* \"contracts/imiltestTwo.sol\":2347:2365  cost * _mintAmount */\n      tag_407\n      swap2\n      swap1\n      tag_408\n      jump\t// in\n    tag_407:\n        /* \"contracts/imiltestTwo.sol\":2334:2343  msg.value */\n      callvalue\n        /* \"contracts/imiltestTwo.sol\":2334:2365  msg.value >= cost * _mintAmount */\n      lt\n      iszero\n        /* \"contracts/imiltestTwo.sol\":2326:2388  require(msg.value >= cost * _mintAmount, \"Cost doesn't match\") */\n      tag_409\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10764:10766   */\n      0x20\n        /* \"contracts/imiltestTwo.sol\":2326:2388  require(msg.value >= cost * _mintAmount, \"Cost doesn't match\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10746:10767   */\n      mstore\n        /* \"#utility.yul\":10803:10805   */\n      0x12\n        /* \"#utility.yul\":10783:10801   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10776:10806   */\n      mstore\n      shl(0x73, 0x086dee6e840c8decae6dc4ee840dac2e8c6d)\n        /* \"#utility.yul\":10822:10840   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10815:10863   */\n      mstore\n        /* \"#utility.yul\":10880:10898   */\n      0x64\n      add\n        /* \"contracts/imiltestTwo.sol\":2326:2388  require(msg.value >= cost * _mintAmount, \"Cost doesn't match\") */\n      tag_379\n        /* \"#utility.yul\":10562:10904   */\n      jump\n        /* \"contracts/imiltestTwo.sol\":2326:2388  require(msg.value >= cost * _mintAmount, \"Cost doesn't match\") */\n    tag_409:\n        /* \"contracts/imiltestTwo.sol\":2404:2438  _safeMint(msg.sender, _mintAmount) */\n      tag_412\n        /* \"contracts/imiltestTwo.sol\":2414:2424  msg.sender */\n      caller\n        /* \"contracts/imiltestTwo.sol\":2426:2437  _mintAmount */\n      dup4\n        /* \"contracts/imiltestTwo.sol\":2404:2413  _safeMint */\n      tag_413\n        /* \"contracts/imiltestTwo.sol\":2404:2438  _safeMint(msg.sender, _mintAmount) */\n      jump\t// in\n    tag_412:\n        /* \"contracts/imiltestTwo.sol\":2466:2476  msg.sender */\n      caller\n        /* \"contracts/imiltestTwo.sol\":2445:2477  addressMintedBalance[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/imiltestTwo.sol\":2445:2465  addressMintedBalance */\n      0x17\n        /* \"contracts/imiltestTwo.sol\":2445:2477  addressMintedBalance[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/imiltestTwo.sol\":2445:2492  addressMintedBalance[msg.sender] += _mintAmount */\n      dup1\n      sload\n        /* \"contracts/imiltestTwo.sol\":2481:2492  _mintAmount */\n      dup5\n      swap3\n        /* \"contracts/imiltestTwo.sol\":2445:2477  addressMintedBalance[msg.sender] */\n      swap1\n        /* \"contracts/imiltestTwo.sol\":2445:2492  addressMintedBalance[msg.sender] += _mintAmount */\n      tag_414\n      swap1\n        /* \"contracts/imiltestTwo.sol\":2481:2492  _mintAmount */\n      dup5\n      swap1\n        /* \"contracts/imiltestTwo.sol\":2445:2492  addressMintedBalance[msg.sender] += _mintAmount */\n      tag_385\n      jump\t// in\n    tag_414:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/imiltestTwo.sol\":1358:2498  function mint(uint256 _mintAmount) public payable {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":17469:17703  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n    tag_197:\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n        /* \"contracts/ERC721A.sol\":17564:17603  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17564:17582  _operatorApprovals */\n      0x08\n        /* \"contracts/ERC721A.sol\":17564:17603  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":17564:17613  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/ERC721A.sol\":17564:17624  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ERC721A.sol\":17640:17695  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":9191:9232   */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":17564:17613  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      swap2\n        /* \"contracts/ERC721A.sol\":17640:17695  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":9164:9182   */\n      add\n        /* \"contracts/ERC721A.sol\":17640:17695  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ERC721A.sol\":17469:17703  function setApprovalForAll(address operator, bool approved) public virtual override {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/imiltestTwo.sol\":3508:3876  function claimItem(uint256 tokenId, uint claim) external {... */\n    tag_206:\n        /* \"contracts/imiltestTwo.sol\":3600:3610  msg.sender */\n      caller\n        /* \"contracts/imiltestTwo.sol\":3580:3596  ownerOf(tokenId) */\n      tag_420\n        /* \"contracts/imiltestTwo.sol\":3588:3595  tokenId */\n      dup4\n        /* \"contracts/imiltestTwo.sol\":3580:3587  ownerOf */\n      tag_157\n        /* \"contracts/imiltestTwo.sol\":3580:3596  ownerOf(tokenId) */\n      jump\t// in\n    tag_420:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/imiltestTwo.sol\":3580:3610  ownerOf(tokenId) == msg.sender */\n      and\n      eq\n        /* \"contracts/imiltestTwo.sol\":3572:3642  require(ownerOf(tokenId) == msg.sender, \"sorry you are not the owner\") */\n      tag_421\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13666:13668   */\n      0x20\n        /* \"contracts/imiltestTwo.sol\":3572:3642  require(ownerOf(tokenId) == msg.sender, \"sorry you are not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13648:13669   */\n      mstore\n        /* \"#utility.yul\":13705:13707   */\n      0x1b\n        /* \"#utility.yul\":13685:13703   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13678:13708   */\n      mstore\n        /* \"#utility.yul\":13744:13773   */\n      0x736f72727920796f7520617265206e6f7420746865206f776e65720000000000\n        /* \"#utility.yul\":13724:13742   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13717:13774   */\n      mstore\n        /* \"#utility.yul\":13791:13809   */\n      0x64\n      add\n        /* \"contracts/imiltestTwo.sol\":3572:3642  require(ownerOf(tokenId) == msg.sender, \"sorry you are not the owner\") */\n      tag_379\n        /* \"#utility.yul\":13464:13815   */\n      jump\n        /* \"contracts/imiltestTwo.sol\":3572:3642  require(ownerOf(tokenId) == msg.sender, \"sorry you are not the owner\") */\n    tag_421:\n        /* \"contracts/imiltestTwo.sol\":3657:3682  claimActiveByPhase[claim] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/imiltestTwo.sol\":3657:3675  claimActiveByPhase */\n      0x12\n        /* \"contracts/imiltestTwo.sol\":3657:3682  claimActiveByPhase[claim] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/imiltestTwo.sol\":3649:3710  require(claimActiveByPhase[claim], \"claim is not active yet\") */\n      tag_424\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14366:14368   */\n      0x20\n        /* \"contracts/imiltestTwo.sol\":3649:3710  require(claimActiveByPhase[claim], \"claim is not active yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14348:14369   */\n      mstore\n        /* \"#utility.yul\":14405:14407   */\n      0x17\n        /* \"#utility.yul\":14385:14403   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14378:14408   */\n      mstore\n        /* \"#utility.yul\":14444:14469   */\n      0x636c61696d206973206e6f742061637469766520796574000000000000000000\n        /* \"#utility.yul\":14424:14442   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14417:14470   */\n      mstore\n        /* \"#utility.yul\":14487:14505   */\n      0x64\n      add\n        /* \"contracts/imiltestTwo.sol\":3649:3710  require(claimActiveByPhase[claim], \"claim is not active yet\") */\n      tag_379\n        /* \"#utility.yul\":14164:14511   */\n      jump\n        /* \"contracts/imiltestTwo.sol\":3649:3710  require(claimActiveByPhase[claim], \"claim is not active yet\") */\n    tag_424:\n        /* \"contracts/imiltestTwo.sol\":3726:3753  claimedItemByPhase[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/imiltestTwo.sol\":3726:3744  claimedItemByPhase */\n      0x13\n        /* \"contracts/imiltestTwo.sol\":3726:3753  claimedItemByPhase[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/imiltestTwo.sol\":3726:3760  claimedItemByPhase[tokenId][claim] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/imiltestTwo.sol\":3725:3760  !claimedItemByPhase[tokenId][claim] */\n      iszero\n        /* \"contracts/imiltestTwo.sol\":3717:3781  require(!claimedItemByPhase[tokenId][claim], \"already claimed!\") */\n      tag_427\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10012:10014   */\n      0x20\n        /* \"contracts/imiltestTwo.sol\":3717:3781  require(!claimedItemByPhase[tokenId][claim], \"already claimed!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9994:10015   */\n      mstore\n        /* \"#utility.yul\":10051:10053   */\n      0x10\n        /* \"#utility.yul\":10031:10049   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10024:10054   */\n      mstore\n      shl(0x80, 0x616c726561647920636c61696d656421)\n        /* \"#utility.yul\":10070:10088   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10063:10109   */\n      mstore\n        /* \"#utility.yul\":10126:10144   */\n      0x64\n      add\n        /* \"contracts/imiltestTwo.sol\":3717:3781  require(!claimedItemByPhase[tokenId][claim], \"already claimed!\") */\n      tag_379\n        /* \"#utility.yul\":9810:10150   */\n      jump\n        /* \"contracts/imiltestTwo.sol\":3717:3781  require(!claimedItemByPhase[tokenId][claim], \"already claimed!\") */\n    tag_427:\n        /* \"contracts/imiltestTwo.sol\":3788:3815  claimedItemByPhase[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/imiltestTwo.sol\":3788:3806  claimedItemByPhase */\n      0x13\n        /* \"contracts/imiltestTwo.sol\":3788:3815  claimedItemByPhase[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/imiltestTwo.sol\":3788:3822  claimedItemByPhase[tokenId][claim] */\n      dup5\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/imiltestTwo.sol\":3788:3829  claimedItemByPhase[tokenId][claim] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/imiltestTwo.sol\":3825:3829  true */\n      0x01\n        /* \"contracts/imiltestTwo.sol\":3788:3829  claimedItemByPhase[tokenId][claim] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/imiltestTwo.sol\":3836:3862  claimPhaseByToken[tokenId] */\n      swap4\n      dup3\n      mstore\n        /* \"contracts/imiltestTwo.sol\":3836:3853  claimPhaseByToken */\n      0x14\n        /* \"contracts/imiltestTwo.sol\":3836:3862  claimPhaseByToken[tokenId] */\n      swap1\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/imiltestTwo.sol\":3836:3870  claimPhaseByToken[tokenId] = claim */\n      sstore\n        /* \"contracts/imiltestTwo.sol\":3508:3876  function claimItem(uint256 tokenId, uint claim) external {... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":24246:24645  function safeTransferFrom(\r... */\n    tag_215:\n        /* \"contracts/ERC721A.sol\":24413:24444  transferFrom(from, to, tokenId) */\n      tag_431\n        /* \"contracts/ERC721A.sol\":24426:24430  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":24432:24434  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":24436:24443  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":24413:24425  transferFrom */\n      tag_125\n        /* \"contracts/ERC721A.sol\":24413:24444  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_431:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":24459:24473  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"contracts/ERC721A.sol\":24459:24478  to.code.length != 0 */\n      iszero\n        /* \"contracts/ERC721A.sol\":24455:24638  if (to.code.length != 0)\r... */\n      tag_435\n      jumpi\n        /* \"contracts/ERC721A.sol\":24498:24554  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_433\n        /* \"contracts/ERC721A.sol\":24529:24533  from */\n      dup5\n        /* \"contracts/ERC721A.sol\":24535:24537  to */\n      dup5\n        /* \"contracts/ERC721A.sol\":24539:24546  tokenId */\n      dup5\n        /* \"contracts/ERC721A.sol\":24548:24553  _data */\n      dup5\n        /* \"contracts/ERC721A.sol\":24498:24528  _checkContractOnERC721Received */\n      tag_434\n        /* \"contracts/ERC721A.sol\":24498:24554  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_433:\n        /* \"contracts/ERC721A.sol\":24493:24638  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r... */\n      tag_435\n      jumpi\n        /* \"contracts/ERC721A.sol\":24582:24622  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":24493:24638  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\r... */\n    tag_435:\n        /* \"contracts/ERC721A.sol\":24246:24645  function safeTransferFrom(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/imiltestTwo.sol\":4382:4482  function setCurrentSetAmount(uint256 setTotal) external onlyOwner {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_437\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_437:\n        /* \"contracts/imiltestTwo.sol\":4455:4465  currentSet */\n      0x0f\n        /* \"contracts/imiltestTwo.sol\":4455:4476  currentSet = setTotal */\n      sstore\n        /* \"contracts/imiltestTwo.sol\":4382:4482  function setCurrentSetAmount(uint256 setTotal) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/imiltestTwo.sol\":359:396  string public baseExtension = \".json\" */\n    tag_227:\n      0x0c\n      dup1\n      sload\n      tag_439\n      swap1\n      tag_268\n      jump\t// in\n    tag_439:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_440\n      swap1\n      tag_268\n      jump\t// in\n    tag_440:\n      dup1\n      iszero\n      tag_441\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_442\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_441)\n    tag_442:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_443:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_443\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_441:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/imiltestTwo.sol\":2611:3386  function tokenURI(uint256 tokenId)... */\n    tag_232:\n        /* \"contracts/imiltestTwo.sol\":2709:2722  string memory */\n      0x60\n        /* \"contracts/imiltestTwo.sol\":2750:2766  _exists(tokenId) */\n      tag_445\n        /* \"contracts/imiltestTwo.sol\":2758:2765  tokenId */\n      dup3\n        /* \"contracts/imiltestTwo.sol\":2750:2757  _exists */\n      tag_275\n        /* \"contracts/imiltestTwo.sol\":2750:2766  _exists(tokenId) */\n      jump\t// in\n    tag_445:\n        /* \"contracts/imiltestTwo.sol\":2734:2831  require(... */\n      tag_446\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13250:13252   */\n      0x20\n        /* \"contracts/imiltestTwo.sol\":2734:2831  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13232:13253   */\n      mstore\n        /* \"#utility.yul\":13289:13291   */\n      0x2f\n        /* \"#utility.yul\":13269:13287   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13262:13292   */\n      mstore\n        /* \"#utility.yul\":13328:13362   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":13308:13326   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13301:13363   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":13379:13397   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13372:13417   */\n      mstore\n        /* \"#utility.yul\":13434:13453   */\n      0x84\n      add\n        /* \"contracts/imiltestTwo.sol\":2734:2831  require(... */\n      tag_379\n        /* \"#utility.yul\":13048:13459   */\n      jump\n        /* \"contracts/imiltestTwo.sol\":2734:2831  require(... */\n    tag_446:\n        /* \"contracts/imiltestTwo.sol\":2840:2863  uint claimPhaseForToken */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":2866:2892  claimPhaseByToken[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/imiltestTwo.sol\":2866:2883  claimPhaseByToken */\n      0x14\n        /* \"contracts/imiltestTwo.sol\":2866:2892  claimPhaseByToken[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/imiltestTwo.sol\":2904:2926  claimPhaseForToken > 0 */\n      dup1\n      iszero\n        /* \"contracts/imiltestTwo.sol\":2901:3381  if(claimPhaseForToken > 0){... */\n      tag_449\n      jumpi\n        /* \"contracts/imiltestTwo.sol\":2938:2967  string memory currentClaimURI */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":2970:2999  _claimURI(claimPhaseForToken) */\n      tag_450\n        /* \"contracts/imiltestTwo.sol\":2980:2998  claimPhaseForToken */\n      dup3\n        /* \"contracts/imiltestTwo.sol\":2970:2979  _claimURI */\n      tag_451\n        /* \"contracts/imiltestTwo.sol\":2970:2999  _claimURI(claimPhaseForToken) */\n      jump\t// in\n    tag_450:\n        /* \"contracts/imiltestTwo.sol\":2938:2999  string memory currentClaimURI = _claimURI(claimPhaseForToken) */\n      swap1\n      pop\n        /* \"contracts/imiltestTwo.sol\":3049:3050  0 */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":3023:3038  currentClaimURI */\n      dup2\n        /* \"contracts/imiltestTwo.sol\":3017:3046  bytes(currentClaimURI).length */\n      mload\n        /* \"contracts/imiltestTwo.sol\":3017:3050  bytes(currentClaimURI).length > 0 */\n      gt\n        /* \"contracts/imiltestTwo.sol\":3017:3152  bytes(currentClaimURI).length > 0... */\n      tag_452\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_453)\n    tag_452:\n        /* \"contracts/imiltestTwo.sol\":3086:3101  currentClaimURI */\n      dup1\n        /* \"contracts/imiltestTwo.sol\":3103:3121  tokenId.toString() */\n      tag_454\n        /* \"contracts/imiltestTwo.sol\":3103:3110  tokenId */\n      dup6\n        /* \"contracts/imiltestTwo.sol\":3103:3119  tokenId.toString */\n      tag_455\n        /* \"contracts/imiltestTwo.sol\":3103:3121  tokenId.toString() */\n      jump\t// in\n    tag_454:\n        /* \"contracts/imiltestTwo.sol\":3123:3136  baseExtension */\n      0x0c\n        /* \"contracts/imiltestTwo.sol\":3069:3137  abi.encodePacked(currentClaimURI, tokenId.toString(), baseExtension) */\n      add(0x20, mload(0x40))\n      tag_456\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_457\n      jump\t// in\n    tag_456:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/imiltestTwo.sol\":3017:3152  bytes(currentClaimURI).length > 0... */\n    tag_453:\n        /* \"contracts/imiltestTwo.sol\":3010:3152  return bytes(currentClaimURI).length > 0... */\n      swap5\n        /* \"contracts/imiltestTwo.sol\":2611:3386  function tokenURI(uint256 tokenId)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/imiltestTwo.sol\":2901:3381  if(claimPhaseForToken > 0){... */\n    tag_449:\n        /* \"contracts/imiltestTwo.sol\":3181:3209  string memory currentBaseURI */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":3212:3222  _baseURI() */\n      tag_450\n        /* \"contracts/imiltestTwo.sol\":3212:3220  _baseURI */\n      tag_460\n        /* \"contracts/imiltestTwo.sol\":3212:3222  _baseURI() */\n      jump\t// in\n        /* \"contracts/imiltestTwo.sol\":2901:3381  if(claimPhaseForToken > 0){... */\n    tag_458:\n        /* \"contracts/imiltestTwo.sol\":2727:3386  {... */\n      pop\n        /* \"contracts/imiltestTwo.sol\":2611:3386  function tokenURI(uint256 tokenId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/imiltestTwo.sol\":5051:5512  function ownerOfTokenIds(address tokenOwner) external view returns (uint256[] memory) {... */\n    tag_237:\n        /* \"contracts/imiltestTwo.sol\":5119:5135  uint256[] memory */\n      0x60\n        /* \"contracts/imiltestTwo.sol\":5148:5169  uint256 supplyCurrent */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":5172:5185  totalSupply() */\n      tag_466\n        /* \"contracts/ERC721A.sol\":6453:6465  _burnCounter */\n      sload(0x02)\n        /* \"contracts/ERC721A.sol\":6437:6450  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":6437:6465  _currentIndex - _burnCounter */\n      sub\n      swap1\n        /* \"contracts/ERC721A.sol\":6179:6502  function totalSupply() public view virtual override returns (uint256) {\r... */\n      jump\n        /* \"contracts/imiltestTwo.sol\":5172:5185  totalSupply() */\n    tag_466:\n        /* \"contracts/imiltestTwo.sol\":5148:5185  uint256 supplyCurrent = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/imiltestTwo.sol\":5196:5219  uint256[] memory result */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":5236:5257  balanceOf(tokenOwner) */\n      tag_467\n        /* \"contracts/imiltestTwo.sol\":5246:5256  tokenOwner */\n      dup5\n        /* \"contracts/imiltestTwo.sol\":5236:5245  balanceOf */\n      tag_166\n        /* \"contracts/imiltestTwo.sol\":5236:5257  balanceOf(tokenOwner) */\n      jump\t// in\n    tag_467:\n        /* \"contracts/imiltestTwo.sol\":5222:5258  new uint256[](balanceOf(tokenOwner)) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_469\n      jumpi\n      tag_469\n      tag_470\n      jump\t// in\n    tag_469:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_471\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_471:\n      pop\n        /* \"contracts/imiltestTwo.sol\":5196:5258  uint256[] memory result = new uint256[](balanceOf(tokenOwner)) */\n      swap1\n      pop\n        /* \"contracts/imiltestTwo.sol\":5269:5284  uint256 counter */\n      0x00\n        /* \"contracts/imiltestTwo.sol\":5304:5313  uint256 i */\n      dup1\n        /* \"contracts/imiltestTwo.sol\":5299:5481  for (uint256 i = 0; i < supplyCurrent; i++) {... */\n    tag_472:\n        /* \"contracts/imiltestTwo.sol\":5323:5336  supplyCurrent */\n      dup4\n        /* \"contracts/imiltestTwo.sol\":5319:5320  i */\n      dup2\n        /* \"contracts/imiltestTwo.sol\":5319:5336  i < supplyCurrent */\n      lt\n        /* \"contracts/imiltestTwo.sol\":5299:5481  for (uint256 i = 0; i < supplyCurrent; i++) {... */\n      iszero\n      tag_473\n      jumpi\n        /* \"contracts/imiltestTwo.sol\":5376:5386  tokenOwner */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/imiltestTwo.sol\":5362:5386  ownerOf(i) == tokenOwner */\n      and\n        /* \"contracts/imiltestTwo.sol\":5362:5372  ownerOf(i) */\n      tag_475\n        /* \"contracts/imiltestTwo.sol\":5370:5371  i */\n      dup3\n        /* \"contracts/imiltestTwo.sol\":5362:5369  ownerOf */\n      tag_157\n        /* \"contracts/imiltestTwo.sol\":5362:5372  ownerOf(i) */\n      jump\t// in\n    tag_475:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/imiltestTwo.sol\":5362:5386  ownerOf(i) == tokenOwner */\n      and\n      eq\n        /* \"contracts/imiltestTwo.sol\":5358:5470  if (ownerOf(i) == tokenOwner) {... */\n      iszero\n      tag_476\n      jumpi\n        /* \"contracts/imiltestTwo.sol\":5425:5426  i */\n      dup1\n        /* \"contracts/imiltestTwo.sol\":5407:5413  result */\n      dup4\n        /* \"contracts/imiltestTwo.sol\":5414:5421  counter */\n      dup4\n        /* \"contracts/imiltestTwo.sol\":5407:5422  result[counter] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_478\n      jumpi\n      tag_478\n      tag_296\n      jump\t// in\n    tag_478:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/imiltestTwo.sol\":5407:5426  result[counter] = i */\n      mstore\n        /* \"contracts/imiltestTwo.sol\":5445:5454  counter++ */\n      dup2\n      tag_479\n      dup2\n      tag_299\n      jump\t// in\n    tag_479:\n      swap3\n      pop\n      pop\n        /* \"contracts/imiltestTwo.sol\":5358:5470  if (ownerOf(i) == tokenOwner) {... */\n    tag_476:\n        /* \"contracts/imiltestTwo.sol\":5338:5341  i++ */\n      dup1\n      tag_480\n      dup2\n      tag_299\n      jump\t// in\n    tag_480:\n      swap2\n      pop\n      pop\n        /* \"contracts/imiltestTwo.sol\":5299:5481  for (uint256 i = 0; i < supplyCurrent; i++) {... */\n      jump(tag_472)\n    tag_473:\n      pop\n        /* \"contracts/imiltestTwo.sol\":5498:5504  result */\n      swap1\n      swap5\n        /* \"contracts/imiltestTwo.sol\":5051:5512  function ownerOfTokenIds(address tokenOwner) external view returns (uint256[] memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/imiltestTwo.sol\":4254:4376  function setBaseExtension(string memory _newBaseExtension) public onlyOwner {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_482\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_482:\n        /* \"contracts/imiltestTwo.sol\":4337:4370  baseExtension = _newBaseExtension */\n      dup1\n      mload\n      tag_343\n      swap1\n        /* \"contracts/imiltestTwo.sol\":4337:4350  baseExtension */\n      0x0c\n      swap1\n        /* \"contracts/imiltestTwo.sol\":4337:4370  baseExtension = _newBaseExtension */\n      0x20\n      dup5\n      add\n      swap1\n      tag_344\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_487\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_487:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_489\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10357:10359   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10339:10360   */\n      mstore\n        /* \"#utility.yul\":10396:10398   */\n      0x26\n        /* \"#utility.yul\":10376:10394   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10369:10399   */\n      mstore\n        /* \"#utility.yul\":10435:10469   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10415:10433   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10408:10470   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":10486:10504   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10479:10515   */\n      mstore\n        /* \"#utility.yul\":10532:10551   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_379\n        /* \"#utility.yul\":10155:10557   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_489:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_337\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_367\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_366\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12889:12891   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12871:12892   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12908:12926   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12901:12931   */\n      mstore\n        /* \"#utility.yul\":12967:13001   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12947:12965   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12940:13002   */\n      mstore\n        /* \"#utility.yul\":13019:13037   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_379\n        /* \"#utility.yul\":12687:13043   */\n      jump\n        /* \"contracts/ERC721A.sol\":18282:18564  function _exists(uint256 tokenId) internal view virtual returns (bool) {\r... */\n    tag_275:\n        /* \"contracts/ERC721A.sol\":18347:18351  bool */\n      0x00\n        /* \"contracts/ERC721A.sol\":18437:18450  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":18427:18434  tokenId */\n      dup3\n        /* \"contracts/ERC721A.sol\":18427:18450  tokenId < _currentIndex */\n      lt\n        /* \"contracts/ERC721A.sol\":18384:18537  _startTokenId() <= tokenId &&\r... */\n      dup1\n      iszero\n      tag_260\n      jumpi\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":18488:18514  _packedOwnerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":18488:18505  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":18488:18514  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"contracts/ERC721A.sol\":18488:18532  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"contracts/ERC721A.sol\":18488:18537  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n        /* \"contracts/ERC721A.sol\":18282:18564  function _exists(uint256 tokenId) internal view virtual returns (bool) {\r... */\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":12976:14251  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\r... */\n    tag_308:\n        /* \"contracts/ERC721A.sol\":13043:13050  uint256 */\n      0x00\n        /* \"contracts/ERC721A.sol\":13078:13085  tokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":13180:13193  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":13173:13177  curr */\n      dup2\n        /* \"contracts/ERC721A.sol\":13173:13193  curr < _currentIndex */\n      lt\n        /* \"contracts/ERC721A.sol\":13169:14184  if (curr < _currentIndex) {\r... */\n      iszero\n      tag_509\n      jumpi\n        /* \"contracts/ERC721A.sol\":13218:13232  uint256 packed */\n      0x00\n        /* \"contracts/ERC721A.sol\":13235:13258  _packedOwnerships[curr] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":13235:13252  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":13235:13258  _packedOwnerships[curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      shl(0xe0, 0x01)\n        /* \"contracts/ERC721A.sol\":13324:13348  packed & _BITMASK_BURNED */\n      dup2\n      and\n        /* \"contracts/ERC721A.sol\":13320:14165  if (packed & _BITMASK_BURNED == 0) {\r... */\n      tag_510\n      jumpi\n        /* \"contracts/ERC721A.sol\":13989:14102  while (packed == 0) {\r... */\n    tag_511:\n        /* \"contracts/ERC721A.sol\":13996:14007  packed == 0 */\n      dup1\n        /* \"contracts/ERC721A.sol\":13989:14102  while (packed == 0) {\r... */\n      tag_512\n      jumpi\n      pop\n      not(0x00)\n        /* \"contracts/ERC721A.sol\":14067:14073  --curr */\n      add\n        /* \"contracts/ERC721A.sol\":14049:14074  _packedOwnerships[--curr] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":14049:14066  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":14049:14074  _packedOwnerships[--curr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/ERC721A.sol\":13989:14102  while (packed == 0) {\r... */\n      jump(tag_511)\n    tag_512:\n        /* \"contracts/ERC721A.sol\":14135:14141  packed */\n      swap4\n        /* \"contracts/ERC721A.sol\":12976:14251  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":13320:14165  if (packed & _BITMASK_BURNED == 0) {\r... */\n    tag_510:\n        /* \"contracts/ERC721A.sol\":13195:14184  {\r... */\n      pop\n        /* \"contracts/ERC721A.sol\":13169:14184  if (curr < _currentIndex) {\r... */\n    tag_509:\n        /* \"contracts/ERC721A.sol\":14212:14243  OwnerQueryForNonexistentToken() */\n      mload(0x40)\n      shl(0xe1, 0x6f96cda1)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_367:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":34152:34264  function _safeMint(address to, uint256 quantity) internal virtual {\r... */\n    tag_413:\n        /* \"contracts/ERC721A.sol\":34229:34256  _safeMint(to, quantity, '') */\n      tag_343\n        /* \"contracts/ERC721A.sol\":34239:34241  to */\n      dup3\n        /* \"contracts/ERC721A.sol\":34243:34251  quantity */\n      dup3\n        /* \"contracts/ERC721A.sol\":34229:34256  _safeMint(to, quantity, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/ERC721A.sol\":34229:34238  _safeMint */\n      tag_524\n        /* \"contracts/ERC721A.sol\":34229:34256  _safeMint(to, quantity, '') */\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":26729:27445  function _checkContractOnERC721Received(\r... */\n    tag_434:\n        /* \"contracts/ERC721A.sol\":26913:27001  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":26892:26896  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":26913:26958  ERC721A__IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"contracts/ERC721A.sol\":26913:27001  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_527\n      swap1\n        /* \"contracts/ERC721A.sol\":40407:40417  msg.sender */\n      caller\n      swap1\n        /* \"contracts/ERC721A.sol\":26980:26984  from */\n      dup10\n      swap1\n        /* \"contracts/ERC721A.sol\":26986:26993  tokenId */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":26995:27000  _data */\n      dup9\n      swap1\n        /* \"contracts/ERC721A.sol\":26913:27001  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_528\n      jump\t// in\n    tag_527:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_529\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_529:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_530\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_531\n      swap2\n      dup2\n      add\n      swap1\n      tag_532\n      jump\t// in\n    tag_531:\n      0x01\n    tag_530:\n        /* \"contracts/ERC721A.sol\":26909:27438  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\r... */\n      tag_533\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_538\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_537)\n    tag_538:\n      0x60\n      swap2\n      pop\n    tag_537:\n      pop\n        /* \"contracts/ERC721A.sol\":27196:27209  reason.length */\n      dup1\n      mload\n        /* \"contracts/ERC721A.sol\":27192:27427  if (reason.length == 0) {\r... */\n      tag_539\n      jumpi\n        /* \"contracts/ERC721A.sol\":27242:27282  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":27192:27427  if (reason.length == 0) {\r... */\n    tag_539:\n        /* \"contracts/ERC721A.sol\":27385:27391  reason */\n      dup1\n        /* \"contracts/ERC721A.sol\":27379:27392  mload(reason) */\n      mload\n        /* \"contracts/ERC721A.sol\":27370:27376  reason */\n      dup2\n        /* \"contracts/ERC721A.sol\":27366:27368  32 */\n      0x20\n        /* \"contracts/ERC721A.sol\":27362:27377  add(32, reason) */\n      add\n        /* \"contracts/ERC721A.sol\":27355:27393  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/ERC721A.sol\":26909:27438  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\r... */\n    tag_533:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/ERC721A.sol\":27072:27136  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"contracts/ERC721A.sol\":26729:27445  function _checkContractOnERC721Received(\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/imiltestTwo.sol\":1227:1339  function _claimURI(uint claim) internal view virtual returns (string memory) {... */\n    tag_451:\n        /* \"contracts/imiltestTwo.sol\":1318:1333  claimURI[claim] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/imiltestTwo.sol\":1318:1326  claimURI */\n      0x0b\n        /* \"contracts/imiltestTwo.sol\":1318:1333  claimURI[claim] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/imiltestTwo.sol\":1311:1333  return claimURI[claim] */\n      dup1\n      sload\n        /* \"contracts/imiltestTwo.sol\":1289:1302  string memory */\n      0x60\n      swap2\n        /* \"contracts/imiltestTwo.sol\":1318:1333  claimURI[claim] */\n      swap1\n        /* \"contracts/imiltestTwo.sol\":1311:1333  return claimURI[claim] */\n      tag_543\n      swap1\n      tag_268\n      jump\t// in\n    tag_543:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_544\n      swap1\n      tag_268\n      jump\t// in\n    tag_544:\n      dup1\n      iszero\n      tag_545\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_546\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_545)\n    tag_546:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_547:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_547\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_545:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/imiltestTwo.sol\":1227:1339  function _claimURI(uint claim) internal view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_455:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":448:461  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":665:675  value == 0 */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n      tag_549\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":691:701  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":392:1095  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":661:712  if (value == 0) {... */\n    tag_549:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":736:741  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":721:733  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n    tag_550:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":782:791  temp != 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      tag_551\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":807:815  digits++ */\n      dup1\n      tag_552\n      dup2\n      tag_299\n      jump\t// in\n    tag_552:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":829:839  temp /= 10 */\n      tag_553\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":837:839  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":829:839  temp /= 10 */\n      dup4\n      tag_554\n      jump\t// in\n    tag_553:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":775:850  while (temp != 0) {... */\n      jump(tag_550)\n    tag_551:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:878  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":891:897  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":881:898  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_556\n      jumpi\n      tag_556\n      tag_470\n      jump\t// in\n    tag_556:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_557\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_557:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":859:898  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n    tag_558:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":915:925  value != 0 */\n      dup5\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      tag_453\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":941:952  digits -= 1 */\n      tag_560\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":951:952  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":941:952  digits -= 1 */\n      dup4\n      tag_561\n      jump\t// in\n    tag_560:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1019  value % 10 */\n      tag_562\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1019  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1014  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1009:1019  value % 10 */\n      tag_563\n      jump\t// in\n    tag_562:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:1020  48 + uint256(value % 10) */\n      tag_564\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:998  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":996:1020  48 + uint256(value % 10) */\n      tag_385\n      jump\t// in\n    tag_564:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":983:1022  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:972  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":973:979  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:980  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_566\n      jumpi\n      tag_566\n      tag_296\n      jump\t// in\n    tag_566:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":966:1022  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      tag_567\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1045:1047  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1047  value /= 10 */\n      dup7\n      tag_554\n      jump\t// in\n    tag_567:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":908:1058  while (value != 0) {... */\n      jump(tag_558)\n        /* \"contracts/imiltestTwo.sol\":1119:1221  function _baseURI() internal view virtual override returns (string memory) {... */\n    tag_460:\n        /* \"contracts/imiltestTwo.sol\":1179:1192  string memory */\n      0x60\n        /* \"contracts/imiltestTwo.sol\":1208:1215  baseURI */\n      0x0a\n        /* \"contracts/imiltestTwo.sol\":1201:1215  return baseURI */\n      dup1\n      sload\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n        /* \"contracts/ERC721A.sol\":33379:34068  function _safeMint(\r... */\n    tag_524:\n        /* \"contracts/ERC721A.sol\":33510:33529  _mint(to, quantity) */\n      tag_577\n        /* \"contracts/ERC721A.sol\":33516:33518  to */\n      dup4\n        /* \"contracts/ERC721A.sol\":33520:33528  quantity */\n      dup4\n        /* \"contracts/ERC721A.sol\":33510:33515  _mint */\n      tag_578\n        /* \"contracts/ERC721A.sol\":33510:33529  _mint(to, quantity) */\n      jump\t// in\n    tag_577:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":33571:33585  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"contracts/ERC721A.sol\":33571:33590  to.code.length != 0 */\n      iszero\n        /* \"contracts/ERC721A.sol\":33567:34050  if (to.code.length != 0) {\r... */\n      tag_292\n      jumpi\n        /* \"contracts/ERC721A.sol\":33625:33638  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":33673:33687  end - quantity */\n      dup3\n      dup2\n      sub\n        /* \"contracts/ERC721A.sol\":33706:33939  do {\r... */\n    tag_580:\n        /* \"contracts/ERC721A.sol\":33737:33799  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      tag_583\n        /* \"contracts/ERC721A.sol\":33776:33777  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":33780:33782  to */\n      dup7\n        /* \"contracts/ERC721A.sol\":33784:33791  index++ */\n      dup4\n      dup1\n      0x01\n      add\n      swap5\n      pop\n        /* \"contracts/ERC721A.sol\":33793:33798  _data */\n      dup7\n        /* \"contracts/ERC721A.sol\":33737:33767  _checkContractOnERC721Received */\n      tag_434\n        /* \"contracts/ERC721A.sol\":33737:33799  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      jump\t// in\n    tag_583:\n        /* \"contracts/ERC721A.sol\":33732:33899  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\r... */\n      tag_584\n      jumpi\n        /* \"contracts/ERC721A.sol\":33835:33875  TransferToNonERC721ReceiverImplementer() */\n      mload(0x40)\n      shl(0xe1, 0x68d2bf6b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":33732:33899  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\r... */\n    tag_584:\n        /* \"contracts/ERC721A.sol\":33934:33937  end */\n      dup2\n        /* \"contracts/ERC721A.sol\":33926:33931  index */\n      dup2\n        /* \"contracts/ERC721A.sol\":33926:33937  index < end */\n      lt\n        /* \"contracts/ERC721A.sol\":33706:33939  do {\r... */\n      tag_580\n      jumpi\n        /* \"contracts/ERC721A.sol\":34021:34024  end */\n      dup2\n        /* \"contracts/ERC721A.sol\":34004:34017  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":34004:34024  _currentIndex != end */\n      eq\n        /* \"contracts/ERC721A.sol\":34000:34034  if (_currentIndex != end) revert() */\n      tag_585\n      jumpi\n        /* \"contracts/ERC721A.sol\":34026:34034  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/ERC721A.sol\":34000:34034  if (_currentIndex != end) revert() */\n    tag_585:\n        /* \"contracts/ERC721A.sol\":33592:34050  {\r... */\n      pop\n      pop\n        /* \"contracts/ERC721A.sol\":33379:34068  function _safeMint(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC721A.sol\":27907:30627  function _mint(address to, uint256 quantity) internal virtual {\r... */\n    tag_578:\n        /* \"contracts/ERC721A.sol\":28003:28016  _currentIndex */\n      sload(0x01)\n        /* \"contracts/ERC721A.sol\":28031:28044  quantity == 0 */\n      dup2\n        /* \"contracts/ERC721A.sol\":28027:28071  if (quantity == 0) revert MintZeroQuantity() */\n      tag_587\n      jumpi\n        /* \"contracts/ERC721A.sol\":28053:28071  MintZeroQuantity() */\n      mload(0x40)\n      shl(0xe0, 0xb562e8dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":28027:28071  if (quantity == 0) revert MintZeroQuantity() */\n    tag_587:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ERC721A.sol\":28559:28581  _packedAddressData[to] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":28559:28577  _packedAddressData */\n      0x06\n        /* \"contracts/ERC721A.sol\":28559:28581  _packedAddressData[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ERC721A.sol\":1660:1662  64 */\n      0x40\n        /* \"contracts/ERC721A.sol\":28559:28581  _packedAddressData[to] */\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/ERC721A.sol\":28559:28630  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup1\n      sload\n        /* \"contracts/ERC721A.sol\":28597:28629  (1 << _BITPOS_NUMBER_MINTED) | 1 */\n      0x010000000000000001\n        /* \"contracts/ERC721A.sol\":28585:28630  quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup9\n      mul\n        /* \"contracts/ERC721A.sol\":28559:28630  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      add\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":28873:28904  _packedOwnerships[startTokenId] */\n      dup5\n      dup4\n      mstore\n        /* \"contracts/ERC721A.sol\":28873:28890  _packedOwnerships */\n      0x05\n        /* \"contracts/ERC721A.sol\":28873:28904  _packedOwnerships[startTokenId] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      0x01\n        /* \"contracts/ERC721A.sol\":15641:15656  eq(quantity, 1) */\n      dup6\n      eq\n        /* \"contracts/ERC721A.sol\":15615:15639  _BITPOS_NEXT_INITIALIZED */\n      0xe1\n        /* \"contracts/ERC721A.sol\":15611:15657  shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      shl\n        /* \"contracts/ERC721A.sol\":15210:15221  timestamp() */\n      timestamp\n        /* \"contracts/ERC721A.sol\":15185:15208  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"contracts/ERC721A.sol\":15181:15222  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"contracts/ERC721A.sol\":15178:15230  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"contracts/ERC721A.sol\":15168:15231  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      dup4\n      or\n        /* \"contracts/ERC721A.sol\":28873:29046  _packedOwnerships[startTokenId] = _packOwnershipData(\r... */\n      swap1\n      sstore\n        /* \"contracts/ERC721A.sol\":29108:29131  startTokenId + quantity */\n      dup3\n      dup5\n      add\n      swap1\n        /* \"contracts/ERC721A.sol\":28873:28904  _packedOwnerships[startTokenId] */\n      dup4\n      swap1\n        /* \"contracts/ERC721A.sol\":28559:28581  _packedAddressData[to] */\n      dup4\n      swap1\n        /* \"contracts/ERC721A.sol\":29873:29898  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC721A.sol\":28559:28581  _packedAddressData[to] */\n      dup2\n      dup1\n        /* \"contracts/ERC721A.sol\":29726:30061  log4(\r... */\n      log4\n        /* \"contracts/ERC721A.sol\":30141:30142  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":30127:30139  startTokenId */\n      dup4\n        /* \"contracts/ERC721A.sol\":30123:30143  add(startTokenId, 1) */\n      add\n        /* \"contracts/ERC721A.sol\":30081:30427  for {\r... */\n    tag_593:\n        /* \"contracts/ERC721A.sol\":30182:30185  end */\n      dup2\n        /* \"contracts/ERC721A.sol\":30173:30180  tokenId */\n      dup2\n        /* \"contracts/ERC721A.sol\":30170:30186  eq(tokenId, end) */\n      eq\n        /* \"contracts/ERC721A.sol\":30081:30427  for {\r... */\n      tag_595\n      jumpi\n        /* \"contracts/ERC721A.sol\":30400:30407  tokenId */\n      dup1\n        /* \"contracts/ERC721A.sol\":30390:30398  toMasked */\n      dup4\n        /* \"contracts/ERC721A.sol\":30387:30388  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":30360:30385  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/ERC721A.sol\":30357:30358  0 */\n      0x00\n        /* \"contracts/ERC721A.sol\":30354:30355  0 */\n      dup1\n        /* \"contracts/ERC721A.sol\":30349:30408  log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId) */\n      log4\n        /* \"contracts/ERC721A.sol\":30235:30236  1 */\n      0x01\n        /* \"contracts/ERC721A.sol\":30222:30237  add(tokenId, 1) */\n      add\n        /* \"contracts/ERC721A.sol\":30081:30427  for {\r... */\n      jump(tag_593)\n    tag_595:\n      pop\n        /* \"contracts/ERC721A.sol\":30460:30473  toMasked == 0 */\n      dup2\n        /* \"contracts/ERC721A.sol\":30456:30501  if (toMasked == 0) revert MintToZeroAddress() */\n      tag_596\n      jumpi\n        /* \"contracts/ERC721A.sol\":30482:30501  MintToZeroAddress() */\n      mload(0x40)\n      shl(0xe8, 0x2e0763)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/ERC721A.sol\":30456:30501  if (toMasked == 0) revert MintToZeroAddress() */\n    tag_596:\n        /* \"contracts/ERC721A.sol\":30518:30531  _currentIndex */\n      0x01\n        /* \"contracts/ERC721A.sol\":30518:30537  _currentIndex = end */\n      sstore\n      pop\n        /* \"contracts/imiltestTwo.sol\":4945:5040  for (uint256 i = 0; i < addresses.length; i++) {... */\n      pop\n        /* \"contracts/imiltestTwo.sol\":4855:5045  function removeUsersFromAllowlist(address[] calldata addresses) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n    tag_344:\n      dup3\n      dup1\n      sload\n      tag_599\n      swap1\n      tag_268\n      jump\t// in\n    tag_599:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_601\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_604)\n    tag_601:\n      dup3\n      0x1f\n      lt\n      tag_602\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_604)\n    tag_602:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_604\n      jumpi\n      swap2\n      dup3\n      add\n    tag_603:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_604\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_603)\n    tag_604:\n      pop\n      tag_605\n      swap3\n      swap2\n      pop\n      tag_606\n      jump\t// in\n    tag_605:\n      pop\n      swap1\n      jump\t// out\n    tag_606:\n    tag_607:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_605\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_607)\n        /* \"#utility.yul\":14:645   */\n    tag_610:\n        /* \"#utility.yul\":78:83   */\n      0x00\n        /* \"#utility.yul\":108:126   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":149:151   */\n      dup1\n        /* \"#utility.yul\":141:147   */\n      dup5\n        /* \"#utility.yul\":138:152   */\n      gt\n        /* \"#utility.yul\":135:175   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":155:173   */\n      tag_613\n      tag_470\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":230:232   */\n      0x40\n        /* \"#utility.yul\":224:233   */\n      mload\n        /* \"#utility.yul\":198:200   */\n      0x1f\n        /* \"#utility.yul\":284:299   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":280:304   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":306:308   */\n      0x3f\n        /* \"#utility.yul\":276:309   */\n      add\n        /* \"#utility.yul\":272:314   */\n      and\n        /* \"#utility.yul\":260:315   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":330:348   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":350:372   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":327:373   */\n      or\n        /* \"#utility.yul\":324:396   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":376:394   */\n      tag_615\n      tag_470\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":416:426   */\n      dup2\n        /* \"#utility.yul\":412:414   */\n      0x40\n        /* \"#utility.yul\":405:427   */\n      mstore\n        /* \"#utility.yul\":445:451   */\n      dup1\n        /* \"#utility.yul\":436:451   */\n      swap4\n      pop\n        /* \"#utility.yul\":475:481   */\n      dup6\n        /* \"#utility.yul\":467:473   */\n      dup2\n        /* \"#utility.yul\":460:482   */\n      mstore\n        /* \"#utility.yul\":515:518   */\n      dup7\n        /* \"#utility.yul\":506:512   */\n      dup7\n        /* \"#utility.yul\":501:504   */\n      dup7\n        /* \"#utility.yul\":497:513   */\n      add\n        /* \"#utility.yul\":494:519   */\n      gt\n        /* \"#utility.yul\":491:536   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":532:533   */\n      0x00\n        /* \"#utility.yul\":529:530   */\n      dup1\n        /* \"#utility.yul\":522:534   */\n      revert\n        /* \"#utility.yul\":491:536   */\n    tag_616:\n        /* \"#utility.yul\":582:588   */\n      dup6\n        /* \"#utility.yul\":577:580   */\n      dup6\n        /* \"#utility.yul\":570:574   */\n      0x20\n        /* \"#utility.yul\":562:568   */\n      dup4\n        /* \"#utility.yul\":558:575   */\n      add\n        /* \"#utility.yul\":545:589   */\n      calldatacopy\n        /* \"#utility.yul\":637:638   */\n      0x00\n        /* \"#utility.yul\":630:634   */\n      0x20\n        /* \"#utility.yul\":621:627   */\n      dup8\n        /* \"#utility.yul\":613:619   */\n      dup4\n        /* \"#utility.yul\":609:628   */\n      add\n        /* \"#utility.yul\":605:635   */\n      add\n        /* \"#utility.yul\":598:639   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:645   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":650:823   */\n    tag_617:\n        /* \"#utility.yul\":718:738   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":767:798   */\n      dup2\n      and\n        /* \"#utility.yul\":757:799   */\n      dup2\n      eq\n        /* \"#utility.yul\":747:817   */\n      tag_619\n      jumpi\n        /* \"#utility.yul\":813:814   */\n      0x00\n        /* \"#utility.yul\":810:811   */\n      dup1\n        /* \"#utility.yul\":803:815   */\n      revert\n        /* \"#utility.yul\":747:817   */\n    tag_619:\n        /* \"#utility.yul\":650:823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":828:988   */\n    tag_620:\n        /* \"#utility.yul\":893:913   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":949:962   */\n      dup1\n      iszero\n        /* \"#utility.yul\":942:963   */\n      iszero\n        /* \"#utility.yul\":932:964   */\n      dup2\n      eq\n        /* \"#utility.yul\":922:982   */\n      tag_619\n      jumpi\n        /* \"#utility.yul\":978:979   */\n      0x00\n        /* \"#utility.yul\":975:976   */\n      dup1\n        /* \"#utility.yul\":968:980   */\n      revert\n        /* \"#utility.yul\":993:1214   */\n    tag_623:\n        /* \"#utility.yul\":1036:1041   */\n      0x00\n        /* \"#utility.yul\":1089:1092   */\n      dup3\n        /* \"#utility.yul\":1082:1086   */\n      0x1f\n        /* \"#utility.yul\":1074:1080   */\n      dup4\n        /* \"#utility.yul\":1070:1087   */\n      add\n        /* \"#utility.yul\":1066:1093   */\n      slt\n        /* \"#utility.yul\":1056:1111   */\n      tag_625\n      jumpi\n        /* \"#utility.yul\":1107:1108   */\n      0x00\n        /* \"#utility.yul\":1104:1105   */\n      dup1\n        /* \"#utility.yul\":1097:1109   */\n      revert\n        /* \"#utility.yul\":1056:1111   */\n    tag_625:\n        /* \"#utility.yul\":1129:1208   */\n      tag_512\n        /* \"#utility.yul\":1204:1207   */\n      dup4\n        /* \"#utility.yul\":1195:1201   */\n      dup4\n        /* \"#utility.yul\":1182:1202   */\n      calldataload\n        /* \"#utility.yul\":1175:1179   */\n      0x20\n        /* \"#utility.yul\":1167:1173   */\n      dup6\n        /* \"#utility.yul\":1163:1180   */\n      add\n        /* \"#utility.yul\":1129:1208   */\n      tag_610\n      jump\t// in\n        /* \"#utility.yul\":1219:1405   */\n    tag_68:\n        /* \"#utility.yul\":1278:1284   */\n      0x00\n        /* \"#utility.yul\":1331:1333   */\n      0x20\n        /* \"#utility.yul\":1319:1328   */\n      dup3\n        /* \"#utility.yul\":1310:1317   */\n      dup5\n        /* \"#utility.yul\":1306:1329   */\n      sub\n        /* \"#utility.yul\":1302:1334   */\n      slt\n        /* \"#utility.yul\":1299:1351   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":1347:1348   */\n      0x00\n        /* \"#utility.yul\":1344:1345   */\n      dup1\n        /* \"#utility.yul\":1337:1349   */\n      revert\n        /* \"#utility.yul\":1299:1351   */\n    tag_628:\n        /* \"#utility.yul\":1370:1399   */\n      tag_512\n        /* \"#utility.yul\":1389:1398   */\n      dup3\n        /* \"#utility.yul\":1370:1399   */\n      tag_617\n      jump\t// in\n        /* \"#utility.yul\":1410:1670   */\n    tag_251:\n        /* \"#utility.yul\":1478:1484   */\n      0x00\n        /* \"#utility.yul\":1486:1492   */\n      dup1\n        /* \"#utility.yul\":1539:1541   */\n      0x40\n        /* \"#utility.yul\":1527:1536   */\n      dup4\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1514:1537   */\n      sub\n        /* \"#utility.yul\":1510:1542   */\n      slt\n        /* \"#utility.yul\":1507:1559   */\n      iszero\n      tag_631\n      jumpi\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1507:1559   */\n    tag_631:\n        /* \"#utility.yul\":1578:1607   */\n      tag_632\n        /* \"#utility.yul\":1597:1606   */\n      dup4\n        /* \"#utility.yul\":1578:1607   */\n      tag_617\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":1568:1607   */\n      swap2\n      pop\n        /* \"#utility.yul\":1626:1664   */\n      tag_633\n        /* \"#utility.yul\":1660:1662   */\n      0x20\n        /* \"#utility.yul\":1649:1658   */\n      dup5\n        /* \"#utility.yul\":1645:1663   */\n      add\n        /* \"#utility.yul\":1626:1664   */\n      tag_617\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":1616:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1410:1670   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1675:2003   */\n    tag_124:\n        /* \"#utility.yul\":1752:1758   */\n      0x00\n        /* \"#utility.yul\":1760:1766   */\n      dup1\n        /* \"#utility.yul\":1768:1774   */\n      0x00\n        /* \"#utility.yul\":1821:1823   */\n      0x60\n        /* \"#utility.yul\":1809:1818   */\n      dup5\n        /* \"#utility.yul\":1800:1807   */\n      dup7\n        /* \"#utility.yul\":1796:1819   */\n      sub\n        /* \"#utility.yul\":1792:1824   */\n      slt\n        /* \"#utility.yul\":1789:1841   */\n      iszero\n      tag_635\n      jumpi\n        /* \"#utility.yul\":1837:1838   */\n      0x00\n        /* \"#utility.yul\":1834:1835   */\n      dup1\n        /* \"#utility.yul\":1827:1839   */\n      revert\n        /* \"#utility.yul\":1789:1841   */\n    tag_635:\n        /* \"#utility.yul\":1860:1889   */\n      tag_636\n        /* \"#utility.yul\":1879:1888   */\n      dup5\n        /* \"#utility.yul\":1860:1889   */\n      tag_617\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":1850:1889   */\n      swap3\n      pop\n        /* \"#utility.yul\":1908:1946   */\n      tag_637\n        /* \"#utility.yul\":1942:1944   */\n      0x20\n        /* \"#utility.yul\":1931:1940   */\n      dup6\n        /* \"#utility.yul\":1927:1945   */\n      add\n        /* \"#utility.yul\":1908:1946   */\n      tag_617\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":1898:1946   */\n      swap2\n      pop\n        /* \"#utility.yul\":1993:1995   */\n      0x40\n        /* \"#utility.yul\":1982:1991   */\n      dup5\n        /* \"#utility.yul\":1978:1996   */\n      add\n        /* \"#utility.yul\":1965:1997   */\n      calldataload\n        /* \"#utility.yul\":1955:1997   */\n      swap1\n      pop\n        /* \"#utility.yul\":1675:2003   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2008:2674   */\n    tag_214:\n        /* \"#utility.yul\":2103:2109   */\n      0x00\n        /* \"#utility.yul\":2111:2117   */\n      dup1\n        /* \"#utility.yul\":2119:2125   */\n      0x00\n        /* \"#utility.yul\":2127:2133   */\n      dup1\n        /* \"#utility.yul\":2180:2183   */\n      0x80\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2159:2166   */\n      dup8\n        /* \"#utility.yul\":2155:2178   */\n      sub\n        /* \"#utility.yul\":2151:2184   */\n      slt\n        /* \"#utility.yul\":2148:2201   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":2197:2198   */\n      0x00\n        /* \"#utility.yul\":2194:2195   */\n      dup1\n        /* \"#utility.yul\":2187:2199   */\n      revert\n        /* \"#utility.yul\":2148:2201   */\n    tag_639:\n        /* \"#utility.yul\":2220:2249   */\n      tag_640\n        /* \"#utility.yul\":2239:2248   */\n      dup6\n        /* \"#utility.yul\":2220:2249   */\n      tag_617\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":2210:2249   */\n      swap4\n      pop\n        /* \"#utility.yul\":2268:2306   */\n      tag_641\n        /* \"#utility.yul\":2302:2304   */\n      0x20\n        /* \"#utility.yul\":2291:2300   */\n      dup7\n        /* \"#utility.yul\":2287:2305   */\n      add\n        /* \"#utility.yul\":2268:2306   */\n      tag_617\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":2258:2306   */\n      swap3\n      pop\n        /* \"#utility.yul\":2353:2355   */\n      0x40\n        /* \"#utility.yul\":2342:2351   */\n      dup6\n        /* \"#utility.yul\":2338:2356   */\n      add\n        /* \"#utility.yul\":2325:2357   */\n      calldataload\n        /* \"#utility.yul\":2315:2357   */\n      swap2\n      pop\n        /* \"#utility.yul\":2408:2410   */\n      0x60\n        /* \"#utility.yul\":2397:2406   */\n      dup6\n        /* \"#utility.yul\":2393:2411   */\n      add\n        /* \"#utility.yul\":2380:2412   */\n      calldataload\n        /* \"#utility.yul\":2435:2453   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2427:2433   */\n      dup2\n        /* \"#utility.yul\":2424:2454   */\n      gt\n        /* \"#utility.yul\":2421:2471   */\n      iszero\n      tag_642\n      jumpi\n        /* \"#utility.yul\":2467:2468   */\n      0x00\n        /* \"#utility.yul\":2464:2465   */\n      dup1\n        /* \"#utility.yul\":2457:2469   */\n      revert\n        /* \"#utility.yul\":2421:2471   */\n    tag_642:\n        /* \"#utility.yul\":2490:2512   */\n      dup6\n      add\n        /* \"#utility.yul\":2543:2547   */\n      0x1f\n        /* \"#utility.yul\":2535:2548   */\n      dup2\n      add\n        /* \"#utility.yul\":2531:2558   */\n      dup8\n      sgt\n        /* \"#utility.yul\":2521:2576   */\n      tag_643\n      jumpi\n        /* \"#utility.yul\":2572:2573   */\n      0x00\n        /* \"#utility.yul\":2569:2570   */\n      dup1\n        /* \"#utility.yul\":2562:2574   */\n      revert\n        /* \"#utility.yul\":2521:2576   */\n    tag_643:\n        /* \"#utility.yul\":2595:2668   */\n      tag_644\n        /* \"#utility.yul\":2660:2667   */\n      dup8\n        /* \"#utility.yul\":2655:2657   */\n      dup3\n        /* \"#utility.yul\":2642:2658   */\n      calldataload\n        /* \"#utility.yul\":2637:2639   */\n      0x20\n        /* \"#utility.yul\":2633:2635   */\n      dup5\n        /* \"#utility.yul\":2629:2640   */\n      add\n        /* \"#utility.yul\":2595:2668   */\n      tag_610\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":2585:2668   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2008:2674   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2679:2933   */\n    tag_196:\n        /* \"#utility.yul\":2744:2750   */\n      0x00\n        /* \"#utility.yul\":2752:2758   */\n      dup1\n        /* \"#utility.yul\":2805:2807   */\n      0x40\n        /* \"#utility.yul\":2793:2802   */\n      dup4\n        /* \"#utility.yul\":2784:2791   */\n      dup6\n        /* \"#utility.yul\":2780:2803   */\n      sub\n        /* \"#utility.yul\":2776:2808   */\n      slt\n        /* \"#utility.yul\":2773:2825   */\n      iszero\n      tag_646\n      jumpi\n        /* \"#utility.yul\":2821:2822   */\n      0x00\n        /* \"#utility.yul\":2818:2819   */\n      dup1\n        /* \"#utility.yul\":2811:2823   */\n      revert\n        /* \"#utility.yul\":2773:2825   */\n    tag_646:\n        /* \"#utility.yul\":2844:2873   */\n      tag_647\n        /* \"#utility.yul\":2863:2872   */\n      dup4\n        /* \"#utility.yul\":2844:2873   */\n      tag_617\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":2834:2873   */\n      swap2\n      pop\n        /* \"#utility.yul\":2892:2927   */\n      tag_633\n        /* \"#utility.yul\":2923:2925   */\n      0x20\n        /* \"#utility.yul\":2912:2921   */\n      dup5\n        /* \"#utility.yul\":2908:2926   */\n      add\n        /* \"#utility.yul\":2892:2927   */\n      tag_620\n      jump\t// in\n        /* \"#utility.yul\":2938:3192   */\n    tag_86:\n        /* \"#utility.yul\":3006:3012   */\n      0x00\n        /* \"#utility.yul\":3014:3020   */\n      dup1\n        /* \"#utility.yul\":3067:3069   */\n      0x40\n        /* \"#utility.yul\":3055:3064   */\n      dup4\n        /* \"#utility.yul\":3046:3053   */\n      dup6\n        /* \"#utility.yul\":3042:3065   */\n      sub\n        /* \"#utility.yul\":3038:3070   */\n      slt\n        /* \"#utility.yul\":3035:3087   */\n      iszero\n      tag_650\n      jumpi\n        /* \"#utility.yul\":3083:3084   */\n      0x00\n        /* \"#utility.yul\":3080:3081   */\n      dup1\n        /* \"#utility.yul\":3073:3085   */\n      revert\n        /* \"#utility.yul\":3035:3087   */\n    tag_650:\n        /* \"#utility.yul\":3106:3135   */\n      tag_651\n        /* \"#utility.yul\":3125:3134   */\n      dup4\n        /* \"#utility.yul\":3106:3135   */\n      tag_617\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":3096:3135   */\n      swap5\n        /* \"#utility.yul\":3182:3184   */\n      0x20\n        /* \"#utility.yul\":3167:3185   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3154:3186   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2938:3192   */\n      jump\t// out\n        /* \"#utility.yul\":3197:3812   */\n    tag_101:\n        /* \"#utility.yul\":3283:3289   */\n      0x00\n        /* \"#utility.yul\":3291:3297   */\n      dup1\n        /* \"#utility.yul\":3344:3346   */\n      0x20\n        /* \"#utility.yul\":3332:3341   */\n      dup4\n        /* \"#utility.yul\":3323:3330   */\n      dup6\n        /* \"#utility.yul\":3319:3342   */\n      sub\n        /* \"#utility.yul\":3315:3347   */\n      slt\n        /* \"#utility.yul\":3312:3364   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":3360:3361   */\n      0x00\n        /* \"#utility.yul\":3357:3358   */\n      dup1\n        /* \"#utility.yul\":3350:3362   */\n      revert\n        /* \"#utility.yul\":3312:3364   */\n    tag_653:\n        /* \"#utility.yul\":3400:3409   */\n      dup3\n        /* \"#utility.yul\":3387:3410   */\n      calldataload\n        /* \"#utility.yul\":3429:3447   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3470:3472   */\n      dup1\n        /* \"#utility.yul\":3462:3468   */\n      dup3\n        /* \"#utility.yul\":3459:3473   */\n      gt\n        /* \"#utility.yul\":3456:3490   */\n      iszero\n      tag_654\n      jumpi\n        /* \"#utility.yul\":3486:3487   */\n      0x00\n        /* \"#utility.yul\":3483:3484   */\n      dup1\n        /* \"#utility.yul\":3476:3488   */\n      revert\n        /* \"#utility.yul\":3456:3490   */\n    tag_654:\n        /* \"#utility.yul\":3524:3530   */\n      dup2\n        /* \"#utility.yul\":3513:3522   */\n      dup6\n        /* \"#utility.yul\":3509:3531   */\n      add\n        /* \"#utility.yul\":3499:3531   */\n      swap2\n      pop\n        /* \"#utility.yul\":3569:3576   */\n      dup6\n        /* \"#utility.yul\":3562:3566   */\n      0x1f\n        /* \"#utility.yul\":3558:3560   */\n      dup4\n        /* \"#utility.yul\":3554:3567   */\n      add\n        /* \"#utility.yul\":3550:3577   */\n      slt\n        /* \"#utility.yul\":3540:3595   */\n      tag_655\n      jumpi\n        /* \"#utility.yul\":3591:3592   */\n      0x00\n        /* \"#utility.yul\":3588:3589   */\n      dup1\n        /* \"#utility.yul\":3581:3593   */\n      revert\n        /* \"#utility.yul\":3540:3595   */\n    tag_655:\n        /* \"#utility.yul\":3631:3633   */\n      dup2\n        /* \"#utility.yul\":3618:3634   */\n      calldataload\n        /* \"#utility.yul\":3657:3659   */\n      dup2\n        /* \"#utility.yul\":3649:3655   */\n      dup2\n        /* \"#utility.yul\":3646:3660   */\n      gt\n        /* \"#utility.yul\":3643:3677   */\n      iszero\n      tag_656\n      jumpi\n        /* \"#utility.yul\":3673:3674   */\n      0x00\n        /* \"#utility.yul\":3670:3671   */\n      dup1\n        /* \"#utility.yul\":3663:3675   */\n      revert\n        /* \"#utility.yul\":3643:3677   */\n    tag_656:\n        /* \"#utility.yul\":3726:3733   */\n      dup7\n        /* \"#utility.yul\":3721:3723   */\n      0x20\n        /* \"#utility.yul\":3711:3717   */\n      dup3\n        /* \"#utility.yul\":3708:3709   */\n      0x05\n        /* \"#utility.yul\":3704:3718   */\n      shl\n        /* \"#utility.yul\":3700:3702   */\n      dup6\n        /* \"#utility.yul\":3696:3719   */\n      add\n        /* \"#utility.yul\":3692:3724   */\n      add\n        /* \"#utility.yul\":3689:3734   */\n      gt\n        /* \"#utility.yul\":3686:3751   */\n      iszero\n      tag_657\n      jumpi\n        /* \"#utility.yul\":3747:3748   */\n      0x00\n        /* \"#utility.yul\":3744:3745   */\n      dup1\n        /* \"#utility.yul\":3737:3749   */\n      revert\n        /* \"#utility.yul\":3686:3751   */\n    tag_657:\n        /* \"#utility.yul\":3778:3780   */\n      0x20\n        /* \"#utility.yul\":3770:3781   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":3800:3806   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":3197:3812   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3817:3997   */\n    tag_63:\n        /* \"#utility.yul\":3873:3879   */\n      0x00\n        /* \"#utility.yul\":3926:3928   */\n      0x20\n        /* \"#utility.yul\":3914:3923   */\n      dup3\n        /* \"#utility.yul\":3905:3912   */\n      dup5\n        /* \"#utility.yul\":3901:3924   */\n      sub\n        /* \"#utility.yul\":3897:3929   */\n      slt\n        /* \"#utility.yul\":3894:3946   */\n      iszero\n      tag_659\n      jumpi\n        /* \"#utility.yul\":3942:3943   */\n      0x00\n        /* \"#utility.yul\":3939:3940   */\n      dup1\n        /* \"#utility.yul\":3932:3944   */\n      revert\n        /* \"#utility.yul\":3894:3946   */\n    tag_659:\n        /* \"#utility.yul\":3965:3991   */\n      tag_512\n        /* \"#utility.yul\":3981:3990   */\n      dup3\n        /* \"#utility.yul\":3965:3991   */\n      tag_620\n      jump\t// in\n        /* \"#utility.yul\":4002:4250   */\n    tag_91:\n        /* \"#utility.yul\":4067:4073   */\n      0x00\n        /* \"#utility.yul\":4075:4081   */\n      dup1\n        /* \"#utility.yul\":4128:4130   */\n      0x40\n        /* \"#utility.yul\":4116:4125   */\n      dup4\n        /* \"#utility.yul\":4107:4114   */\n      dup6\n        /* \"#utility.yul\":4103:4126   */\n      sub\n        /* \"#utility.yul\":4099:4131   */\n      slt\n        /* \"#utility.yul\":4096:4148   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":4144:4145   */\n      0x00\n        /* \"#utility.yul\":4141:4142   */\n      dup1\n        /* \"#utility.yul\":4134:4146   */\n      revert\n        /* \"#utility.yul\":4096:4148   */\n    tag_662:\n        /* \"#utility.yul\":4167:4193   */\n      tag_651\n        /* \"#utility.yul\":4183:4192   */\n      dup4\n        /* \"#utility.yul\":4167:4193   */\n      tag_620\n      jump\t// in\n        /* \"#utility.yul\":4255:4500   */\n    tag_56:\n        /* \"#utility.yul\":4313:4319   */\n      0x00\n        /* \"#utility.yul\":4366:4368   */\n      0x20\n        /* \"#utility.yul\":4354:4363   */\n      dup3\n        /* \"#utility.yul\":4345:4352   */\n      dup5\n        /* \"#utility.yul\":4341:4364   */\n      sub\n        /* \"#utility.yul\":4337:4369   */\n      slt\n        /* \"#utility.yul\":4334:4386   */\n      iszero\n      tag_665\n      jumpi\n        /* \"#utility.yul\":4382:4383   */\n      0x00\n        /* \"#utility.yul\":4379:4380   */\n      dup1\n        /* \"#utility.yul\":4372:4384   */\n      revert\n        /* \"#utility.yul\":4334:4386   */\n    tag_665:\n        /* \"#utility.yul\":4421:4430   */\n      dup2\n        /* \"#utility.yul\":4408:4431   */\n      calldataload\n        /* \"#utility.yul\":4440:4470   */\n      tag_512\n        /* \"#utility.yul\":4464:4469   */\n      dup2\n        /* \"#utility.yul\":4440:4470   */\n      tag_667\n      jump\t// in\n        /* \"#utility.yul\":4505:4754   */\n    tag_532:\n        /* \"#utility.yul\":4574:4580   */\n      0x00\n        /* \"#utility.yul\":4627:4629   */\n      0x20\n        /* \"#utility.yul\":4615:4624   */\n      dup3\n        /* \"#utility.yul\":4606:4613   */\n      dup5\n        /* \"#utility.yul\":4602:4625   */\n      sub\n        /* \"#utility.yul\":4598:4630   */\n      slt\n        /* \"#utility.yul\":4595:4647   */\n      iszero\n      tag_669\n      jumpi\n        /* \"#utility.yul\":4643:4644   */\n      0x00\n        /* \"#utility.yul\":4640:4641   */\n      dup1\n        /* \"#utility.yul\":4633:4645   */\n      revert\n        /* \"#utility.yul\":4595:4647   */\n    tag_669:\n        /* \"#utility.yul\":4675:4684   */\n      dup2\n        /* \"#utility.yul\":4669:4685   */\n      mload\n        /* \"#utility.yul\":4694:4724   */\n      tag_512\n        /* \"#utility.yul\":4718:4723   */\n      dup2\n        /* \"#utility.yul\":4694:4724   */\n      tag_667\n      jump\t// in\n        /* \"#utility.yul\":4759:5081   */\n    tag_139:\n        /* \"#utility.yul\":4828:4834   */\n      0x00\n        /* \"#utility.yul\":4881:4883   */\n      0x20\n        /* \"#utility.yul\":4869:4878   */\n      dup3\n        /* \"#utility.yul\":4860:4867   */\n      dup5\n        /* \"#utility.yul\":4856:4879   */\n      sub\n        /* \"#utility.yul\":4852:4884   */\n      slt\n        /* \"#utility.yul\":4849:4901   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":4897:4898   */\n      0x00\n        /* \"#utility.yul\":4894:4895   */\n      dup1\n        /* \"#utility.yul\":4887:4899   */\n      revert\n        /* \"#utility.yul\":4849:4901   */\n    tag_672:\n        /* \"#utility.yul\":4937:4946   */\n      dup2\n        /* \"#utility.yul\":4924:4947   */\n      calldataload\n        /* \"#utility.yul\":4970:4988   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4962:4968   */\n      dup2\n        /* \"#utility.yul\":4959:4989   */\n      gt\n        /* \"#utility.yul\":4956:5006   */\n      iszero\n      tag_673\n      jumpi\n        /* \"#utility.yul\":5002:5003   */\n      0x00\n        /* \"#utility.yul\":4999:5000   */\n      dup1\n        /* \"#utility.yul\":4992:5004   */\n      revert\n        /* \"#utility.yul\":4956:5006   */\n    tag_673:\n        /* \"#utility.yul\":5025:5075   */\n      tag_453\n        /* \"#utility.yul\":5067:5074   */\n      dup5\n        /* \"#utility.yul\":5058:5064   */\n      dup3\n        /* \"#utility.yul\":5047:5056   */\n      dup6\n        /* \"#utility.yul\":5043:5065   */\n      add\n        /* \"#utility.yul\":5025:5075   */\n      tag_623\n      jump\t// in\n        /* \"#utility.yul\":5086:5476   */\n    tag_152:\n        /* \"#utility.yul\":5164:5170   */\n      0x00\n        /* \"#utility.yul\":5172:5178   */\n      dup1\n        /* \"#utility.yul\":5225:5227   */\n      0x40\n        /* \"#utility.yul\":5213:5222   */\n      dup4\n        /* \"#utility.yul\":5204:5211   */\n      dup6\n        /* \"#utility.yul\":5200:5223   */\n      sub\n        /* \"#utility.yul\":5196:5228   */\n      slt\n        /* \"#utility.yul\":5193:5245   */\n      iszero\n      tag_676\n      jumpi\n        /* \"#utility.yul\":5241:5242   */\n      0x00\n        /* \"#utility.yul\":5238:5239   */\n      dup1\n        /* \"#utility.yul\":5231:5243   */\n      revert\n        /* \"#utility.yul\":5193:5245   */\n    tag_676:\n        /* \"#utility.yul\":5281:5290   */\n      dup3\n        /* \"#utility.yul\":5268:5291   */\n      calldataload\n        /* \"#utility.yul\":5314:5332   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5306:5312   */\n      dup2\n        /* \"#utility.yul\":5303:5333   */\n      gt\n        /* \"#utility.yul\":5300:5350   */\n      iszero\n      tag_677\n      jumpi\n        /* \"#utility.yul\":5346:5347   */\n      0x00\n        /* \"#utility.yul\":5343:5344   */\n      dup1\n        /* \"#utility.yul\":5336:5348   */\n      revert\n        /* \"#utility.yul\":5300:5350   */\n    tag_677:\n        /* \"#utility.yul\":5369:5419   */\n      tag_678\n        /* \"#utility.yul\":5411:5418   */\n      dup6\n        /* \"#utility.yul\":5402:5408   */\n      dup3\n        /* \"#utility.yul\":5391:5400   */\n      dup7\n        /* \"#utility.yul\":5387:5409   */\n      add\n        /* \"#utility.yul\":5369:5419   */\n      tag_623\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":5359:5419   */\n      swap6\n        /* \"#utility.yul\":5466:5468   */\n      0x20\n        /* \"#utility.yul\":5451:5469   */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":5438:5470   */\n      calldataload\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5086:5476   */\n      jump\t// out\n        /* \"#utility.yul\":5481:5661   */\n    tag_79:\n        /* \"#utility.yul\":5540:5546   */\n      0x00\n        /* \"#utility.yul\":5593:5595   */\n      0x20\n        /* \"#utility.yul\":5581:5590   */\n      dup3\n        /* \"#utility.yul\":5572:5579   */\n      dup5\n        /* \"#utility.yul\":5568:5591   */\n      sub\n        /* \"#utility.yul\":5564:5596   */\n      slt\n        /* \"#utility.yul\":5561:5613   */\n      iszero\n      tag_680\n      jumpi\n        /* \"#utility.yul\":5609:5610   */\n      0x00\n        /* \"#utility.yul\":5606:5607   */\n      dup1\n        /* \"#utility.yul\":5599:5611   */\n      revert\n        /* \"#utility.yul\":5561:5613   */\n    tag_680:\n      pop\n        /* \"#utility.yul\":5632:5655   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":5481:5661   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5666:5914   */\n    tag_174:\n        /* \"#utility.yul\":5734:5740   */\n      0x00\n        /* \"#utility.yul\":5742:5748   */\n      dup1\n        /* \"#utility.yul\":5795:5797   */\n      0x40\n        /* \"#utility.yul\":5783:5792   */\n      dup4\n        /* \"#utility.yul\":5774:5781   */\n      dup6\n        /* \"#utility.yul\":5770:5793   */\n      sub\n        /* \"#utility.yul\":5766:5798   */\n      slt\n        /* \"#utility.yul\":5763:5815   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":5811:5812   */\n      0x00\n        /* \"#utility.yul\":5808:5809   */\n      dup1\n        /* \"#utility.yul\":5801:5813   */\n      revert\n        /* \"#utility.yul\":5763:5815   */\n    tag_682:\n      pop\n      pop\n        /* \"#utility.yul\":5834:5857   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":5904:5906   */\n      0x20\n        /* \"#utility.yul\":5889:5907   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5876:5908   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":5666:5914   */\n      jump\t// out\n        /* \"#utility.yul\":5919:6176   */\n    tag_683:\n        /* \"#utility.yul\":5960:5963   */\n      0x00\n        /* \"#utility.yul\":5998:6003   */\n      dup2\n        /* \"#utility.yul\":5992:6004   */\n      mload\n        /* \"#utility.yul\":6025:6031   */\n      dup1\n        /* \"#utility.yul\":6020:6023   */\n      dup5\n        /* \"#utility.yul\":6013:6032   */\n      mstore\n        /* \"#utility.yul\":6041:6104   */\n      tag_685\n        /* \"#utility.yul\":6097:6103   */\n      dup2\n        /* \"#utility.yul\":6090:6094   */\n      0x20\n        /* \"#utility.yul\":6085:6088   */\n      dup7\n        /* \"#utility.yul\":6081:6095   */\n      add\n        /* \"#utility.yul\":6074:6078   */\n      0x20\n        /* \"#utility.yul\":6067:6072   */\n      dup7\n        /* \"#utility.yul\":6063:6079   */\n      add\n        /* \"#utility.yul\":6041:6104   */\n      tag_686\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":6158:6160   */\n      0x1f\n        /* \"#utility.yul\":6137:6152   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6133:6162   */\n      and\n        /* \"#utility.yul\":6124:6163   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":6165:6169   */\n      0x20\n        /* \"#utility.yul\":6120:6170   */\n      add\n      swap3\n        /* \"#utility.yul\":5919:6176   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6181:7708   */\n    tag_457:\n        /* \"#utility.yul\":6405:6408   */\n      0x00\n        /* \"#utility.yul\":6443:6449   */\n      dup5\n        /* \"#utility.yul\":6437:6450   */\n      mload\n        /* \"#utility.yul\":6469:6473   */\n      0x20\n        /* \"#utility.yul\":6482:6533   */\n      tag_688\n        /* \"#utility.yul\":6526:6532   */\n      dup3\n        /* \"#utility.yul\":6521:6524   */\n      dup6\n        /* \"#utility.yul\":6516:6518   */\n      dup4\n        /* \"#utility.yul\":6508:6514   */\n      dup11\n        /* \"#utility.yul\":6504:6519   */\n      add\n        /* \"#utility.yul\":6482:6533   */\n      tag_686\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":6596:6609   */\n      dup6\n      mload\n        /* \"#utility.yul\":6555:6571   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":6618:6673   */\n      tag_689\n        /* \"#utility.yul\":6596:6609   */\n      dup2\n        /* \"#utility.yul\":6555:6571   */\n      dup5\n        /* \"#utility.yul\":6640:6655   */\n      dup5\n      dup11\n      add\n        /* \"#utility.yul\":6618:6673   */\n      tag_686\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":6762:6775   */\n      dup6\n      sload\n        /* \"#utility.yul\":6695:6715   */\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":6735:6736   */\n      0x00\n      swap1\n        /* \"#utility.yul\":6822:6823   */\n      0x01\n        /* \"#utility.yul\":6844:6862   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6897:6915   */\n      dup1\n      dup4\n      and\n      dup1\n        /* \"#utility.yul\":6924:7017   */\n      tag_690\n      jumpi\n        /* \"#utility.yul\":7002:7006   */\n      0x7f\n        /* \"#utility.yul\":6992:7000   */\n      dup4\n        /* \"#utility.yul\":6988:7007   */\n      and\n        /* \"#utility.yul\":6976:7007   */\n      swap3\n      pop\n        /* \"#utility.yul\":6924:7017   */\n    tag_690:\n        /* \"#utility.yul\":7065:7067   */\n      dup6\n        /* \"#utility.yul\":7055:7063   */\n      dup4\n        /* \"#utility.yul\":7052:7068   */\n      lt\n        /* \"#utility.yul\":7032:7050   */\n      dup2\n        /* \"#utility.yul\":7029:7069   */\n      eq\n        /* \"#utility.yul\":7026:7193   */\n      iszero\n      tag_691\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7092:7125   */\n      dup6\n      mstore\n        /* \"#utility.yul\":7148:7152   */\n      0x22\n        /* \"#utility.yul\":7145:7146   */\n      0x04\n        /* \"#utility.yul\":7138:7153   */\n      mstore\n        /* \"#utility.yul\":7178:7182   */\n      0x24\n        /* \"#utility.yul\":7099:7102   */\n      dup6\n        /* \"#utility.yul\":7166:7183   */\n      revert\n        /* \"#utility.yul\":7026:7193   */\n    tag_691:\n        /* \"#utility.yul\":7209:7227   */\n      dup1\n        /* \"#utility.yul\":7236:7346   */\n      dup1\n      iszero\n      tag_693\n      jumpi\n        /* \"#utility.yul\":7360:7361   */\n      0x01\n        /* \"#utility.yul\":7355:7683   */\n      dup2\n      eq\n      tag_694\n      jumpi\n        /* \"#utility.yul\":7202:7683   */\n      jump(tag_692)\n        /* \"#utility.yul\":7236:7346   */\n    tag_693:\n      not(0xff)\n        /* \"#utility.yul\":7271:7295   */\n      dup6\n      and\n        /* \"#utility.yul\":7257:7296   */\n      dup9\n      mstore\n        /* \"#utility.yul\":7316:7336   */\n      dup4\n      dup9\n      add\n      swap6\n      pop\n        /* \"#utility.yul\":7236:7346   */\n      jump(tag_692)\n        /* \"#utility.yul\":7355:7683   */\n    tag_694:\n        /* \"#utility.yul\":15120:15121   */\n      0x00\n        /* \"#utility.yul\":15113:15127   */\n      dup12\n      dup2\n      mstore\n        /* \"#utility.yul\":15157:15161   */\n      0x20\n        /* \"#utility.yul\":15144:15162   */\n      swap1\n      keccak256\n        /* \"#utility.yul\":7450:7451   */\n      0x00\n        /* \"#utility.yul\":7464:7633   */\n    tag_697:\n        /* \"#utility.yul\":7478:7486   */\n      dup6\n        /* \"#utility.yul\":7475:7476   */\n      dup2\n        /* \"#utility.yul\":7472:7487   */\n      lt\n        /* \"#utility.yul\":7464:7633   */\n      iszero\n      tag_699\n      jumpi\n        /* \"#utility.yul\":7560:7574   */\n      dup2\n      sload\n        /* \"#utility.yul\":7545:7558   */\n      dup11\n      dup3\n      add\n        /* \"#utility.yul\":7538:7575   */\n      mstore\n        /* \"#utility.yul\":7603:7619   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":7495:7505   */\n      dup9\n      add\n        /* \"#utility.yul\":7464:7633   */\n      jump(tag_697)\n    tag_699:\n        /* \"#utility.yul\":7468:7471   */\n      pop\n      pop\n        /* \"#utility.yul\":7664:7672   */\n      dup4\n        /* \"#utility.yul\":7657:7662   */\n      dup9\n        /* \"#utility.yul\":7653:7673   */\n      add\n        /* \"#utility.yul\":7646:7673   */\n      swap6\n      pop\n        /* \"#utility.yul\":7202:7683   */\n    tag_692:\n      pop\n        /* \"#utility.yul\":7699:7702   */\n      swap4\n      swap12\n        /* \"#utility.yul\":6181:7708   */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7921:8409   */\n    tag_528:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8190:8205   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":8172:8206   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8242:8257   */\n      dup5\n      and\n        /* \"#utility.yul\":8237:8239   */\n      0x20\n        /* \"#utility.yul\":8222:8240   */\n      dup3\n      add\n        /* \"#utility.yul\":8215:8258   */\n      mstore\n        /* \"#utility.yul\":8289:8291   */\n      0x40\n        /* \"#utility.yul\":8274:8292   */\n      dup2\n      add\n        /* \"#utility.yul\":8267:8301   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":8337:8340   */\n      0x80\n        /* \"#utility.yul\":8332:8334   */\n      0x60\n        /* \"#utility.yul\":8317:8335   */\n      dup3\n      add\n        /* \"#utility.yul\":8310:8341   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8115:8119   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8358:8403   */\n      tag_702\n      swap1\n        /* \"#utility.yul\":8383:8402   */\n      dup4\n      add\n        /* \"#utility.yul\":8375:8381   */\n      dup5\n        /* \"#utility.yul\":8358:8403   */\n      tag_683\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":8350:8403   */\n      swap7\n        /* \"#utility.yul\":7921:8409   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8414:9046   */\n    tag_239:\n        /* \"#utility.yul\":8585:8587   */\n      0x20\n        /* \"#utility.yul\":8637:8658   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8707:8720   */\n      dup3\n      mload\n        /* \"#utility.yul\":8610:8628   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":8729:8751   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8556:8560   */\n      0x00\n      swap2\n        /* \"#utility.yul\":8585:8587   */\n      swap1\n        /* \"#utility.yul\":8808:8823   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":8782:8784   */\n      0x40\n        /* \"#utility.yul\":8767:8785   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":8556:8560   */\n      dup5\n        /* \"#utility.yul\":8851:9020   */\n    tag_704:\n        /* \"#utility.yul\":8865:8871   */\n      dup2\n        /* \"#utility.yul\":8862:8863   */\n      dup2\n        /* \"#utility.yul\":8859:8872   */\n      lt\n        /* \"#utility.yul\":8851:9020   */\n      iszero\n      tag_706\n      jumpi\n        /* \"#utility.yul\":8926:8939   */\n      dup4\n      mload\n        /* \"#utility.yul\":8914:8940   */\n      dup4\n      mstore\n        /* \"#utility.yul\":8995:9010   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":8960:8972   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":8887:8888   */\n      0x01\n        /* \"#utility.yul\":8880:8889   */\n      add\n        /* \"#utility.yul\":8851:9020   */\n      jump(tag_704)\n    tag_706:\n      pop\n        /* \"#utility.yul\":9037:9040   */\n      swap1\n      swap7\n        /* \"#utility.yul\":8414:9046   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9243:9462   */\n    tag_75:\n        /* \"#utility.yul\":9392:9394   */\n      0x20\n        /* \"#utility.yul\":9381:9390   */\n      dup2\n        /* \"#utility.yul\":9374:9395   */\n      mstore\n        /* \"#utility.yul\":9355:9359   */\n      0x00\n        /* \"#utility.yul\":9412:9456   */\n      tag_512\n        /* \"#utility.yul\":9452:9454   */\n      0x20\n        /* \"#utility.yul\":9441:9450   */\n      dup4\n        /* \"#utility.yul\":9437:9455   */\n      add\n        /* \"#utility.yul\":9429:9435   */\n      dup5\n        /* \"#utility.yul\":9412:9456   */\n      tag_683\n      jump\t// in\n        /* \"#utility.yul\":15173:15301   */\n    tag_385:\n        /* \"#utility.yul\":15213:15216   */\n      0x00\n        /* \"#utility.yul\":15244:15245   */\n      dup3\n        /* \"#utility.yul\":15240:15246   */\n      not\n        /* \"#utility.yul\":15237:15238   */\n      dup3\n        /* \"#utility.yul\":15234:15247   */\n      gt\n        /* \"#utility.yul\":15231:15270   */\n      iszero\n      tag_728\n      jumpi\n        /* \"#utility.yul\":15250:15268   */\n      tag_728\n      tag_729\n      jump\t// in\n    tag_728:\n      pop\n        /* \"#utility.yul\":15286:15295   */\n      add\n      swap1\n        /* \"#utility.yul\":15173:15301   */\n      jump\t// out\n        /* \"#utility.yul\":15306:15426   */\n    tag_554:\n        /* \"#utility.yul\":15346:15347   */\n      0x00\n        /* \"#utility.yul\":15372:15373   */\n      dup3\n        /* \"#utility.yul\":15362:15397   */\n      tag_732\n      jumpi\n        /* \"#utility.yul\":15377:15395   */\n      tag_732\n      tag_733\n      jump\t// in\n    tag_732:\n      pop\n        /* \"#utility.yul\":15411:15420   */\n      div\n      swap1\n        /* \"#utility.yul\":15306:15426   */\n      jump\t// out\n        /* \"#utility.yul\":15431:15599   */\n    tag_408:\n        /* \"#utility.yul\":15471:15478   */\n      0x00\n        /* \"#utility.yul\":15537:15538   */\n      dup2\n        /* \"#utility.yul\":15533:15534   */\n      0x00\n        /* \"#utility.yul\":15529:15535   */\n      not\n        /* \"#utility.yul\":15525:15539   */\n      div\n        /* \"#utility.yul\":15522:15523   */\n      dup4\n        /* \"#utility.yul\":15519:15540   */\n      gt\n        /* \"#utility.yul\":15514:15515   */\n      dup3\n        /* \"#utility.yul\":15507:15516   */\n      iszero\n        /* \"#utility.yul\":15500:15517   */\n      iszero\n        /* \"#utility.yul\":15496:15541   */\n      and\n        /* \"#utility.yul\":15493:15564   */\n      iszero\n      tag_736\n      jumpi\n        /* \"#utility.yul\":15544:15562   */\n      tag_736\n      tag_729\n      jump\t// in\n    tag_736:\n      pop\n        /* \"#utility.yul\":15584:15593   */\n      mul\n      swap1\n        /* \"#utility.yul\":15431:15599   */\n      jump\t// out\n        /* \"#utility.yul\":15604:15729   */\n    tag_561:\n        /* \"#utility.yul\":15644:15648   */\n      0x00\n        /* \"#utility.yul\":15672:15673   */\n      dup3\n        /* \"#utility.yul\":15669:15670   */\n      dup3\n        /* \"#utility.yul\":15666:15674   */\n      lt\n        /* \"#utility.yul\":15663:15697   */\n      iszero\n      tag_739\n      jumpi\n        /* \"#utility.yul\":15677:15695   */\n      tag_739\n      tag_729\n      jump\t// in\n    tag_739:\n      pop\n        /* \"#utility.yul\":15714:15723   */\n      sub\n      swap1\n        /* \"#utility.yul\":15604:15729   */\n      jump\t// out\n        /* \"#utility.yul\":15734:15992   */\n    tag_686:\n        /* \"#utility.yul\":15806:15807   */\n      0x00\n        /* \"#utility.yul\":15816:15929   */\n    tag_741:\n        /* \"#utility.yul\":15830:15836   */\n      dup4\n        /* \"#utility.yul\":15827:15828   */\n      dup2\n        /* \"#utility.yul\":15824:15837   */\n      lt\n        /* \"#utility.yul\":15816:15929   */\n      iszero\n      tag_743\n      jumpi\n        /* \"#utility.yul\":15906:15917   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":15900:15918   */\n      mload\n        /* \"#utility.yul\":15887:15898   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":15880:15919   */\n      mstore\n        /* \"#utility.yul\":15852:15854   */\n      0x20\n        /* \"#utility.yul\":15845:15855   */\n      add\n        /* \"#utility.yul\":15816:15929   */\n      jump(tag_741)\n    tag_743:\n        /* \"#utility.yul\":15947:15953   */\n      dup4\n        /* \"#utility.yul\":15944:15945   */\n      dup2\n        /* \"#utility.yul\":15941:15954   */\n      gt\n        /* \"#utility.yul\":15938:15986   */\n      iszero\n      tag_435\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":15982:15983   */\n      0x00\n        /* \"#utility.yul\":15964:15980   */\n      swap2\n      add\n        /* \"#utility.yul\":15957:15984   */\n      mstore\n        /* \"#utility.yul\":15734:15992   */\n      jump\t// out\n        /* \"#utility.yul\":15997:16377   */\n    tag_268:\n        /* \"#utility.yul\":16076:16077   */\n      0x01\n        /* \"#utility.yul\":16072:16084   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":16119:16131   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":16140:16201   */\n      tag_746\n      jumpi\n        /* \"#utility.yul\":16194:16198   */\n      0x7f\n        /* \"#utility.yul\":16186:16192   */\n      dup3\n        /* \"#utility.yul\":16182:16199   */\n      and\n        /* \"#utility.yul\":16172:16199   */\n      swap2\n      pop\n        /* \"#utility.yul\":16140:16201   */\n    tag_746:\n        /* \"#utility.yul\":16247:16249   */\n      0x20\n        /* \"#utility.yul\":16239:16245   */\n      dup3\n        /* \"#utility.yul\":16236:16250   */\n      lt\n        /* \"#utility.yul\":16216:16234   */\n      dup2\n        /* \"#utility.yul\":16213:16251   */\n      eq\n        /* \"#utility.yul\":16210:16371   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":16293:16303   */\n      0x4e487b71\n        /* \"#utility.yul\":16288:16291   */\n      0xe0\n        /* \"#utility.yul\":16284:16304   */\n      shl\n        /* \"#utility.yul\":16281:16282   */\n      0x00\n        /* \"#utility.yul\":16274:16305   */\n      mstore\n        /* \"#utility.yul\":16328:16332   */\n      0x22\n        /* \"#utility.yul\":16325:16326   */\n      0x04\n        /* \"#utility.yul\":16318:16333   */\n      mstore\n        /* \"#utility.yul\":16356:16360   */\n      0x24\n        /* \"#utility.yul\":16353:16354   */\n      0x00\n        /* \"#utility.yul\":16346:16361   */\n      revert\n        /* \"#utility.yul\":16382:16517   */\n    tag_299:\n        /* \"#utility.yul\":16421:16424   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":16442:16459   */\n      dup3\n      eq\n        /* \"#utility.yul\":16439:16482   */\n      iszero\n      tag_750\n      jumpi\n        /* \"#utility.yul\":16462:16480   */\n      tag_750\n      tag_729\n      jump\t// in\n    tag_750:\n      pop\n        /* \"#utility.yul\":16509:16510   */\n      0x01\n        /* \"#utility.yul\":16498:16511   */\n      add\n      swap1\n        /* \"#utility.yul\":16382:16517   */\n      jump\t// out\n        /* \"#utility.yul\":16522:16634   */\n    tag_563:\n        /* \"#utility.yul\":16554:16555   */\n      0x00\n        /* \"#utility.yul\":16580:16581   */\n      dup3\n        /* \"#utility.yul\":16570:16605   */\n      tag_753\n      jumpi\n        /* \"#utility.yul\":16585:16603   */\n      tag_753\n      tag_733\n      jump\t// in\n    tag_753:\n      pop\n        /* \"#utility.yul\":16619:16628   */\n      mod\n      swap1\n        /* \"#utility.yul\":16522:16634   */\n      jump\t// out\n        /* \"#utility.yul\":16639:16766   */\n    tag_729:\n        /* \"#utility.yul\":16700:16710   */\n      0x4e487b71\n        /* \"#utility.yul\":16695:16698   */\n      0xe0\n        /* \"#utility.yul\":16691:16711   */\n      shl\n        /* \"#utility.yul\":16688:16689   */\n      0x00\n        /* \"#utility.yul\":16681:16712   */\n      mstore\n        /* \"#utility.yul\":16731:16735   */\n      0x11\n        /* \"#utility.yul\":16728:16729   */\n      0x04\n        /* \"#utility.yul\":16721:16736   */\n      mstore\n        /* \"#utility.yul\":16755:16759   */\n      0x24\n        /* \"#utility.yul\":16752:16753   */\n      0x00\n        /* \"#utility.yul\":16745:16760   */\n      revert\n        /* \"#utility.yul\":16771:16898   */\n    tag_733:\n        /* \"#utility.yul\":16832:16842   */\n      0x4e487b71\n        /* \"#utility.yul\":16827:16830   */\n      0xe0\n        /* \"#utility.yul\":16823:16843   */\n      shl\n        /* \"#utility.yul\":16820:16821   */\n      0x00\n        /* \"#utility.yul\":16813:16844   */\n      mstore\n        /* \"#utility.yul\":16863:16867   */\n      0x12\n        /* \"#utility.yul\":16860:16861   */\n      0x04\n        /* \"#utility.yul\":16853:16868   */\n      mstore\n        /* \"#utility.yul\":16887:16891   */\n      0x24\n        /* \"#utility.yul\":16884:16885   */\n      0x00\n        /* \"#utility.yul\":16877:16892   */\n      revert\n        /* \"#utility.yul\":16903:17030   */\n    tag_296:\n        /* \"#utility.yul\":16964:16974   */\n      0x4e487b71\n        /* \"#utility.yul\":16959:16962   */\n      0xe0\n        /* \"#utility.yul\":16955:16975   */\n      shl\n        /* \"#utility.yul\":16952:16953   */\n      0x00\n        /* \"#utility.yul\":16945:16976   */\n      mstore\n        /* \"#utility.yul\":16995:16999   */\n      0x32\n        /* \"#utility.yul\":16992:16993   */\n      0x04\n        /* \"#utility.yul\":16985:17000   */\n      mstore\n        /* \"#utility.yul\":17019:17023   */\n      0x24\n        /* \"#utility.yul\":17016:17017   */\n      0x00\n        /* \"#utility.yul\":17009:17024   */\n      revert\n        /* \"#utility.yul\":17035:17162   */\n    tag_470:\n        /* \"#utility.yul\":17096:17106   */\n      0x4e487b71\n        /* \"#utility.yul\":17091:17094   */\n      0xe0\n        /* \"#utility.yul\":17087:17107   */\n      shl\n        /* \"#utility.yul\":17084:17085   */\n      0x00\n        /* \"#utility.yul\":17077:17108   */\n      mstore\n        /* \"#utility.yul\":17127:17131   */\n      0x41\n        /* \"#utility.yul\":17124:17125   */\n      0x04\n        /* \"#utility.yul\":17117:17132   */\n      mstore\n        /* \"#utility.yul\":17151:17155   */\n      0x24\n        /* \"#utility.yul\":17148:17149   */\n      0x00\n        /* \"#utility.yul\":17141:17156   */\n      revert\n        /* \"#utility.yul\":17167:17298   */\n    tag_667:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":17241:17273   */\n      dup2\n      and\n        /* \"#utility.yul\":17231:17274   */\n      dup2\n      eq\n        /* \"#utility.yul\":17221:17292   */\n      tag_337\n      jumpi\n        /* \"#utility.yul\":17288:17289   */\n      0x00\n        /* \"#utility.yul\":17285:17286   */\n      dup1\n        /* \"#utility.yul\":17278:17290   */\n      revert\n\n    auxdata: 0xa26469706673582212208887703a58a4b9a63cc4503322bcd6e449094bec938356bc07393ef092d6bdeb64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2611": {
									"entryPoint": null,
									"id": 2611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 479,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_459": {
									"entryPoint": 312,
									"id": 459,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_startTokenId_845": {
									"entryPoint": null,
									"id": 845,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 316,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setBaseURI_2926": {
									"entryPoint": 396,
									"id": 2926,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setClaimURI_2942": {
									"entryPoint": 431,
									"id": 2942,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1092,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2346:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:8"
															},
															"nodeType": "YulIf",
															"src": "88:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:8"
															},
															"nodeType": "YulIf",
															"src": "221:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:8"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:8"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:8"
															},
															"nodeType": "YulIf",
															"src": "404:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:8"
															},
															"nodeType": "YulIf",
															"src": "566:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:8"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:8"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:8",
																"statements": []
															},
															"src": "647:133:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:8"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:8"
															},
															"nodeType": "YulIf",
															"src": "789:80:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:8",
														"type": ""
													}
												],
												"src": "14:885:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:8"
															},
															"nodeType": "YulIf",
															"src": "1032:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:8"
															},
															"nodeType": "YulIf",
															"src": "1169:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:8"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:8"
															},
															"nodeType": "YulIf",
															"src": "1342:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:8"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:8",
														"type": ""
													}
												],
												"src": "904:562:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1645:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1662:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1673:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1655:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1655:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1655:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1696:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1707:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1712:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1685:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1685:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1685:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1735:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1746:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1731:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1731:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1751:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1724:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1724:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1724:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1795:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1807:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1818:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1803:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1803:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1795:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1622:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1636:4:8",
														"type": ""
													}
												],
												"src": "1471:356:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1887:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1897:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1911:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1914:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1907:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1907:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1897:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1928:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1958:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1964:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1954:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1954:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1932:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2005:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2007:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2021:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2029:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2017:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2017:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2007:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1985:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1978:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1978:26:8"
															},
															"nodeType": "YulIf",
															"src": "1975:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2095:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2116:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2123:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2128:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2119:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2119:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2109:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2109:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2109:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2160:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2163:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2153:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2153:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2153:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2188:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2191:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2181:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2181:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2181:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2051:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2074:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2082:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2071:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2071:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2048:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2048:38:8"
															},
															"nodeType": "YulIf",
															"src": "2045:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1867:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1876:6:8",
														"type": ""
													}
												],
												"src": "1832:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2249:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2266:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2273:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2278:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2269:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2269:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2259:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2306:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2309:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2299:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2330:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2333:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2323:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2323:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2323:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2217:127:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040526005608081905264173539b7b760d91b60a09081526200002891600c919062000240565b5066753d533d968000600d556045600e556009600f5560056010556011805460ff199081169091556015805490911690553480156200006657600080fd5b50604051620028203803806200282083398101604081905262000089916200039d565b6040518060400160405280600881526020016734b6b4ba32b9ba1960c11b81525060405180604001604052806003815260200162494d4960e81b815250620000e0620000da6200013860201b60201c565b6200013c565b8151620000f590600390602085019062000240565b5080516200010b90600490602084019062000240565b5050600060019081556009555062000123826200018c565b62000130816001620001af565b50506200045a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000196620001df565b8051620001ab90600a90602084019062000240565b5050565b620001b9620001df565b6000818152600b602090815260409091208351620001da9285019062000240565b505050565b6000546001600160a01b031633146200023e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b8280546200024e9062000407565b90600052602060002090601f016020900481019282620002725760008555620002bd565b82601f106200028d57805160ff1916838001178555620002bd565b82800160010185558215620002bd579182015b82811115620002bd578251825591602001919060010190620002a0565b50620002cb929150620002cf565b5090565b5b80821115620002cb5760008155600101620002d0565b600082601f830112620002f857600080fd5b81516001600160401b038082111562000315576200031562000444565b604051601f8301601f19908116603f0116810190828211818310171562000340576200034062000444565b816040528381526020925086838588010111156200035d57600080fd5b600091505b8382101562000381578582018301518183018401529082019062000362565b83821115620003935760008385830101525b9695505050505050565b60008060408385031215620003b157600080fd5b82516001600160401b0380821115620003c957600080fd5b620003d786838701620002e6565b93506020850151915080821115620003ee57600080fd5b50620003fd85828601620002e6565b9150509250929050565b600181811c908216806200041c57607f821691505b602082108114156200043e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6123b6806200046a6000396000f3fe6080604052600436106102675760003560e01c8063674c02aa11610144578063b3807b1d116100b6578063c87b56dd1161007a578063c87b56dd1461077b578063ca8a7d5e1461079b578063d5abeb01146107c8578063da3ef23f146107de578063e985e9c5146107fe578063f2fde38b1461084757600080fd5b8063b3807b1d146106e0578063b88d4fde146106f6578063bf705b1c14610716578063c4d2e8d614610746578063c66828621461076657600080fd5b80638da5cb5b116101085780638da5cb5b1461062a57806395d89b4114610648578063a0712d681461065d578063a22cb46514610670578063a7cd52cb14610690578063a7dc7f2a146106c057600080fd5b8063674c02aa1461056557806370a082311461057f578063715018a61461059f57806374f59666146105b457806385649743146105ef57600080fd5b806318cae269116101dd57806342842e0e116101a157806342842e0e146104ab57806355f804b3146104cb5780635b9e3ccf146104eb5780635c975abb1461050b5780635f93e9e3146105255780636352211e1461054557600080fd5b806318cae269146104135780631ee506971461044057806323b872dd1461046d57806330b866271461048d5780633ccfd60b146104a357600080fd5b8063095ea7b31161022f578063095ea7b3146103565780630a70a1911461037657806313faede614610396578063142b0fbe146103ba57806317dc10c4146103da57806318160ddd146103fa57600080fd5b806301ffc9a71461026c57806302329a29146102a157806305a3b809146102c357806306fdde03146102fc578063081812fc1461031e575b600080fd5b34801561027857600080fd5b5061028c610287366004611fad565b610867565b60405190151581526020015b60405180910390f35b3480156102ad57600080fd5b506102c16102bc366004611f76565b6108b9565b005b3480156102cf57600080fd5b5061028c6102de366004611da7565b6001600160a01b031660009081526016602052604090205460ff1690565b34801561030857600080fd5b506103116108d4565b604051610298919061220d565b34801561032a57600080fd5b5061033e610339366004612061565b610966565b6040516001600160a01b039091168152602001610298565b34801561036257600080fd5b506102c1610371366004611ed7565b6109aa565b34801561038257600080fd5b506102c1610391366004611f91565b610a4a565b3480156103a257600080fd5b506103ac600d5481565b604051908152602001610298565b3480156103c657600080fd5b506102c16103d5366004611f01565b610a71565b3480156103e657600080fd5b506102c16103f5366004611f76565b610af0565b34801561040657600080fd5b50600254600154036103ac565b34801561041f57600080fd5b506103ac61042e366004611da7565b60176020526000908152604090205481565b34801561044c57600080fd5b506103ac61045b366004612061565b60146020526000908152604090205481565b34801561047957600080fd5b506102c1610488366004611df5565b610b0b565b34801561049957600080fd5b506103ac600f5481565b6102c1610c9c565b3480156104b757600080fd5b506102c16104c6366004611df5565b610ce1565b3480156104d757600080fd5b506102c16104e6366004611fe7565b610cfc565b3480156104f757600080fd5b506102c1610506366004611f01565b610d1b565b34801561051757600080fd5b5060115461028c9060ff1681565b34801561053157600080fd5b506102c161054036600461201c565b610d95565b34801561055157600080fd5b5061033e610560366004612061565b610dbc565b34801561057157600080fd5b5060155461028c9060ff1681565b34801561058b57600080fd5b506103ac61059a366004611da7565b610dc7565b3480156105ab57600080fd5b506102c1610e16565b3480156105c057600080fd5b5061028c6105cf36600461207a565b601360209081526000928352604080842090915290825290205460ff1681565b3480156105fb57600080fd5b5061028c61060a36600461207a565b600091825260136020908152604080842092845291905290205460ff1690565b34801561063657600080fd5b506000546001600160a01b031661033e565b34801561065457600080fd5b50610311610e2a565b6102c161066b366004612061565b610e39565b34801561067c57600080fd5b506102c161068b366004611ead565b6111f2565b34801561069c57600080fd5b5061028c6106ab366004611da7565b60166020526000908152604090205460ff1681565b3480156106cc57600080fd5b506102c16106db36600461207a565b61125e565b3480156106ec57600080fd5b506103ac60105481565b34801561070257600080fd5b506102c1610711366004611e31565b6113ab565b34801561072257600080fd5b5061028c610731366004612061565b60126020526000908152604090205460ff1681565b34801561075257600080fd5b506102c1610761366004612061565b6113f5565b34801561077257600080fd5b50610311611402565b34801561078757600080fd5b50610311610796366004612061565b611490565b3480156107a757600080fd5b506107bb6107b6366004611da7565b611585565b60405161029891906121c9565b3480156107d457600080fd5b506103ac600e5481565b3480156107ea57600080fd5b506102c16107f9366004611fe7565b61165d565b34801561080a57600080fd5b5061028c610819366004611dc2565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205460ff1690565b34801561085357600080fd5b506102c1610862366004611da7565b611678565b60006301ffc9a760e01b6001600160e01b03198316148061089857506380ac58cd60e01b6001600160e01b03198316145b806108b35750635b5e139f60e01b6001600160e01b03198316145b92915050565b6108c16116ee565b6011805460ff1916911515919091179055565b6060600380546108e3906122ae565b80601f016020809104026020016040519081016040528092919081815260200182805461090f906122ae565b801561095c5780601f106109315761010080835404028352916020019161095c565b820191906000526020600020905b81548152906001019060200180831161093f57829003601f168201915b5050505050905090565b600061097182611748565b61098e576040516333d1c03960e21b815260040160405180910390fd5b506000908152600760205260409020546001600160a01b031690565b60006109b582610dbc565b9050336001600160a01b038216146109ee576109d18133610819565b6109ee576040516367d9dca160e11b815260040160405180910390fd5b60008281526007602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b610a526116ee565b6000908152601260205260409020805460ff1916911515919091179055565b610a796116ee565b60005b81811015610aeb57600060166000858585818110610a9c57610a9c61233e565b9050602002016020810190610ab19190611da7565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905580610ae3816122e3565b915050610a7c565b505050565b610af86116ee565b6015805460ff1916911515919091179055565b6000610b1682611770565b9050836001600160a01b0316816001600160a01b031614610b495760405162a1148160e81b815260040160405180910390fd5b60008281526007602052604090208054338082146001600160a01b03881690911417610b9657610b798633610819565b610b9657604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610bbd57604051633a954ecd60e21b815260040160405180910390fd5b8015610bc857600082555b6001600160a01b038681166000908152600660205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260056020526040902055600160e11b8316610c535760018401600081815260056020526040902054610c51576001548114610c515760008181526005602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b610ca46116ee565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610cde573d6000803e3d6000fd5b50565b610aeb838383604051806020016040528060008152506113ab565b610d046116ee565b8051610d1790600a906020840190611c4c565b5050565b610d236116ee565b60005b81811015610aeb57600160166000858585818110610d4657610d4661233e565b9050602002016020810190610d5b9190611da7565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905580610d8d816122e3565b915050610d26565b610d9d6116ee565b6000818152600b602090815260409091208351610aeb92850190611c4c565b60006108b382611770565b60006001600160a01b038216610df0576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526006602052604090205467ffffffffffffffff1690565b610e1e6116ee565b610e2860006117d8565b565b6060600480546108e3906122ae565b6000610e486002546001540390565b60115490915060ff1615610eef5760405162461bcd60e51b815260206004820152605f60248201527f574f414820686f6c6420757020746865206d696e74206973206e6f742079657460448201527f206c6976652c2061206c6974746c6520746f6f206561726c792074686572652e60648201527f2e2e206f72206c6174653f205472616e736d697373696f6e20456e64696e6700608482015260a4015b60405180910390fd5b60008211610f655760405162461bcd60e51b815260206004820152603f60248201527f6d757374206d696e74206174206c656173742031206e66742c2030206973206e60448201527f6f7420616c6c6f7765642e205472616e736d697373696f6e20456e64696e67006064820152608401610ee6565b600f54610f728383612220565b1115610fdc5760405162461bcd60e51b815260206004820152603360248201527f5468697320736574206f66207368697274732068617665206265656e206d696e6044820152723a32b21030b63932b0b23c961039b7b9393c9760691b6064820152608401610ee6565b600e54610fe98383612220565b11156110555760405162461bcd60e51b815260206004820152603560248201527f6c6f6f6b73206c696b652077652061726520706f70756c6172206d61782073756044820152741c1c1b1e481a185cc81899595b881c995858da1959605a1b6064820152608401610ee6565b6000546001600160a01b031633146111c05760018211156110af5760405162461bcd60e51b8152602060048201526014602482015273037b7363c90189030ba1030903a34b6b2901d14960651b6044820152606401610ee6565b60155460ff1615156001141561116e573360009081526016602052604090205460ff166111105760405162461bcd60e51b815260206004820152600f60248201526e139bdd08105b1b1bdddb1a5cdd1959608a1b6044820152606401610ee6565b3360009081526017602052604090205460105461112d8483612220565b111561116c5760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e481b5a5b9d195960921b6044820152606401610ee6565b505b81600d5461117c919061224c565b3410156111c05760405162461bcd60e51b8152602060048201526012602482015271086dee6e840c8decae6dc4ee840dac2e8c6d60731b6044820152606401610ee6565b6111ca3383611828565b33600090815260176020526040812080548492906111e9908490612220565b90915550505050565b3360008181526008602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b3361126883610dbc565b6001600160a01b0316146112be5760405162461bcd60e51b815260206004820152601b60248201527f736f72727920796f7520617265206e6f7420746865206f776e657200000000006044820152606401610ee6565b60008181526012602052604090205460ff1661131c5760405162461bcd60e51b815260206004820152601760248201527f636c61696d206973206e6f7420616374697665207965740000000000000000006044820152606401610ee6565b600082815260136020908152604080832084845290915290205460ff16156113795760405162461bcd60e51b815260206004820152601060248201526f616c726561647920636c61696d65642160801b6044820152606401610ee6565b60008281526013602090815260408083208484528252808320805460ff19166001179055938252601490529190912055565b6113b6848484610b0b565b6001600160a01b0383163b156113ef576113d284848484611842565b6113ef576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6113fd6116ee565b600f55565b600c805461140f906122ae565b80601f016020809104026020016040519081016040528092919081815260200182805461143b906122ae565b80156114885780601f1061145d57610100808354040283529160200191611488565b820191906000526020600020905b81548152906001019060200180831161146b57829003601f168201915b505050505081565b606061149b82611748565b6114ff5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610ee6565b600082815260146020526040902054801561157557600061151f82611939565b9050600081511161153f576040518060200160405280600081525061156d565b80611549856119db565b600c60405160200161155d939291906120c8565b6040516020818303038152906040525b949350505050565b600061151f611ad9565b50919050565b606060006115966002546001540390565b905060006115a384610dc7565b67ffffffffffffffff8111156115bb576115bb612354565b6040519080825280602002602001820160405280156115e4578160200160208202803683370190505b5090506000805b8381101561165357856001600160a01b031661160682610dbc565b6001600160a01b0316141561164157808383815181106116285761162861233e565b60209081029190910101528161163d816122e3565b9250505b8061164b816122e3565b9150506115eb565b5090949350505050565b6116656116ee565b8051610d1790600c906020840190611c4c565b6116806116ee565b6001600160a01b0381166116e55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ee6565b610cde816117d8565b6000546001600160a01b03163314610e285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ee6565b6000600154821080156108b3575050600090815260056020526040902054600160e01b161590565b6000816001548110156117bf57600081815260056020526040902054600160e01b81166117bd575b806117b6575060001901600081815260056020526040902054611798565b9392505050565b505b604051636f96cda160e11b815260040160405180910390fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610d17828260405180602001604052806000815250611ae8565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061187790339089908890889060040161218c565b602060405180830381600087803b15801561189157600080fd5b505af19250505080156118c1575060408051601f3d908101601f191682019092526118be91810190611fca565b60015b61191c573d8080156118ef576040519150601f19603f3d011682016040523d82523d6000602084013e6118f4565b606091505b508051611914576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b6000818152600b60205260409020805460609190611956906122ae565b80601f0160208091040260200160405190810160405280929190818152602001828054611982906122ae565b80156119cf5780601f106119a4576101008083540402835291602001916119cf565b820191906000526020600020905b8154815290600101906020018083116119b257829003601f168201915b50505050509050919050565b6060816119ff5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a295780611a13816122e3565b9150611a229050600a83612238565b9150611a03565b60008167ffffffffffffffff811115611a4457611a44612354565b6040519080825280601f01601f191660200182016040528015611a6e576020820181803683370190505b5090505b841561156d57611a8360018361226b565b9150611a90600a866122fe565b611a9b906030612220565b60f81b818381518110611ab057611ab061233e565b60200101906001600160f81b031916908160001a905350611ad2600a86612238565b9450611a72565b6060600a80546108e3906122ae565b611af28383611b55565b6001600160a01b0383163b15610aeb576001548281035b611b1c6000868380600101945086611842565b611b39576040516368d2bf6b60e11b815260040160405180910390fd5b818110611b09578160015414611b4e57600080fd5b5050505050565b60015481611b765760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526006602090815260408083208054680100000000000000018802019055848352600590915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114611c2557808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101611bed565b5081611c4357604051622e076360e81b815260040160405180910390fd5b60015550505050565b828054611c58906122ae565b90600052602060002090601f016020900481019282611c7a5760008555611cc0565b82601f10611c9357805160ff1916838001178555611cc0565b82800160010185558215611cc0579182015b82811115611cc0578251825591602001919060010190611ca5565b50611ccc929150611cd0565b5090565b5b80821115611ccc5760008155600101611cd1565b600067ffffffffffffffff80841115611d0057611d00612354565b604051601f8501601f19908116603f01168101908282118183101715611d2857611d28612354565b81604052809350858152868686011115611d4157600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611d7257600080fd5b919050565b80358015158114611d7257600080fd5b600082601f830112611d9857600080fd5b6117b683833560208501611ce5565b600060208284031215611db957600080fd5b6117b682611d5b565b60008060408385031215611dd557600080fd5b611dde83611d5b565b9150611dec60208401611d5b565b90509250929050565b600080600060608486031215611e0a57600080fd5b611e1384611d5b565b9250611e2160208501611d5b565b9150604084013590509250925092565b60008060008060808587031215611e4757600080fd5b611e5085611d5b565b9350611e5e60208601611d5b565b925060408501359150606085013567ffffffffffffffff811115611e8157600080fd5b8501601f81018713611e9257600080fd5b611ea187823560208401611ce5565b91505092959194509250565b60008060408385031215611ec057600080fd5b611ec983611d5b565b9150611dec60208401611d77565b60008060408385031215611eea57600080fd5b611ef383611d5b565b946020939093013593505050565b60008060208385031215611f1457600080fd5b823567ffffffffffffffff80821115611f2c57600080fd5b818501915085601f830112611f4057600080fd5b813581811115611f4f57600080fd5b8660208260051b8501011115611f6457600080fd5b60209290920196919550909350505050565b600060208284031215611f8857600080fd5b6117b682611d77565b60008060408385031215611fa457600080fd5b611ef383611d77565b600060208284031215611fbf57600080fd5b81356117b68161236a565b600060208284031215611fdc57600080fd5b81516117b68161236a565b600060208284031215611ff957600080fd5b813567ffffffffffffffff81111561201057600080fd5b61156d84828501611d87565b6000806040838503121561202f57600080fd5b823567ffffffffffffffff81111561204657600080fd5b61205285828601611d87565b95602094909401359450505050565b60006020828403121561207357600080fd5b5035919050565b6000806040838503121561208d57600080fd5b50508035926020909101359150565b600081518084526120b4816020860160208601612282565b601f01601f19169290920160200192915050565b6000845160206120db8285838a01612282565b8551918401916120ee8184848a01612282565b8554920191600090600181811c908083168061210b57607f831692505b85831081141561212957634e487b7160e01b85526022600452602485fd5b80801561213d576001811461214e5761217b565b60ff1985168852838801955061217b565b60008b81526020902060005b858110156121735781548a82015290840190880161215a565b505083880195505b50939b9a5050505050505050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906121bf9083018461209c565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612201578351835292840192918401916001016121e5565b50909695505050505050565b6020815260006117b6602083018461209c565b6000821982111561223357612233612312565b500190565b60008261224757612247612328565b500490565b600081600019048311821515161561226657612266612312565b500290565b60008282101561227d5761227d612312565b500390565b60005b8381101561229d578181015183820152602001612285565b838111156113ef5750506000910152565b600181811c908216806122c257607f821691505b6020821081141561157f57634e487b7160e01b600052602260045260246000fd5b60006000198214156122f7576122f7612312565b5060010190565b60008261230d5761230d612328565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610cde57600080fdfea26469706673582212208887703a58a4b9a63cc4503322bcd6e449094bec938356bc07393ef092d6bdeb64736f6c63430008070033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH1 0x5 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH5 0x173539B7B7 PUSH1 0xD9 SHL PUSH1 0xA0 SWAP1 DUP2 MSTORE PUSH3 0x28 SWAP2 PUSH1 0xC SWAP2 SWAP1 PUSH3 0x240 JUMP JUMPDEST POP PUSH7 0x753D533D968000 PUSH1 0xD SSTORE PUSH1 0x45 PUSH1 0xE SSTORE PUSH1 0x9 PUSH1 0xF SSTORE PUSH1 0x5 PUSH1 0x10 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x15 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2820 CODESIZE SUB DUP1 PUSH3 0x2820 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x89 SWAP2 PUSH3 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x34B6B4BA32B9BA19 PUSH1 0xC1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x494D49 PUSH1 0xE8 SHL DUP2 MSTORE POP PUSH3 0xE0 PUSH3 0xDA PUSH3 0x138 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x13C JUMP JUMPDEST DUP2 MLOAD PUSH3 0xF5 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x240 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x10B SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x240 JUMP JUMPDEST POP POP PUSH1 0x0 PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x9 SSTORE POP PUSH3 0x123 DUP3 PUSH3 0x18C JUMP JUMPDEST PUSH3 0x130 DUP2 PUSH1 0x1 PUSH3 0x1AF JUMP JUMPDEST POP POP PUSH3 0x45A JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x196 PUSH3 0x1DF JUMP JUMPDEST DUP1 MLOAD PUSH3 0x1AB SWAP1 PUSH1 0xA SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x240 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x1B9 PUSH3 0x1DF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH3 0x1DA SWAP3 DUP6 ADD SWAP1 PUSH3 0x240 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x23E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x24E SWAP1 PUSH3 0x407 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x272 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2BD JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x28D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2BD JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2BD JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2BD JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2A0 JUMP JUMPDEST POP PUSH3 0x2CB SWAP3 SWAP2 POP PUSH3 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2CB JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2D0 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x315 JUMPI PUSH3 0x315 PUSH3 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x340 JUMPI PUSH3 0x340 PUSH3 0x444 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x381 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x362 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x393 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x3D7 DUP7 DUP4 DUP8 ADD PUSH3 0x2E6 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3FD DUP6 DUP3 DUP7 ADD PUSH3 0x2E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x41C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x43E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x23B6 DUP1 PUSH3 0x46A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x267 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x674C02AA GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xB3807B1D GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x77B JUMPI DUP1 PUSH4 0xCA8A7D5E EQ PUSH2 0x79B JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x7C8 JUMPI DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x7DE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x7FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3807B1D EQ PUSH2 0x6E0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6F6 JUMPI DUP1 PUSH4 0xBF705B1C EQ PUSH2 0x716 JUMPI DUP1 PUSH4 0xC4D2E8D6 EQ PUSH2 0x746 JUMPI DUP1 PUSH4 0xC6682862 EQ PUSH2 0x766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0xA7CD52CB EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0xA7DC7F2A EQ PUSH2 0x6C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x674C02AA EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0x74F59666 EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0x85649743 EQ PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18CAE269 GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x5B9E3CCF EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x5F93E9E3 EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18CAE269 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x1EE50697 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x30B86627 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x22F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xA70A191 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x13FAEDE6 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x142B0FBE EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x17DC10C4 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x2329A29 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x5A3B809 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x31E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33E PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F91 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F01 JUMP JUMPDEST PUSH2 0xA71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB PUSH2 0x3AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x45B CALLDATASIZE PUSH1 0x4 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF5 JUMP JUMPDEST PUSH2 0xB0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C1 PUSH2 0xC9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x4C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF5 JUMP JUMPDEST PUSH2 0xCE1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FE7 JUMP JUMPDEST PUSH2 0xCFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x506 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F01 JUMP JUMPDEST PUSH2 0xD1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x28C SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x540 CALLDATASIZE PUSH1 0x4 PUSH2 0x201C JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33E PUSH2 0x560 CALLDATASIZE PUSH1 0x4 PUSH2 0x2061 JUMP JUMPDEST PUSH2 0xDBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x15 SLOAD PUSH2 0x28C SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x59A CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA7 JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0xE16 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x5CF CALLDATASIZE PUSH1 0x4 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x60A CALLDATASIZE PUSH1 0x4 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x33E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0x2C1 PUSH2 0x66B CALLDATASIZE PUSH1 0x4 PUSH2 0x2061 JUMP JUMPDEST PUSH2 0xE39 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x68B CALLDATASIZE PUSH1 0x4 PUSH2 0x1EAD JUMP JUMPDEST PUSH2 0x11F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x6AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x6DB CALLDATASIZE PUSH1 0x4 PUSH2 0x207A JUMP JUMPDEST PUSH2 0x125E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x711 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E31 JUMP JUMPDEST PUSH2 0x13AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x731 CALLDATASIZE PUSH1 0x4 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x761 CALLDATASIZE PUSH1 0x4 PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x13F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x1402 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x796 CALLDATASIZE PUSH1 0x4 PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x1490 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7BB PUSH2 0x7B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA7 JUMP JUMPDEST PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x21C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x7F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FE7 JUMP JUMPDEST PUSH2 0x165D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x819 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x862 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA7 JUMP JUMPDEST PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x898 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x8B3 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C1 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x8E3 SWAP1 PUSH2 0x22AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x90F SWAP1 PUSH2 0x22AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x95C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x931 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x95C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x93F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x971 DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH2 0x98E JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B5 DUP3 PUSH2 0xDBC JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x9EE JUMPI PUSH2 0x9D1 DUP2 CALLER PUSH2 0x819 JUMP JUMPDEST PUSH2 0x9EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xA52 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA79 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAEB JUMPI PUSH1 0x0 PUSH1 0x16 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xA9C JUMPI PUSH2 0xA9C PUSH2 0x233E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xAB1 SWAP2 SWAP1 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0xAE3 DUP2 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAF8 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB16 DUP3 PUSH2 0x1770 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB49 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0xB96 JUMPI PUSH2 0xB79 DUP7 CALLER PUSH2 0x819 JUMP JUMPDEST PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xBC8 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP4 AND PUSH2 0xC53 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC51 JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xC51 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCA4 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xAEB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x13AB JUMP JUMPDEST PUSH2 0xD04 PUSH2 0x16EE JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD17 SWAP1 PUSH1 0xA SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1C4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD23 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAEB JUMPI PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xD46 JUMPI PUSH2 0xD46 PUSH2 0x233E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0xD8D DUP2 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD26 JUMP JUMPDEST PUSH2 0xD9D PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0xAEB SWAP3 DUP6 ADD SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B3 DUP3 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDF0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0xE1E PUSH2 0x16EE JUMP JUMPDEST PUSH2 0xE28 PUSH1 0x0 PUSH2 0x17D8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8E3 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE48 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0xEEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x574F414820686F6C6420757020746865206D696E74206973206E6F7420796574 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206C6976652C2061206C6974746C6520746F6F206561726C792074686572652E PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x2E2E206F72206C6174653F205472616E736D697373696F6E20456E64696E6700 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xF65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D757374206D696E74206174206C656173742031206E66742C2030206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F7420616C6C6F7765642E205472616E736D697373696F6E20456E64696E6700 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0xF72 DUP4 DUP4 PUSH2 0x2220 JUMP JUMPDEST GT ISZERO PUSH2 0xFDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320736574206F66207368697274732068617665206265656E206D696E PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x3A32B21030B63932B0B23C961039B7B9393C97 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0xFE9 DUP4 DUP4 PUSH2 0x2220 JUMP JUMPDEST GT ISZERO PUSH2 0x1055 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6F6F6B73206C696B652077652061726520706F70756C6172206D6178207375 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x1C1C1B1E481A185CC81899595B881C995858DA1959 PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11C0 JUMPI PUSH1 0x1 DUP3 GT ISZERO PUSH2 0x10AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x37B7363C90189030BA1030903A34B6B2901D149 PUSH1 0x65 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x116E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD08105B1B1BDDDB1A5CDD1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x10 SLOAD PUSH2 0x112D DUP5 DUP4 PUSH2 0x2220 JUMP JUMPDEST GT ISZERO PUSH2 0x116C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x105B1C9958591E481B5A5B9D1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST POP JUMPDEST DUP2 PUSH1 0xD SLOAD PUSH2 0x117C SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x11C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x86DEE6E840C8DECAE6DC4EE840DAC2E8C6D PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH2 0x11CA CALLER DUP4 PUSH2 0x1828 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x11E9 SWAP1 DUP5 SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH2 0x1268 DUP4 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x736F72727920796F7520617265206E6F7420746865206F776E65720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x131C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636C61696D206973206E6F742061637469766520796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1379 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x616C726561647920636C61696D656421 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x14 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x13B6 DUP5 DUP5 DUP5 PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x13EF JUMPI PUSH2 0x13D2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x13EF JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x13FD PUSH2 0x16EE JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0x140F SWAP1 PUSH2 0x22AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x143B SWAP1 PUSH2 0x22AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1488 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x145D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1488 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x146B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x149B DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH2 0x14FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1575 JUMPI PUSH1 0x0 PUSH2 0x151F DUP3 PUSH2 0x1939 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x153F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x156D JUMP JUMPDEST DUP1 PUSH2 0x1549 DUP6 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0xC PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x155D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x151F PUSH2 0x1AD9 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1596 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15A3 DUP5 PUSH2 0xDC7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15BB JUMPI PUSH2 0x15BB PUSH2 0x2354 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15E4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1653 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1606 DUP3 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1641 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1628 JUMPI PUSH2 0x1628 PUSH2 0x233E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP2 PUSH2 0x163D DUP2 PUSH2 0x22E3 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x164B DUP2 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15EB JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1665 PUSH2 0x16EE JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD17 SWAP1 PUSH1 0xC SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x1680 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH2 0xCDE DUP2 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x8B3 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x17BF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH2 0x17BD JUMPI JUMPDEST DUP1 PUSH2 0x17B6 JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1798 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xD17 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1877 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x218C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1891 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18C1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x18BE SWAP2 DUP2 ADD SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x191C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x18EF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1914 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x1956 SWAP1 PUSH2 0x22AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1982 SWAP1 PUSH2 0x22AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x19FF JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1A29 JUMPI DUP1 PUSH2 0x1A13 DUP2 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A22 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2238 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A03 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A44 JUMPI PUSH2 0x1A44 PUSH2 0x2354 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A6E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x156D JUMPI PUSH2 0x1A83 PUSH1 0x1 DUP4 PUSH2 0x226B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A90 PUSH1 0xA DUP7 PUSH2 0x22FE JUMP JUMPDEST PUSH2 0x1A9B SWAP1 PUSH1 0x30 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1AB0 JUMPI PUSH2 0x1AB0 PUSH2 0x233E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1AD2 PUSH1 0xA DUP7 PUSH2 0x2238 JUMP JUMPDEST SWAP5 POP PUSH2 0x1A72 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0x8E3 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH2 0x1AF2 DUP4 DUP4 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xAEB JUMPI PUSH1 0x1 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0x1B1C PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x1B39 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x1B09 JUMPI DUP2 PUSH1 0x1 SLOAD EQ PUSH2 0x1B4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH2 0x1B76 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB562E8DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP9 MUL ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 DUP6 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 SSTORE DUP3 DUP5 ADD SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 PUSH1 0x1 DUP4 ADD JUMPDEST DUP2 DUP2 EQ PUSH2 0x1C25 JUMPI DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 ADD PUSH2 0x1BED JUMP JUMPDEST POP DUP2 PUSH2 0x1C43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x2E0763 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1C58 SWAP1 PUSH2 0x22AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1C7A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1CC0 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1C93 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1CC0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1CC0 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1CC0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST POP PUSH2 0x1CCC SWAP3 SWAP2 POP PUSH2 0x1CD0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1CCC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1CD1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1D00 JUMPI PUSH2 0x1D00 PUSH2 0x2354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1D28 JUMPI PUSH2 0x1D28 PUSH2 0x2354 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1D41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1D72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B6 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B6 DUP3 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DDE DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x1DEC PUSH1 0x20 DUP5 ADD PUSH2 0x1D5B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E13 DUP5 PUSH2 0x1D5B JUMP JUMPDEST SWAP3 POP PUSH2 0x1E21 PUSH1 0x20 DUP6 ADD PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E50 DUP6 PUSH2 0x1D5B JUMP JUMPDEST SWAP4 POP PUSH2 0x1E5E PUSH1 0x20 DUP7 ADD PUSH2 0x1D5B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1E92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EA1 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1CE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EC9 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x1DEC PUSH1 0x20 DUP5 ADD PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EF3 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1F4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1F64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B6 DUP3 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EF3 DUP4 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17B6 DUP2 PUSH2 0x236A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x17B6 DUP2 PUSH2 0x236A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2010 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156D DUP5 DUP3 DUP6 ADD PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x202F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2046 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2052 DUP6 DUP3 DUP7 ADD PUSH2 0x1D87 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2073 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x208D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x20B4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2282 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 PUSH2 0x20DB DUP3 DUP6 DUP4 DUP11 ADD PUSH2 0x2282 JUMP JUMPDEST DUP6 MLOAD SWAP2 DUP5 ADD SWAP2 PUSH2 0x20EE DUP2 DUP5 DUP5 DUP11 ADD PUSH2 0x2282 JUMP JUMPDEST DUP6 SLOAD SWAP3 ADD SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x210B JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST DUP6 DUP4 LT DUP2 EQ ISZERO PUSH2 0x2129 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP1 DUP1 ISZERO PUSH2 0x213D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x214E JUMPI PUSH2 0x217B JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 MSTORE DUP4 DUP9 ADD SWAP6 POP PUSH2 0x217B JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2173 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP9 ADD PUSH2 0x215A JUMP JUMPDEST POP POP DUP4 DUP9 ADD SWAP6 POP JUMPDEST POP SWAP4 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x21BF SWAP1 DUP4 ADD DUP5 PUSH2 0x209C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2201 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x21E5 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x17B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x209C JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2233 JUMPI PUSH2 0x2233 PUSH2 0x2312 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2247 JUMPI PUSH2 0x2247 PUSH2 0x2328 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2266 JUMPI PUSH2 0x2266 PUSH2 0x2312 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x227D JUMPI PUSH2 0x227D PUSH2 0x2312 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x229D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2285 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x13EF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x22C2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x157F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x22F7 JUMPI PUSH2 0x22F7 PUSH2 0x2312 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x230D JUMPI PUSH2 0x230D PUSH2 0x2328 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCDE JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 DUP8 PUSH17 0x3A58A4B9A63CC4503322BCD6E449094BEC SWAP4 DUP4 JUMP 0xBC SMOD CODECOPY RETURNDATACOPY CREATE SWAP3 0xD6 0xBD 0xEB PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "359:37:7:-:0;205:5427;359:37;;205:5427;359:37;;;-1:-1:-1;;;359:37:7;;;;;;;;;;:::i;:::-;-1:-1:-1;425:11:7;403:33;;468:2;441:29;;503:1;475:29;;541:1;509:33;;549:26;;;-1:-1:-1;;549:26:7;;;;;;767:35;;;;;;;;915:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5201:158:5;;;;;;;;;;;;;-1:-1:-1;;;5201:158:5;;;;;;;;;;;;;;;;-1:-1:-1;;;5201:158:5;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;5268:13:5;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;5292:17:5;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;5751:7:5;5320:13;:31;;;1806:7:1;:22;-1:-1:-1;1033:24:7::1;1044:12:::0;1033:10:::1;:24::i;:::-;1064:28;1076:13:::0;1090:1:::1;1064:11;:28::i;:::-;915:183:::0;;205:5427;;640:96:3;719:10;;640:96::o;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;4022:98:7:-;1094:13:0;:11;:13::i;:::-;4093:21:7;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;:::-;;4022:98:::0;:::o;4127:121::-;1094:13:0;:11;:13::i;:::-;4212:15:7::1;::::0;;;:8:::1;:15;::::0;;;;;;;:30;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;;4127:121:::0;;:::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:3;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;1673:2:8;1414:68:0;;;1655:21:8;;;1692:18;;;1685:30;1751:34;1731:18;;;1724:62;1803:18;;1414:68:0;;;;;;;;1359:130::o;205:5427:7:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;205:5427:7;;;-1:-1:-1;205:5427:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:8;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:8;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:8;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:8:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:8;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1832:380::-;1911:1;1907:12;;;;1954;;;1975:61;;2029:4;2021:6;2017:17;2007:27;;1975:61;2082:2;2074:6;2071:14;2051:18;2048:38;2045:161;;;2128:10;2123:3;2119:20;2116:1;2109:31;2163:4;2160:1;2153:15;2191:4;2188:1;2181:15;2045:161;;1832:380;;;:::o;2217:127::-;2278:10;2273:3;2269:20;2266:1;2259:31;2309:4;2306:1;2299:15;2333:4;2330:1;2323:15;2217:127;205:5427:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AllowlistLimit_2562": {
									"entryPoint": null,
									"id": 2562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfers_1706": {
									"entryPoint": null,
									"id": 1706,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_2620": {
									"entryPoint": 6873,
									"id": 2620,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1693": {
									"entryPoint": null,
									"id": 1693,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1761": {
									"entryPoint": 6210,
									"id": 1761,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_checkOwner_54": {
									"entryPoint": 5870,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_claimURI_2632": {
									"entryPoint": 6457,
									"id": 2632,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_exists_1445": {
									"entryPoint": 5960,
									"id": 1445,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_2267": {
									"entryPoint": null,
									"id": 2267,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_1478": {
									"entryPoint": null,
									"id": 1478,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_1459": {
									"entryPoint": null,
									"id": 1459,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1857": {
									"entryPoint": 6997,
									"id": 1857,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_2310": {
									"entryPoint": null,
									"id": 2310,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_459": {
									"entryPoint": null,
									"id": 459,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_2300": {
									"entryPoint": null,
									"id": 2300,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_1307": {
									"entryPoint": null,
									"id": 1307,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_1297": {
									"entryPoint": null,
									"id": 1297,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_1231": {
									"entryPoint": 6000,
									"id": 1231,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_2031": {
									"entryPoint": 6888,
									"id": 2031,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeMint_2046": {
									"entryPoint": 6184,
									"id": 2046,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_845": {
									"entryPoint": null,
									"id": 845,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 6104,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addressMintedBalance_2590": {
									"entryPoint": null,
									"id": 2590,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowlistUsers_3020": {
									"entryPoint": 3355,
									"id": 3020,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowlist_2586": {
									"entryPoint": null,
									"id": 2586,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_1352": {
									"entryPoint": 2474,
									"id": 1352,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_918": {
									"entryPoint": 3527,
									"id": 918,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@baseExtension_2550": {
									"entryPoint": 5122,
									"id": 2550,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkClaimed_2914": {
									"entryPoint": null,
									"id": 2914,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimActiveByPhase_2569": {
									"entryPoint": null,
									"id": 2569,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimItem_2898": {
									"entryPoint": 4702,
									"id": 2898,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@claimPhaseByToken_2579": {
									"entryPoint": null,
									"id": 2579,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimedItemByPhase_2575": {
									"entryPoint": null,
									"id": 2575,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cost_2553": {
									"entryPoint": null,
									"id": 2553,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentSet_2559": {
									"entryPoint": null,
									"id": 2559,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getApproved_1375": {
									"entryPoint": 2406,
									"id": 1375,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isAllowlisted_2752": {
									"entryPoint": null,
									"id": 2752,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1419": {
									"entryPoint": null,
									"id": 1419,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@maxSupply_2556": {
									"entryPoint": null,
									"id": 2556,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_2740": {
									"entryPoint": 3641,
									"id": 2740,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_1041": {
									"entryPoint": 2260,
									"id": 1041,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@onlyAllowlisted_2582": {
									"entryPoint": null,
									"id": 2582,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOfTokenIds_3111": {
									"entryPoint": 5509,
									"id": 3111,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ownerOf_1123": {
									"entryPoint": 3516,
									"id": 1123,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2978": {
									"entryPoint": 2233,
									"id": 2978,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@paused_2565": {
									"entryPoint": null,
									"id": 2565,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeUsersFromAllowlist_3050": {
									"entryPoint": 2673,
									"id": 3050,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 3606,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1642": {
									"entryPoint": 3297,
									"id": 1642,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1680": {
									"entryPoint": 5035,
									"id": 1680,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1401": {
									"entryPoint": 4594,
									"id": 1401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBaseExtension_2954": {
									"entryPoint": 5725,
									"id": 2954,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setBaseURI_2926": {
									"entryPoint": 3324,
									"id": 2926,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setClaimURI_2942": {
									"entryPoint": 3477,
									"id": 2942,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setCurrentSetAmount_2966": {
									"entryPoint": 5109,
									"id": 2966,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setOnlyAllowlisted_2990": {
									"entryPoint": 2800,
									"id": 2990,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1031": {
									"entryPoint": 2151,
									"id": 1031,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1051": {
									"entryPoint": 3626,
									"id": 1051,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_557": {
									"entryPoint": 6619,
									"id": 557,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toggleClaim_2849": {
									"entryPoint": 2634,
									"id": 2849,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@tokenURI_2833": {
									"entryPoint": 5264,
									"id": 2833,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_870": {
									"entryPoint": null,
									"id": 870,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1623": {
									"entryPoint": 2827,
									"id": 1623,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 5752,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_3130": {
									"entryPoint": 3228,
									"id": 3130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 7515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 7543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 7559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 7937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 8054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_uint256": {
									"entryPoint": 8081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 8167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 8220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_bytes": {
									"entryPoint": 8348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8392,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8588,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_09adf7b4d6ad9955b47a524067a9b8a92ca96a8c9357701986f8328e2c73c833__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a8b16c5698f793fadcf69c1a4b70bc053d8668181e11d673c774abfb93d1253__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48fda742698573100e179ae1b13bb17b7308f3fb873a40e607485d8ba281db03__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_59d04762fffc15004f9c80d7b6292c6e0fd9d298a8f76aac81112340e7ec504a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_81850a1f8053c5838ebf588fb7b236cacc8d1dcf23a77ab25e4a5372efacbd71__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_97431681bf783971e6935af241e6bf6a0d8509ed0533483cd521a055744277a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9eaf0b75917dcc039b01243b842825d0c0514169d0bbc47abccfa944b0f9514__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bcbf221e1d785dfc11083f52adc69389d8ebd7c45bac276ecfbd15edf753070b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bfdd526ad66ccaa54ff804305964c61a6c99d1b79ca6b5996a01bce55e6e0ed1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db7e8433bc66fe3dc25da0449b83dec916181efd3b63d1a0329faf71b04911a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 8834,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8978,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9000,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9022,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9044,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 9066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17300:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "88:557:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "98:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "108:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "102:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "153:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "155:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "155:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "155:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "141:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "149:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "138:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "138:14:8"
															},
															"nodeType": "YulIf",
															"src": "135:40:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "198:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:7:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "210:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "230:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "224:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "214:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:73:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "264:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nodeType": "YulIdentifier",
																										"src": "288:6:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "296:2:8",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "284:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "284:15:8"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "301:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "280:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "280:24:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "306:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "276:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "276:33:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "311:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "272:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "272:42:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "260:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:55:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "246:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "374:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "376:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "376:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "376:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "333:10:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "345:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "330:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "353:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "365:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "350:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "350:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "327:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "327:46:8"
															},
															"nodeType": "YulIf",
															"src": "324:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "416:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "405:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "405:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "405:22:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "436:15:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "445:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "436:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "467:6:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "475:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "460:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "460:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "460:22:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "520:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "532:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "522:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "522:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "522:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "501:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "506:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "515:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "494:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:25:8"
															},
															"nodeType": "YulIf",
															"src": "491:45:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "562:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "570:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:17:8"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "577:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "582:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "545:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "545:44:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "545:44:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "613:6:8"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "621:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "609:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "609:19:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "630:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "605:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "605:30:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "637:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "598:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "598:41:8"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "57:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "62:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "70:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "78:5:8",
														"type": ""
													}
												],
												"src": "14:631:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "699:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "709:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "731:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "718:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "709:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "801:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "813:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "803:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "803:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "803:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "760:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "786:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "791:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "782:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "782:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "795:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "778:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "778:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "767:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "767:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "757:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "757:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "750:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:50:8"
															},
															"nodeType": "YulIf",
															"src": "747:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "678:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "689:5:8",
														"type": ""
													}
												],
												"src": "650:173:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "874:114:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "884:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "906:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "893:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "893:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "884:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "966:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "975:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "978:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "968:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "968:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "968:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "935:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "956:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "949:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "949:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "942:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "942:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "932:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "932:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "925:40:8"
															},
															"nodeType": "YulIf",
															"src": "922:60:8"
														}
													]
												},
												"name": "abi_decode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "853:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "864:5:8",
														"type": ""
													}
												],
												"src": "828:160:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:168:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1095:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1104:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1107:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1097:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1097:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1097:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1074:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1082:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1089:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1066:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:35:8"
															},
															"nodeType": "YulIf",
															"src": "1056:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1120:88:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1167:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1175:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1163:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1195:6:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1182:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1182:20:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1204:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "1129:33:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1129:79:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1120:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1020:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1028:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1036:5:8",
														"type": ""
													}
												],
												"src": "993:221:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1289:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1335:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1344:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1347:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1337:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1337:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1337:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1310:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1319:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1306:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1306:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1331:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1302:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1302:32:8"
															},
															"nodeType": "YulIf",
															"src": "1299:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1360:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1389:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1370:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1255:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1266:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1278:6:8",
														"type": ""
													}
												],
												"src": "1219:186:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1497:173:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1543:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1552:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1555:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1545:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1545:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1545:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1514:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1514:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1510:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1510:32:8"
															},
															"nodeType": "YulIf",
															"src": "1507:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1568:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1597:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1578:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1578:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1568:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1616:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1649:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1660:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1645:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1645:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1626:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1626:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1616:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1455:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1466:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1478:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1486:6:8",
														"type": ""
													}
												],
												"src": "1410:260:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1779:224:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1825:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1834:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1837:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1827:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1827:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1827:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1800:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1809:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1796:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1821:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1792:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1792:32:8"
															},
															"nodeType": "YulIf",
															"src": "1789:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1850:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1860:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1850:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1898:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1931:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1942:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1927:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1927:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1908:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1908:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1955:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1982:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1993:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1978:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1978:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1965:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1965:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1729:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1740:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1752:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1760:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1768:6:8",
														"type": ""
													}
												],
												"src": "1675:328:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2138:536:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2185:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2194:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2197:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2187:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2187:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2187:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2159:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2168:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2155:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2155:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2151:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2151:33:8"
															},
															"nodeType": "YulIf",
															"src": "2148:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2210:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2239:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2220:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2220:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2210:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2258:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2291:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2302:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2287:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2287:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2268:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2268:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2315:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2342:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2353:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2338:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2338:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2325:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2325:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2366:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2397:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2408:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2393:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2393:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:32:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2370:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2455:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2464:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2467:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2457:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2457:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2457:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2427:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2424:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2424:30:8"
															},
															"nodeType": "YulIf",
															"src": "2421:50:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2480:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2494:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2505:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:22:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2484:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2560:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2569:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2572:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2562:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2562:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2562:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2539:2:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2543:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2535:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2535:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2550:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2531:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2531:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2524:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2524:35:8"
															},
															"nodeType": "YulIf",
															"src": "2521:55:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2585:83:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2633:2:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2637:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2629:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2629:11:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2655:2:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2642:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2642:16:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2660:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2595:33:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2595:73:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2080:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2091:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2103:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2111:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2119:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2127:6:8",
														"type": ""
													}
												],
												"src": "2008:666:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2763:170:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2809:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2818:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2821:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2811:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2811:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2811:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2784:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2793:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2780:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2780:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2805:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2776:32:8"
															},
															"nodeType": "YulIf",
															"src": "2773:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2834:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2863:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2844:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2844:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2834:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2882:45:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2912:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2923:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2908:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2908:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2892:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2892:35:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2882:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2721:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2732:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2744:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2752:6:8",
														"type": ""
													}
												],
												"src": "2679:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3025:167:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3071:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3080:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3083:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3073:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3073:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3073:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3046:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3055:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3042:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3042:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3067:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3038:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3038:32:8"
															},
															"nodeType": "YulIf",
															"src": "3035:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3096:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3125:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3106:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3106:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3096:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3144:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3171:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3182:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3167:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3167:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3154:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2983:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2994:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3006:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3014:6:8",
														"type": ""
													}
												],
												"src": "2938:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3302:510:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3348:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3357:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3360:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3350:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3350:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3350:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3323:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3332:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3319:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3319:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3344:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3315:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3315:32:8"
															},
															"nodeType": "YulIf",
															"src": "3312:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3373:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3387:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3387:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3377:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3419:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3429:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3423:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3474:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3483:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3486:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3476:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3476:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3476:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3462:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3470:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3459:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3459:14:8"
															},
															"nodeType": "YulIf",
															"src": "3456:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3499:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3513:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3524:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3509:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3509:22:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3503:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3579:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3588:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3591:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3581:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3581:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3581:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3558:2:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3562:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3554:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3554:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3569:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3550:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3550:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3543:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3543:35:8"
															},
															"nodeType": "YulIf",
															"src": "3540:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3604:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3631:2:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3618:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3618:16:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3608:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3661:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3670:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3673:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3663:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3663:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3663:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3649:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3657:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3646:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3646:14:8"
															},
															"nodeType": "YulIf",
															"src": "3643:34:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3735:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3744:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3747:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3737:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3737:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3737:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3700:2:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3708:1:8",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3711:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3704:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3704:14:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3696:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3696:23:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3721:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3692:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3692:32:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3726:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3689:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3689:45:8"
															},
															"nodeType": "YulIf",
															"src": "3686:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3760:21:8",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3774:2:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3778:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3770:11:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3760:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3790:16:8",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "3800:6:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3260:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3271:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3283:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3291:6:8",
														"type": ""
													}
												],
												"src": "3197:615:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3884:113:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3930:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3939:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3942:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3932:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3932:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3932:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3905:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3914:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3901:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3926:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3897:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3897:32:8"
															},
															"nodeType": "YulIf",
															"src": "3894:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3955:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3981:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3965:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3965:26:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3850:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3861:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3873:6:8",
														"type": ""
													}
												],
												"src": "3817:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4086:164:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4132:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4141:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4144:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4134:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4134:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4134:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4107:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4116:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4103:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4103:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4128:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4099:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4099:32:8"
															},
															"nodeType": "YulIf",
															"src": "4096:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4157:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4183:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4167:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4167:26:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4157:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4202:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4229:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4240:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4225:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4225:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4212:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4212:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4202:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4044:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4055:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4067:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4075:6:8",
														"type": ""
													}
												],
												"src": "4002:248:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4324:176:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4370:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4379:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4382:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4372:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4372:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4372:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4345:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4354:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4341:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4341:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4366:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4337:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4337:32:8"
															},
															"nodeType": "YulIf",
															"src": "4334:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4395:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4421:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4408:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4408:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4399:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4464:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "4440:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4440:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4440:30:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4479:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4489:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4290:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4301:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4313:6:8",
														"type": ""
													}
												],
												"src": "4255:245:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4585:169:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4631:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4640:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4643:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4633:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4633:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4633:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4606:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4615:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4602:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4602:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4627:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4598:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4598:32:8"
															},
															"nodeType": "YulIf",
															"src": "4595:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4656:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4675:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4669:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4669:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4660:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4718:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "4694:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4694:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4694:30:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4733:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4743:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4733:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4551:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4562:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4574:6:8",
														"type": ""
													}
												],
												"src": "4505:249:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4839:242:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4885:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4894:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4897:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4887:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4887:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4887:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4860:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4869:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4856:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4856:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4881:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4852:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4852:32:8"
															},
															"nodeType": "YulIf",
															"src": "4849:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4910:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4937:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4924:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4924:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4914:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4990:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4999:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5002:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4992:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4992:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4992:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4962:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4970:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4959:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4959:30:8"
															},
															"nodeType": "YulIf",
															"src": "4956:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5015:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5047:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5058:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5043:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5043:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5067:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "5025:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5025:50:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5015:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4805:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4816:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4828:6:8",
														"type": ""
													}
												],
												"src": "4759:322:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5183:293:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5229:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5238:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5241:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5231:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5231:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5231:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5204:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5213:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5200:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5200:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5225:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5196:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:32:8"
															},
															"nodeType": "YulIf",
															"src": "5193:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5254:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5281:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5268:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5268:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5258:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5334:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5343:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5346:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5336:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5336:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5336:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5314:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5303:30:8"
															},
															"nodeType": "YulIf",
															"src": "5300:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5359:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5391:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5402:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5387:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5387:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5411:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "5369:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:50:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5359:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5428:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5455:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5466:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5451:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5451:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5438:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5438:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5428:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5141:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5152:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5164:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5172:6:8",
														"type": ""
													}
												],
												"src": "5086:390:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5551:110:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5597:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5606:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5609:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5599:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5599:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5599:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5572:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5581:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5568:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5568:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5593:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5564:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:32:8"
															},
															"nodeType": "YulIf",
															"src": "5561:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5622:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5645:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5632:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5622:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5517:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5528:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5540:6:8",
														"type": ""
													}
												],
												"src": "5481:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5753:161:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5799:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5808:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5811:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5801:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5801:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5801:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5774:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5783:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5770:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5770:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5795:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5766:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5766:32:8"
															},
															"nodeType": "YulIf",
															"src": "5763:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5824:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5847:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5834:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5834:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5824:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5866:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5893:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5904:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5889:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5889:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5876:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5876:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5866:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5711:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5722:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5734:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5742:6:8",
														"type": ""
													}
												],
												"src": "5666:248:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5968:208:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5978:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5998:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5992:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5992:12:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5982:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6020:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6025:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6013:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6013:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6013:19:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6067:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6074:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6063:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6063:16:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6085:3:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6090:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6081:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6081:14:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6097:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6041:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6041:63:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6041:63:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6113:57:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6128:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6141:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6149:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6137:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6137:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6158:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6154:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6154:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6133:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6133:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6124:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6124:39:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6165:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6120:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6120:50:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6113:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5945:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5952:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5960:3:8",
														"type": ""
													}
												],
												"src": "5919:257:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6413:1295:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6423:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6443:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6437:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6427:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6459:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6469:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6463:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6508:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6516:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6504:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6504:15:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6521:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6526:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6482:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6482:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6482:51:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6542:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6559:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6564:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6555:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6555:16:8"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "6546:5:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6580:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6602:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6596:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6596:13:8"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "6584:8:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6644:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6652:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6640:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6640:15:8"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "6657:5:8"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "6664:8:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6618:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6618:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6618:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6682:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "6699:5:8"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "6706:8:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6695:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6695:20:8"
															},
															"variables": [
																{
																	"name": "end_2",
																	"nodeType": "YulTypedName",
																	"src": "6686:5:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6724:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6735:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nodeType": "YulTypedName",
																	"src": "6728:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6745:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6768:6:8"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "6762:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6762:13:8"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "6749:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6784:19:8",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "6800:3:8"
															},
															"variables": [
																{
																	"name": "length_2",
																	"nodeType": "YulTypedName",
																	"src": "6788:8:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6812:11:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6822:1:8",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6816:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6832:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6848:2:8"
																	},
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "6852:9:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6844:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6844:18:8"
															},
															"variableNames": [
																{
																	"name": "length_2",
																	"nodeType": "YulIdentifier",
																	"src": "6832:8:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6871:44:8",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "6901:9:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6912:2:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6897:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6897:18:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6875:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6962:55:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6976:31:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length_2",
																					"nodeType": "YulIdentifier",
																					"src": "6992:8:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7002:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6988:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6988:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "length_2",
																				"nodeType": "YulIdentifier",
																				"src": "6976:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6934:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6927:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6927:26:8"
															},
															"nodeType": "YulIf",
															"src": "6924:93:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7078:115:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "7099:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7108:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7113:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7104:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7104:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7092:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7092:33:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7092:33:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7145:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7148:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7138:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7138:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7138:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ret",
																					"nodeType": "YulIdentifier",
																					"src": "7173:3:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7178:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7166:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7166:17:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7166:17:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7032:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length_2",
																				"nodeType": "YulIdentifier",
																				"src": "7055:8:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7065:2:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7052:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7052:16:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7029:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7029:40:8"
															},
															"nodeType": "YulIf",
															"src": "7026:167:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7243:103:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "end_2",
																							"nodeType": "YulIdentifier",
																							"src": "7264:5:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "7275:9:8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "7290:3:8",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "7286:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7286:8:8"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "7271:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7271:24:8"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "7257:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7257:39:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7257:39:8"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "7309:27:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "end_2",
																							"nodeType": "YulIdentifier",
																							"src": "7320:5:8"
																						},
																						{
																							"name": "length_2",
																							"nodeType": "YulIdentifier",
																							"src": "7327:8:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7316:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7316:20:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "7309:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7236:110:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7241:1:8",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7362:321:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7376:52:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "value2",
																							"nodeType": "YulIdentifier",
																							"src": "7421:6:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7391:29:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7391:37:8"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "7380:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7441:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7450:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7445:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7520:113:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "end_2",
																												"nodeType": "YulIdentifier",
																												"src": "7549:5:8"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "7556:1:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "7545:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7545:13:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "7566:7:8"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "7560:5:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7560:14:8"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "7538:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7538:37:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7538:37:8"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7592:27:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "7607:7:8"
																									},
																									{
																										"name": "_2",
																										"nodeType": "YulIdentifier",
																										"src": "7616:2:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7603:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7603:16:8"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "7592:7:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7475:1:8"
																						},
																						{
																							"name": "length_2",
																							"nodeType": "YulIdentifier",
																							"src": "7478:8:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7472:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7472:15:8"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7488:19:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7490:15:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7499:1:8"
																									},
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "7502:2:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7495:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7495:10:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7490:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7468:3:8",
																					"statements": []
																				},
																				"src": "7464:169:8"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "7646:27:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "end_2",
																							"nodeType": "YulIdentifier",
																							"src": "7657:5:8"
																						},
																						{
																							"name": "length_2",
																							"nodeType": "YulIdentifier",
																							"src": "7664:8:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7653:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7653:20:8"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "7646:3:8"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7355:328:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7360:1:8",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"name": "outOfPlaceEncoding",
																"nodeType": "YulIdentifier",
																"src": "7209:18:8"
															},
															"nodeType": "YulSwitch",
															"src": "7202:481:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7692:10:8",
															"value": {
																"name": "ret",
																"nodeType": "YulIdentifier",
																"src": "7699:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7692:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6373:3:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6378:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6386:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6394:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6405:3:8",
														"type": ""
													}
												],
												"src": "6181:1527:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7814:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7824:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7836:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7847:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7832:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7832:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7824:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7866:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7881:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7897:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7902:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7893:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7893:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7906:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7889:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7889:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7877:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7877:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7859:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7859:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7859:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7783:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7794:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7805:4:8",
														"type": ""
													}
												],
												"src": "7713:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8124:285:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8134:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8152:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8157:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8148:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8148:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8161:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8144:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8144:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8138:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8179:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8194:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8202:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8190:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8190:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8172:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8172:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8172:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8226:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8237:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8222:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8222:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8246:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8254:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8242:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8242:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8215:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8215:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8215:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8278:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8289:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8274:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8274:18:8"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8294:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8267:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8267:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8267:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8321:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8332:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8317:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8337:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8310:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8310:31:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8350:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8375:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8387:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8398:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8383:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8383:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8358:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:45:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8350:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8069:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8080:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8088:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8096:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8104:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8115:4:8",
														"type": ""
													}
												],
												"src": "7921:488:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8565:481:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8575:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8585:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8579:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8596:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8614:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8625:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8610:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8610:18:8"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "8600:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8644:9:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8655:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8637:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8637:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8637:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8667:17:8",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "8678:6:8"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "8671:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8693:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8713:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8707:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8707:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8697:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "8736:6:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8744:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8729:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8729:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8729:22:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8760:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8771:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8782:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8767:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8767:18:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8760:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8794:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8812:6:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8820:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8808:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8808:15:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "8798:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8832:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8841:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8836:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8900:120:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8921:3:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "8932:6:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8926:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8926:13:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8914:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8914:26:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8914:26:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8953:19:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8964:3:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8969:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8960:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8960:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8953:3:8"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8985:25:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8999:6:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "9007:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8995:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8995:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8985:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8862:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8865:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8859:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8859:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8873:18:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8875:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8884:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8887:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8880:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8880:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8875:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8855:3:8",
																"statements": []
															},
															"src": "8851:169:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9029:11:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9037:3:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9029:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8534:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8556:4:8",
														"type": ""
													}
												],
												"src": "8414:632:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9146:92:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9156:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9168:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9179:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9164:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9164:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9156:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9198:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "9223:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9216:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9216:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9209:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9209:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9191:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9191:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9191:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9115:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9126:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9137:4:8",
														"type": ""
													}
												],
												"src": "9051:187:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9364:98:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9381:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9392:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9374:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9374:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9374:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9404:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9429:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9441:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9452:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9437:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9437:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9412:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9412:44:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9404:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9333:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9344:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9355:4:8",
														"type": ""
													}
												],
												"src": "9243:219:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9641:164:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9658:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9669:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9651:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9651:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9651:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9692:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9703:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9688:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9688:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9708:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9681:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9681:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9681:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9731:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9742:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9727:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9727:18:8"
																	},
																	{
																		"hexValue": "416c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9747:16:8",
																		"type": "",
																		"value": "Already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9720:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9720:44:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9720:44:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9773:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9785:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9796:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9781:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9781:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9773:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9618:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9632:4:8",
														"type": ""
													}
												],
												"src": "9467:338:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9984:166:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10001:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10012:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9994:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9994:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9994:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10035:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10046:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10031:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10031:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10051:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10024:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10024:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10024:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10074:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10085:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10070:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10070:18:8"
																	},
																	{
																		"hexValue": "616c726561647920636c61696d656421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10090:18:8",
																		"type": "",
																		"value": "already claimed!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10063:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10063:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10063:46:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10118:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10130:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10141:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10126:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10126:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10118:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09adf7b4d6ad9955b47a524067a9b8a92ca96a8c9357701986f8328e2c73c833__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9961:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9975:4:8",
														"type": ""
													}
												],
												"src": "9810:340:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10329:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10346:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10357:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10339:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10339:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10380:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10391:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10376:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10376:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10396:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10369:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10369:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10369:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10419:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10430:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10415:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10415:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10435:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10408:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10408:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10408:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10490:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10501:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10486:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10486:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10506:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10479:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10479:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10479:36:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10524:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10536:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10547:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10532:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10532:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10524:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10306:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10320:4:8",
														"type": ""
													}
												],
												"src": "10155:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10736:168:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10753:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10764:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10746:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10746:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10746:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10787:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10798:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10783:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10783:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10803:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10776:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10776:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10776:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10826:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10837:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10822:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10822:18:8"
																	},
																	{
																		"hexValue": "436f737420646f65736e2774206d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10842:20:8",
																		"type": "",
																		"value": "Cost doesn't match"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10815:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10815:48:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10815:48:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10872:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10884:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10895:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10880:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10880:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10872:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a8b16c5698f793fadcf69c1a4b70bc053d8668181e11d673c774abfb93d1253__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10713:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10727:4:8",
														"type": ""
													}
												],
												"src": "10562:342:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11083:253:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11100:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11111:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11093:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11093:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11093:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11134:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11145:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11130:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11130:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11150:2:8",
																		"type": "",
																		"value": "63"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11123:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11123:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11123:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11173:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11184:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11169:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11169:18:8"
																	},
																	{
																		"hexValue": "6d757374206d696e74206174206c656173742031206e66742c2030206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11189:34:8",
																		"type": "",
																		"value": "must mint at least 1 nft, 0 is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11162:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11162:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11162:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11244:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11255:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11240:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11240:18:8"
																	},
																	{
																		"hexValue": "6f7420616c6c6f7765642e205472616e736d697373696f6e20456e64696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11260:33:8",
																		"type": "",
																		"value": "ot allowed. Transmission Ending"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11233:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11233:61:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11233:61:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11303:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11315:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11326:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11311:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11311:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11303:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48fda742698573100e179ae1b13bb17b7308f3fb873a40e607485d8ba281db03__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11060:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11074:4:8",
														"type": ""
													}
												],
												"src": "10909:427:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11515:325:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11532:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11543:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11525:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11525:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11525:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11566:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11577:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11562:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11562:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11582:2:8",
																		"type": "",
																		"value": "95"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11555:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11555:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11555:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11605:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11616:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11601:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11601:18:8"
																	},
																	{
																		"hexValue": "574f414820686f6c6420757020746865206d696e74206973206e6f7420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11621:34:8",
																		"type": "",
																		"value": "WOAH hold up the mint is not yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11594:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11594:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11594:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11676:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11687:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11672:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11672:18:8"
																	},
																	{
																		"hexValue": "206c6976652c2061206c6974746c6520746f6f206561726c792074686572652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11692:34:8",
																		"type": "",
																		"value": " live, a little too early there."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11665:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11665:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11665:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11747:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11758:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11743:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11743:19:8"
																	},
																	{
																		"hexValue": "2e2e206f72206c6174653f205472616e736d697373696f6e20456e64696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11764:33:8",
																		"type": "",
																		"value": ".. or late? Transmission Ending"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11736:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11736:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11736:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11807:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11819:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11830:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11815:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11815:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11807:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_59d04762fffc15004f9c80d7b6292c6e0fd9d298a8f76aac81112340e7ec504a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11492:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11506:4:8",
														"type": ""
													}
												],
												"src": "11341:499:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12019:241:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12036:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12047:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12029:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12029:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12029:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12070:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12081:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12066:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12066:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12086:2:8",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12059:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12059:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12059:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12109:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12120:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12105:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12105:18:8"
																	},
																	{
																		"hexValue": "5468697320736574206f66207368697274732068617665206265656e206d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12125:34:8",
																		"type": "",
																		"value": "This set of shirts have been min"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12098:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12098:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12098:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12180:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12191:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12176:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12176:18:8"
																	},
																	{
																		"hexValue": "74656420616c72656164792c20736f7272792e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12196:21:8",
																		"type": "",
																		"value": "ted already, sorry."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12169:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12169:49:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12169:49:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12227:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12239:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12250:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12235:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12235:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12227:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_81850a1f8053c5838ebf588fb7b236cacc8d1dcf23a77ab25e4a5372efacbd71__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11996:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12010:4:8",
														"type": ""
													}
												],
												"src": "11845:415:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12439:243:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12456:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12467:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12449:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12449:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12449:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12490:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12501:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12486:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12486:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12506:2:8",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12479:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12479:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12479:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12529:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12540:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12525:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12525:18:8"
																	},
																	{
																		"hexValue": "6c6f6f6b73206c696b652077652061726520706f70756c6172206d6178207375",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12545:34:8",
																		"type": "",
																		"value": "looks like we are popular max su"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12518:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12518:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12518:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12600:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12611:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12596:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12596:18:8"
																	},
																	{
																		"hexValue": "70706c7920686173206265656e2072656163686564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12616:23:8",
																		"type": "",
																		"value": "pply has been reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12589:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12589:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12589:51:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12649:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12661:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12672:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12657:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12657:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12649:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_97431681bf783971e6935af241e6bf6a0d8509ed0533483cd521a055744277a0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12416:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12430:4:8",
														"type": ""
													}
												],
												"src": "12265:417:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12861:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12878:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12889:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12871:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12871:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12871:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12912:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12923:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12908:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12908:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12928:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12901:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12901:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12901:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12951:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12962:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12947:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12947:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12967:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12940:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12940:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12940:62:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13011:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13023:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13034:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13019:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13019:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13011:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12838:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12852:4:8",
														"type": ""
													}
												],
												"src": "12687:356:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13222:237:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13239:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13250:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13232:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13232:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13232:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13273:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13284:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13269:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13269:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13289:2:8",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13262:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13262:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13262:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13312:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13323:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13308:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13308:18:8"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13328:34:8",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13301:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13301:62:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13301:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13383:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13394:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13379:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13379:18:8"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13399:17:8",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13372:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13372:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13372:45:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13426:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13438:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13449:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13434:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13434:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13426:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13199:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13213:4:8",
														"type": ""
													}
												],
												"src": "13048:411:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13638:177:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13655:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13666:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13648:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13648:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13648:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13689:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13700:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13685:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13685:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13705:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13678:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13678:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13678:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13728:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13739:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13724:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13724:18:8"
																	},
																	{
																		"hexValue": "736f72727920796f7520617265206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13744:29:8",
																		"type": "",
																		"value": "sorry you are not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13717:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13717:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13717:57:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13783:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13795:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13806:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13791:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13791:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13783:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9eaf0b75917dcc039b01243b842825d0c0514169d0bbc47abccfa944b0f9514__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13615:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13629:4:8",
														"type": ""
													}
												],
												"src": "13464:351:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13994:165:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14011:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14022:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14004:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14004:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14004:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14045:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14056:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14041:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14041:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14061:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14034:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14034:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14034:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14084:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14095:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14080:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14080:18:8"
																	},
																	{
																		"hexValue": "4e6f7420416c6c6f776c6973746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14100:17:8",
																		"type": "",
																		"value": "Not Allowlisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14073:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14073:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14073:45:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14127:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14139:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14150:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14135:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14135:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14127:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bcbf221e1d785dfc11083f52adc69389d8ebd7c45bac276ecfbd15edf753070b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13971:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13985:4:8",
														"type": ""
													}
												],
												"src": "13820:339:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14338:173:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14355:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14366:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14348:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14348:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14348:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14389:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14400:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14385:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14385:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14405:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14378:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14378:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14378:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14428:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14439:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14424:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14424:18:8"
																	},
																	{
																		"hexValue": "636c61696d206973206e6f742061637469766520796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14444:25:8",
																		"type": "",
																		"value": "claim is not active yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14417:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14417:53:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14417:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14479:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14491:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14502:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14487:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14487:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14479:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bfdd526ad66ccaa54ff804305964c61a6c99d1b79ca6b5996a01bce55e6e0ed1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14315:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14329:4:8",
														"type": ""
													}
												],
												"src": "14164:347:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14690:170:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14707:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14718:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14700:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14700:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14700:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14741:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14752:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14737:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14737:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14757:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14730:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14730:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14730:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14780:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14791:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14776:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14776:18:8"
																	},
																	{
																		"hexValue": "6f6e6c79203120617420612074696d65203a2920",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14796:22:8",
																		"type": "",
																		"value": "only 1 at a time :) "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14769:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14769:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14769:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14828:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14840:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14851:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14836:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14836:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14828:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db7e8433bc66fe3dc25da0449b83dec916181efd3b63d1a0329faf71b04911a0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14667:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14681:4:8",
														"type": ""
													}
												],
												"src": "14516:344:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14966:76:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14976:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14988:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14999:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14984:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14984:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14976:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15018:9:8"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15029:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15011:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15011:25:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15011:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14935:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14946:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14957:4:8",
														"type": ""
													}
												],
												"src": "14865:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15103:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15120:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "15123:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15113:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15113:14:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15113:14:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15136:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15154:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15157:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "15144:9:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15144:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15136:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "15086:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "15094:4:8",
														"type": ""
													}
												],
												"src": "15047:121:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15221:80:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15248:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15250:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15250:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15250:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15237:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15244:1:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15240:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15240:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15234:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15234:13:8"
															},
															"nodeType": "YulIf",
															"src": "15231:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15279:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15290:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15293:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15286:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15286:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15279:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15204:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15207:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15213:3:8",
														"type": ""
													}
												],
												"src": "15173:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15352:74:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15375:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15377:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15377:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15377:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15372:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15365:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15365:9:8"
															},
															"nodeType": "YulIf",
															"src": "15362:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15406:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15415:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15418:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15411:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15411:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15406:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15337:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15340:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15346:1:8",
														"type": ""
													}
												],
												"src": "15306:120:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15483:116:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15542:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15544:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15544:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15544:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15514:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15507:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15507:9:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "15500:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15500:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15522:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15533:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "15529:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15529:6:8"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15537:1:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "15525:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15525:14:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15519:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15519:21:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15496:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15496:45:8"
															},
															"nodeType": "YulIf",
															"src": "15493:71:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15573:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15588:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15591:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "15584:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15584:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "15573:7:8"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15462:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15465:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "15471:7:8",
														"type": ""
													}
												],
												"src": "15431:168:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15653:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15675:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15677:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15677:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15677:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15669:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15672:1:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15666:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15666:8:8"
															},
															"nodeType": "YulIf",
															"src": "15663:34:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15706:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15718:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15721:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15714:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15714:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "15706:4:8"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15635:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15638:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "15644:4:8",
														"type": ""
													}
												],
												"src": "15604:125:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15787:205:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15797:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15806:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "15801:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15866:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15891:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15896:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15887:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15887:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "15910:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15915:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15906:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15906:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15900:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15900:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15880:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15880:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15880:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15827:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15830:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15824:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15824:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15838:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15840:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15849:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15852:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15845:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15845:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15840:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15820:3:8",
																"statements": []
															},
															"src": "15816:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15955:31:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15968:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "15973:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15964:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15964:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15982:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15957:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15957:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15957:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15944:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15947:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15941:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15941:13:8"
															},
															"nodeType": "YulIf",
															"src": "15938:48:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15765:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15770:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15775:6:8",
														"type": ""
													}
												],
												"src": "15734:258:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16052:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16062:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16076:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16079:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "16072:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16072:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "16062:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16093:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16123:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16129:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16119:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16119:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "16097:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16170:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16172:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "16186:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16194:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "16182:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16182:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16172:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "16150:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16143:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16143:26:8"
															},
															"nodeType": "YulIf",
															"src": "16140:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16260:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16281:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16288:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16293:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "16284:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16284:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16274:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16274:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16274:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16325:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16328:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16318:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16318:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16318:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16353:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16356:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16346:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16346:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16346:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "16216:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16239:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16247:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "16236:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16236:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16213:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16213:38:8"
															},
															"nodeType": "YulIf",
															"src": "16210:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "16032:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16041:6:8",
														"type": ""
													}
												],
												"src": "15997:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16429:88:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16460:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16462:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16462:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16462:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16445:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16456:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "16452:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16452:6:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16442:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16442:17:8"
															},
															"nodeType": "YulIf",
															"src": "16439:43:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16491:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16502:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16509:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16498:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16498:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16491:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16411:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16421:3:8",
														"type": ""
													}
												],
												"src": "16382:135:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16560:74:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16583:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "16585:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16585:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16585:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16580:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16573:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16573:9:8"
															},
															"nodeType": "YulIf",
															"src": "16570:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16614:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16623:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16626:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "16619:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16619:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "16614:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16545:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16548:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "16554:1:8",
														"type": ""
													}
												],
												"src": "16522:112:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16671:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16688:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16695:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16700:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16691:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16691:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16681:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16681:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16681:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16728:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16731:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16721:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16721:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16721:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16752:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16755:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16745:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16745:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16745:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16639:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16803:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16820:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16827:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16832:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16823:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16823:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16813:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16813:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16813:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16860:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16863:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16853:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16853:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16853:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16884:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16887:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16877:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16877:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16877:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "16771:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16935:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16952:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16959:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16964:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16955:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16955:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16945:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16945:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16945:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16992:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16995:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16985:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16985:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16985:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17016:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17019:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17009:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17009:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17009:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "16903:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17067:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17084:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17091:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17096:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17087:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17087:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17077:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17077:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17077:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17124:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17127:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17117:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17117:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17117:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17148:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17151:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17141:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17141:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17141:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "17035:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17211:87:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17276:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17285:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17288:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17278:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17278:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17278:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17234:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17245:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17256:3:8",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17261:10:8",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "17252:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17252:20:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "17241:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17241:32:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17231:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17231:43:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17224:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17224:51:8"
															},
															"nodeType": "YulIf",
															"src": "17221:71:8"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17200:5:8",
														"type": ""
													}
												],
												"src": "17167:131:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function abi_decode_tuple_t_boolt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_string_storage__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let length := mload(value0)\n        let _1 := 0x20\n        copy_memory_to_memory(add(value0, _1), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, _1), end_1, length_1)\n        let end_2 := add(end_1, length_1)\n        let ret := 0\n        let slotValue := sload(value2)\n        let length_2 := ret\n        let _2 := 1\n        length_2 := shr(_2, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _2)\n        if iszero(outOfPlaceEncoding)\n        {\n            length_2 := and(length_2, 0x7f)\n        }\n        if eq(outOfPlaceEncoding, lt(length_2, _1))\n        {\n            mstore(ret, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(ret, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(end_2, and(slotValue, not(255)))\n            ret := add(end_2, length_2)\n        }\n        case 1 {\n            let dataPos := array_dataslot_string_storage(value2)\n            let i := 0\n            for { } lt(i, length_2) { i := add(i, _1) }\n            {\n                mstore(add(end_2, i), sload(dataPos))\n                dataPos := add(dataPos, _2)\n            }\n            ret := add(end_2, length_2)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_09adf7b4d6ad9955b47a524067a9b8a92ca96a8c9357701986f8328e2c73c833__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"already claimed!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2a8b16c5698f793fadcf69c1a4b70bc053d8668181e11d673c774abfb93d1253__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Cost doesn't match\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_48fda742698573100e179ae1b13bb17b7308f3fb873a40e607485d8ba281db03__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 63)\n        mstore(add(headStart, 64), \"must mint at least 1 nft, 0 is n\")\n        mstore(add(headStart, 96), \"ot allowed. Transmission Ending\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_59d04762fffc15004f9c80d7b6292c6e0fd9d298a8f76aac81112340e7ec504a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 95)\n        mstore(add(headStart, 64), \"WOAH hold up the mint is not yet\")\n        mstore(add(headStart, 96), \" live, a little too early there.\")\n        mstore(add(headStart, 128), \".. or late? Transmission Ending\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_81850a1f8053c5838ebf588fb7b236cacc8d1dcf23a77ab25e4a5372efacbd71__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"This set of shirts have been min\")\n        mstore(add(headStart, 96), \"ted already, sorry.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_97431681bf783971e6935af241e6bf6a0d8509ed0533483cd521a055744277a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"looks like we are popular max su\")\n        mstore(add(headStart, 96), \"pply has been reached\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b9eaf0b75917dcc039b01243b842825d0c0514169d0bbc47abccfa944b0f9514__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"sorry you are not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bcbf221e1d785dfc11083f52adc69389d8ebd7c45bac276ecfbd15edf753070b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Not Allowlisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bfdd526ad66ccaa54ff804305964c61a6c99d1b79ca6b5996a01bce55e6e0ed1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"claim is not active yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_db7e8433bc66fe3dc25da0449b83dec916181efd3b63d1a0329faf71b04911a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"only 1 at a time :) \")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106102675760003560e01c8063674c02aa11610144578063b3807b1d116100b6578063c87b56dd1161007a578063c87b56dd1461077b578063ca8a7d5e1461079b578063d5abeb01146107c8578063da3ef23f146107de578063e985e9c5146107fe578063f2fde38b1461084757600080fd5b8063b3807b1d146106e0578063b88d4fde146106f6578063bf705b1c14610716578063c4d2e8d614610746578063c66828621461076657600080fd5b80638da5cb5b116101085780638da5cb5b1461062a57806395d89b4114610648578063a0712d681461065d578063a22cb46514610670578063a7cd52cb14610690578063a7dc7f2a146106c057600080fd5b8063674c02aa1461056557806370a082311461057f578063715018a61461059f57806374f59666146105b457806385649743146105ef57600080fd5b806318cae269116101dd57806342842e0e116101a157806342842e0e146104ab57806355f804b3146104cb5780635b9e3ccf146104eb5780635c975abb1461050b5780635f93e9e3146105255780636352211e1461054557600080fd5b806318cae269146104135780631ee506971461044057806323b872dd1461046d57806330b866271461048d5780633ccfd60b146104a357600080fd5b8063095ea7b31161022f578063095ea7b3146103565780630a70a1911461037657806313faede614610396578063142b0fbe146103ba57806317dc10c4146103da57806318160ddd146103fa57600080fd5b806301ffc9a71461026c57806302329a29146102a157806305a3b809146102c357806306fdde03146102fc578063081812fc1461031e575b600080fd5b34801561027857600080fd5b5061028c610287366004611fad565b610867565b60405190151581526020015b60405180910390f35b3480156102ad57600080fd5b506102c16102bc366004611f76565b6108b9565b005b3480156102cf57600080fd5b5061028c6102de366004611da7565b6001600160a01b031660009081526016602052604090205460ff1690565b34801561030857600080fd5b506103116108d4565b604051610298919061220d565b34801561032a57600080fd5b5061033e610339366004612061565b610966565b6040516001600160a01b039091168152602001610298565b34801561036257600080fd5b506102c1610371366004611ed7565b6109aa565b34801561038257600080fd5b506102c1610391366004611f91565b610a4a565b3480156103a257600080fd5b506103ac600d5481565b604051908152602001610298565b3480156103c657600080fd5b506102c16103d5366004611f01565b610a71565b3480156103e657600080fd5b506102c16103f5366004611f76565b610af0565b34801561040657600080fd5b50600254600154036103ac565b34801561041f57600080fd5b506103ac61042e366004611da7565b60176020526000908152604090205481565b34801561044c57600080fd5b506103ac61045b366004612061565b60146020526000908152604090205481565b34801561047957600080fd5b506102c1610488366004611df5565b610b0b565b34801561049957600080fd5b506103ac600f5481565b6102c1610c9c565b3480156104b757600080fd5b506102c16104c6366004611df5565b610ce1565b3480156104d757600080fd5b506102c16104e6366004611fe7565b610cfc565b3480156104f757600080fd5b506102c1610506366004611f01565b610d1b565b34801561051757600080fd5b5060115461028c9060ff1681565b34801561053157600080fd5b506102c161054036600461201c565b610d95565b34801561055157600080fd5b5061033e610560366004612061565b610dbc565b34801561057157600080fd5b5060155461028c9060ff1681565b34801561058b57600080fd5b506103ac61059a366004611da7565b610dc7565b3480156105ab57600080fd5b506102c1610e16565b3480156105c057600080fd5b5061028c6105cf36600461207a565b601360209081526000928352604080842090915290825290205460ff1681565b3480156105fb57600080fd5b5061028c61060a36600461207a565b600091825260136020908152604080842092845291905290205460ff1690565b34801561063657600080fd5b506000546001600160a01b031661033e565b34801561065457600080fd5b50610311610e2a565b6102c161066b366004612061565b610e39565b34801561067c57600080fd5b506102c161068b366004611ead565b6111f2565b34801561069c57600080fd5b5061028c6106ab366004611da7565b60166020526000908152604090205460ff1681565b3480156106cc57600080fd5b506102c16106db36600461207a565b61125e565b3480156106ec57600080fd5b506103ac60105481565b34801561070257600080fd5b506102c1610711366004611e31565b6113ab565b34801561072257600080fd5b5061028c610731366004612061565b60126020526000908152604090205460ff1681565b34801561075257600080fd5b506102c1610761366004612061565b6113f5565b34801561077257600080fd5b50610311611402565b34801561078757600080fd5b50610311610796366004612061565b611490565b3480156107a757600080fd5b506107bb6107b6366004611da7565b611585565b60405161029891906121c9565b3480156107d457600080fd5b506103ac600e5481565b3480156107ea57600080fd5b506102c16107f9366004611fe7565b61165d565b34801561080a57600080fd5b5061028c610819366004611dc2565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205460ff1690565b34801561085357600080fd5b506102c1610862366004611da7565b611678565b60006301ffc9a760e01b6001600160e01b03198316148061089857506380ac58cd60e01b6001600160e01b03198316145b806108b35750635b5e139f60e01b6001600160e01b03198316145b92915050565b6108c16116ee565b6011805460ff1916911515919091179055565b6060600380546108e3906122ae565b80601f016020809104026020016040519081016040528092919081815260200182805461090f906122ae565b801561095c5780601f106109315761010080835404028352916020019161095c565b820191906000526020600020905b81548152906001019060200180831161093f57829003601f168201915b5050505050905090565b600061097182611748565b61098e576040516333d1c03960e21b815260040160405180910390fd5b506000908152600760205260409020546001600160a01b031690565b60006109b582610dbc565b9050336001600160a01b038216146109ee576109d18133610819565b6109ee576040516367d9dca160e11b815260040160405180910390fd5b60008281526007602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b610a526116ee565b6000908152601260205260409020805460ff1916911515919091179055565b610a796116ee565b60005b81811015610aeb57600060166000858585818110610a9c57610a9c61233e565b9050602002016020810190610ab19190611da7565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905580610ae3816122e3565b915050610a7c565b505050565b610af86116ee565b6015805460ff1916911515919091179055565b6000610b1682611770565b9050836001600160a01b0316816001600160a01b031614610b495760405162a1148160e81b815260040160405180910390fd5b60008281526007602052604090208054338082146001600160a01b03881690911417610b9657610b798633610819565b610b9657604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038516610bbd57604051633a954ecd60e21b815260040160405180910390fd5b8015610bc857600082555b6001600160a01b038681166000908152600660205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260056020526040902055600160e11b8316610c535760018401600081815260056020526040902054610c51576001548114610c515760008181526005602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b610ca46116ee565b600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610cde573d6000803e3d6000fd5b50565b610aeb838383604051806020016040528060008152506113ab565b610d046116ee565b8051610d1790600a906020840190611c4c565b5050565b610d236116ee565b60005b81811015610aeb57600160166000858585818110610d4657610d4661233e565b9050602002016020810190610d5b9190611da7565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905580610d8d816122e3565b915050610d26565b610d9d6116ee565b6000818152600b602090815260409091208351610aeb92850190611c4c565b60006108b382611770565b60006001600160a01b038216610df0576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526006602052604090205467ffffffffffffffff1690565b610e1e6116ee565b610e2860006117d8565b565b6060600480546108e3906122ae565b6000610e486002546001540390565b60115490915060ff1615610eef5760405162461bcd60e51b815260206004820152605f60248201527f574f414820686f6c6420757020746865206d696e74206973206e6f742079657460448201527f206c6976652c2061206c6974746c6520746f6f206561726c792074686572652e60648201527f2e2e206f72206c6174653f205472616e736d697373696f6e20456e64696e6700608482015260a4015b60405180910390fd5b60008211610f655760405162461bcd60e51b815260206004820152603f60248201527f6d757374206d696e74206174206c656173742031206e66742c2030206973206e60448201527f6f7420616c6c6f7765642e205472616e736d697373696f6e20456e64696e67006064820152608401610ee6565b600f54610f728383612220565b1115610fdc5760405162461bcd60e51b815260206004820152603360248201527f5468697320736574206f66207368697274732068617665206265656e206d696e6044820152723a32b21030b63932b0b23c961039b7b9393c9760691b6064820152608401610ee6565b600e54610fe98383612220565b11156110555760405162461bcd60e51b815260206004820152603560248201527f6c6f6f6b73206c696b652077652061726520706f70756c6172206d61782073756044820152741c1c1b1e481a185cc81899595b881c995858da1959605a1b6064820152608401610ee6565b6000546001600160a01b031633146111c05760018211156110af5760405162461bcd60e51b8152602060048201526014602482015273037b7363c90189030ba1030903a34b6b2901d14960651b6044820152606401610ee6565b60155460ff1615156001141561116e573360009081526016602052604090205460ff166111105760405162461bcd60e51b815260206004820152600f60248201526e139bdd08105b1b1bdddb1a5cdd1959608a1b6044820152606401610ee6565b3360009081526017602052604090205460105461112d8483612220565b111561116c5760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e481b5a5b9d195960921b6044820152606401610ee6565b505b81600d5461117c919061224c565b3410156111c05760405162461bcd60e51b8152602060048201526012602482015271086dee6e840c8decae6dc4ee840dac2e8c6d60731b6044820152606401610ee6565b6111ca3383611828565b33600090815260176020526040812080548492906111e9908490612220565b90915550505050565b3360008181526008602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b3361126883610dbc565b6001600160a01b0316146112be5760405162461bcd60e51b815260206004820152601b60248201527f736f72727920796f7520617265206e6f7420746865206f776e657200000000006044820152606401610ee6565b60008181526012602052604090205460ff1661131c5760405162461bcd60e51b815260206004820152601760248201527f636c61696d206973206e6f7420616374697665207965740000000000000000006044820152606401610ee6565b600082815260136020908152604080832084845290915290205460ff16156113795760405162461bcd60e51b815260206004820152601060248201526f616c726561647920636c61696d65642160801b6044820152606401610ee6565b60008281526013602090815260408083208484528252808320805460ff19166001179055938252601490529190912055565b6113b6848484610b0b565b6001600160a01b0383163b156113ef576113d284848484611842565b6113ef576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6113fd6116ee565b600f55565b600c805461140f906122ae565b80601f016020809104026020016040519081016040528092919081815260200182805461143b906122ae565b80156114885780601f1061145d57610100808354040283529160200191611488565b820191906000526020600020905b81548152906001019060200180831161146b57829003601f168201915b505050505081565b606061149b82611748565b6114ff5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610ee6565b600082815260146020526040902054801561157557600061151f82611939565b9050600081511161153f576040518060200160405280600081525061156d565b80611549856119db565b600c60405160200161155d939291906120c8565b6040516020818303038152906040525b949350505050565b600061151f611ad9565b50919050565b606060006115966002546001540390565b905060006115a384610dc7565b67ffffffffffffffff8111156115bb576115bb612354565b6040519080825280602002602001820160405280156115e4578160200160208202803683370190505b5090506000805b8381101561165357856001600160a01b031661160682610dbc565b6001600160a01b0316141561164157808383815181106116285761162861233e565b60209081029190910101528161163d816122e3565b9250505b8061164b816122e3565b9150506115eb565b5090949350505050565b6116656116ee565b8051610d1790600c906020840190611c4c565b6116806116ee565b6001600160a01b0381166116e55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610ee6565b610cde816117d8565b6000546001600160a01b03163314610e285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610ee6565b6000600154821080156108b3575050600090815260056020526040902054600160e01b161590565b6000816001548110156117bf57600081815260056020526040902054600160e01b81166117bd575b806117b6575060001901600081815260056020526040902054611798565b9392505050565b505b604051636f96cda160e11b815260040160405180910390fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610d17828260405180602001604052806000815250611ae8565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061187790339089908890889060040161218c565b602060405180830381600087803b15801561189157600080fd5b505af19250505080156118c1575060408051601f3d908101601f191682019092526118be91810190611fca565b60015b61191c573d8080156118ef576040519150601f19603f3d011682016040523d82523d6000602084013e6118f4565b606091505b508051611914576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b6000818152600b60205260409020805460609190611956906122ae565b80601f0160208091040260200160405190810160405280929190818152602001828054611982906122ae565b80156119cf5780601f106119a4576101008083540402835291602001916119cf565b820191906000526020600020905b8154815290600101906020018083116119b257829003601f168201915b50505050509050919050565b6060816119ff5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a295780611a13816122e3565b9150611a229050600a83612238565b9150611a03565b60008167ffffffffffffffff811115611a4457611a44612354565b6040519080825280601f01601f191660200182016040528015611a6e576020820181803683370190505b5090505b841561156d57611a8360018361226b565b9150611a90600a866122fe565b611a9b906030612220565b60f81b818381518110611ab057611ab061233e565b60200101906001600160f81b031916908160001a905350611ad2600a86612238565b9450611a72565b6060600a80546108e3906122ae565b611af28383611b55565b6001600160a01b0383163b15610aeb576001548281035b611b1c6000868380600101945086611842565b611b39576040516368d2bf6b60e11b815260040160405180910390fd5b818110611b09578160015414611b4e57600080fd5b5050505050565b60015481611b765760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526006602090815260408083208054680100000000000000018802019055848352600590915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114611c2557808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101611bed565b5081611c4357604051622e076360e81b815260040160405180910390fd5b60015550505050565b828054611c58906122ae565b90600052602060002090601f016020900481019282611c7a5760008555611cc0565b82601f10611c9357805160ff1916838001178555611cc0565b82800160010185558215611cc0579182015b82811115611cc0578251825591602001919060010190611ca5565b50611ccc929150611cd0565b5090565b5b80821115611ccc5760008155600101611cd1565b600067ffffffffffffffff80841115611d0057611d00612354565b604051601f8501601f19908116603f01168101908282118183101715611d2857611d28612354565b81604052809350858152868686011115611d4157600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b0381168114611d7257600080fd5b919050565b80358015158114611d7257600080fd5b600082601f830112611d9857600080fd5b6117b683833560208501611ce5565b600060208284031215611db957600080fd5b6117b682611d5b565b60008060408385031215611dd557600080fd5b611dde83611d5b565b9150611dec60208401611d5b565b90509250929050565b600080600060608486031215611e0a57600080fd5b611e1384611d5b565b9250611e2160208501611d5b565b9150604084013590509250925092565b60008060008060808587031215611e4757600080fd5b611e5085611d5b565b9350611e5e60208601611d5b565b925060408501359150606085013567ffffffffffffffff811115611e8157600080fd5b8501601f81018713611e9257600080fd5b611ea187823560208401611ce5565b91505092959194509250565b60008060408385031215611ec057600080fd5b611ec983611d5b565b9150611dec60208401611d77565b60008060408385031215611eea57600080fd5b611ef383611d5b565b946020939093013593505050565b60008060208385031215611f1457600080fd5b823567ffffffffffffffff80821115611f2c57600080fd5b818501915085601f830112611f4057600080fd5b813581811115611f4f57600080fd5b8660208260051b8501011115611f6457600080fd5b60209290920196919550909350505050565b600060208284031215611f8857600080fd5b6117b682611d77565b60008060408385031215611fa457600080fd5b611ef383611d77565b600060208284031215611fbf57600080fd5b81356117b68161236a565b600060208284031215611fdc57600080fd5b81516117b68161236a565b600060208284031215611ff957600080fd5b813567ffffffffffffffff81111561201057600080fd5b61156d84828501611d87565b6000806040838503121561202f57600080fd5b823567ffffffffffffffff81111561204657600080fd5b61205285828601611d87565b95602094909401359450505050565b60006020828403121561207357600080fd5b5035919050565b6000806040838503121561208d57600080fd5b50508035926020909101359150565b600081518084526120b4816020860160208601612282565b601f01601f19169290920160200192915050565b6000845160206120db8285838a01612282565b8551918401916120ee8184848a01612282565b8554920191600090600181811c908083168061210b57607f831692505b85831081141561212957634e487b7160e01b85526022600452602485fd5b80801561213d576001811461214e5761217b565b60ff1985168852838801955061217b565b60008b81526020902060005b858110156121735781548a82015290840190880161215a565b505083880195505b50939b9a5050505050505050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906121bf9083018461209c565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612201578351835292840192918401916001016121e5565b50909695505050505050565b6020815260006117b6602083018461209c565b6000821982111561223357612233612312565b500190565b60008261224757612247612328565b500490565b600081600019048311821515161561226657612266612312565b500290565b60008282101561227d5761227d612312565b500390565b60005b8381101561229d578181015183820152602001612285565b838111156113ef5750506000910152565b600181811c908216806122c257607f821691505b6020821081141561157f57634e487b7160e01b600052602260045260246000fd5b60006000198214156122f7576122f7612312565b5060010190565b60008261230d5761230d612328565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b031981168114610cde57600080fdfea26469706673582212208887703a58a4b9a63cc4503322bcd6e449094bec938356bc07393ef092d6bdeb64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x267 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x674C02AA GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xB3807B1D GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x77B JUMPI DUP1 PUSH4 0xCA8A7D5E EQ PUSH2 0x79B JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x7C8 JUMPI DUP1 PUSH4 0xDA3EF23F EQ PUSH2 0x7DE JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x7FE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x847 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3807B1D EQ PUSH2 0x6E0 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x6F6 JUMPI DUP1 PUSH4 0xBF705B1C EQ PUSH2 0x716 JUMPI DUP1 PUSH4 0xC4D2E8D6 EQ PUSH2 0x746 JUMPI DUP1 PUSH4 0xC6682862 EQ PUSH2 0x766 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x670 JUMPI DUP1 PUSH4 0xA7CD52CB EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0xA7DC7F2A EQ PUSH2 0x6C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x674C02AA EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0x74F59666 EQ PUSH2 0x5B4 JUMPI DUP1 PUSH4 0x85649743 EQ PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18CAE269 GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x5B9E3CCF EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x5F93E9E3 EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18CAE269 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0x1EE50697 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x30B86627 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x4A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x22F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0xA70A191 EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x13FAEDE6 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x142B0FBE EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x17DC10C4 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x2329A29 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x5A3B809 EQ PUSH2 0x2C3 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x31E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FAD JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0x8B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33E PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ED7 JUMP JUMPDEST PUSH2 0x9AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x391 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F91 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x298 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F01 JUMP JUMPDEST PUSH2 0xA71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F76 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB PUSH2 0x3AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x45B CALLDATASIZE PUSH1 0x4 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF5 JUMP JUMPDEST PUSH2 0xB0B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C1 PUSH2 0xC9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x4C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF5 JUMP JUMPDEST PUSH2 0xCE1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FE7 JUMP JUMPDEST PUSH2 0xCFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x506 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F01 JUMP JUMPDEST PUSH2 0xD1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x517 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x28C SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x540 CALLDATASIZE PUSH1 0x4 PUSH2 0x201C JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33E PUSH2 0x560 CALLDATASIZE PUSH1 0x4 PUSH2 0x2061 JUMP JUMPDEST PUSH2 0xDBC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x15 SLOAD PUSH2 0x28C SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH2 0x59A CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA7 JUMP JUMPDEST PUSH2 0xDC7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0xE16 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x5CF CALLDATASIZE PUSH1 0x4 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x60A CALLDATASIZE PUSH1 0x4 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x33E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0xE2A JUMP JUMPDEST PUSH2 0x2C1 PUSH2 0x66B CALLDATASIZE PUSH1 0x4 PUSH2 0x2061 JUMP JUMPDEST PUSH2 0xE39 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x68B CALLDATASIZE PUSH1 0x4 PUSH2 0x1EAD JUMP JUMPDEST PUSH2 0x11F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x6AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x6DB CALLDATASIZE PUSH1 0x4 PUSH2 0x207A JUMP JUMPDEST PUSH2 0x125E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x711 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E31 JUMP JUMPDEST PUSH2 0x13AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x731 CALLDATASIZE PUSH1 0x4 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x761 CALLDATASIZE PUSH1 0x4 PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x13F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x1402 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH2 0x796 CALLDATASIZE PUSH1 0x4 PUSH2 0x2061 JUMP JUMPDEST PUSH2 0x1490 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7BB PUSH2 0x7B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA7 JUMP JUMPDEST PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x21C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AC PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x7F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FE7 JUMP JUMPDEST PUSH2 0x165D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x819 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1 PUSH2 0x862 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA7 JUMP JUMPDEST PUSH2 0x1678 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ DUP1 PUSH2 0x898 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x8B3 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C1 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x8E3 SWAP1 PUSH2 0x22AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x90F SWAP1 PUSH2 0x22AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x95C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x931 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x95C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x93F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x971 DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH2 0x98E JUMPI PUSH1 0x40 MLOAD PUSH4 0x33D1C039 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B5 DUP3 PUSH2 0xDBC JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x9EE JUMPI PUSH2 0x9D1 DUP2 CALLER PUSH2 0x819 JUMP JUMPDEST PUSH2 0x9EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xA52 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA79 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAEB JUMPI PUSH1 0x0 PUSH1 0x16 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xA9C JUMPI PUSH2 0xA9C PUSH2 0x233E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xAB1 SWAP2 SWAP1 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0xAE3 DUP2 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAF8 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x15 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB16 DUP3 PUSH2 0x1770 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB49 JUMPI PUSH1 0x40 MLOAD PUSH3 0xA11481 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0xB96 JUMPI PUSH2 0xB79 DUP7 CALLER PUSH2 0x819 JUMP JUMPDEST PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CE44B5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xBBD JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A954ECD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xBC8 JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP4 AND PUSH2 0xC53 JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC51 JUMPI PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xC51 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCA4 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xAEB DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x13AB JUMP JUMPDEST PUSH2 0xD04 PUSH2 0x16EE JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD17 SWAP1 PUSH1 0xA SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1C4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD23 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAEB JUMPI PUSH1 0x1 PUSH1 0x16 PUSH1 0x0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xD46 JUMPI PUSH2 0xD46 PUSH2 0x233E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0xD8D DUP2 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD26 JUMP JUMPDEST PUSH2 0xD9D PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0xAEB SWAP3 DUP6 ADD SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B3 DUP3 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDF0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23D3AD81 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0xE1E PUSH2 0x16EE JUMP JUMPDEST PUSH2 0xE28 PUSH1 0x0 PUSH2 0x17D8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8E3 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE48 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0xEEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x574F414820686F6C6420757020746865206D696E74206973206E6F7420796574 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206C6976652C2061206C6974746C6520746F6F206561726C792074686572652E PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x2E2E206F72206C6174653F205472616E736D697373696F6E20456E64696E6700 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xF65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D757374206D696E74206174206C656173742031206E66742C2030206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F7420616C6C6F7765642E205472616E736D697373696F6E20456E64696E6700 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0xF72 DUP4 DUP4 PUSH2 0x2220 JUMP JUMPDEST GT ISZERO PUSH2 0xFDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468697320736574206F66207368697274732068617665206265656E206D696E PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x3A32B21030B63932B0B23C961039B7B9393C97 PUSH1 0x69 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0xFE9 DUP4 DUP4 PUSH2 0x2220 JUMP JUMPDEST GT ISZERO PUSH2 0x1055 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C6F6F6B73206C696B652077652061726520706F70756C6172206D6178207375 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x1C1C1B1E481A185CC81899595B881C995858DA1959 PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11C0 JUMPI PUSH1 0x1 DUP3 GT ISZERO PUSH2 0x10AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x37B7363C90189030BA1030903A34B6B2901D149 PUSH1 0x65 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x116E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1110 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD08105B1B1BDDDB1A5CDD1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x10 SLOAD PUSH2 0x112D DUP5 DUP4 PUSH2 0x2220 JUMP JUMPDEST GT ISZERO PUSH2 0x116C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x105B1C9958591E481B5A5B9D1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST POP JUMPDEST DUP2 PUSH1 0xD SLOAD PUSH2 0x117C SWAP2 SWAP1 PUSH2 0x224C JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0x11C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x86DEE6E840C8DECAE6DC4EE840DAC2E8C6D PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH2 0x11CA CALLER DUP4 PUSH2 0x1828 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x11E9 SWAP1 DUP5 SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH2 0x1268 DUP4 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x12BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x736F72727920796F7520617265206E6F7420746865206F776E65720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x131C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636C61696D206973206E6F742061637469766520796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1379 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x616C726561647920636C61696D656421 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x14 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x13B6 DUP5 DUP5 DUP5 PUSH2 0xB0B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x13EF JUMPI PUSH2 0x13D2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x13EF JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x13FD PUSH2 0x16EE JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0x140F SWAP1 PUSH2 0x22AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x143B SWAP1 PUSH2 0x22AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1488 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x145D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1488 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x146B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x149B DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH2 0x14FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1575 JUMPI PUSH1 0x0 PUSH2 0x151F DUP3 PUSH2 0x1939 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x153F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x156D JUMP JUMPDEST DUP1 PUSH2 0x1549 DUP6 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0xC PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x155D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x151F PUSH2 0x1AD9 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1596 PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD SUB SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15A3 DUP5 PUSH2 0xDC7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15BB JUMPI PUSH2 0x15BB PUSH2 0x2354 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15E4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1653 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1606 DUP3 PUSH2 0xDBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1641 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1628 JUMPI PUSH2 0x1628 PUSH2 0x233E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP2 PUSH2 0x163D DUP2 PUSH2 0x22E3 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x164B DUP2 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15EB JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1665 PUSH2 0x16EE JUMP JUMPDEST DUP1 MLOAD PUSH2 0xD17 SWAP1 PUSH1 0xC SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x1680 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH2 0xCDE DUP2 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xEE6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x8B3 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x17BF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH2 0x17BD JUMPI JUMPDEST DUP1 PUSH2 0x17B6 JUMPI POP PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1798 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xD17 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1877 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x218C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1891 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18C1 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x18BE SWAP2 DUP2 ADD SWAP1 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x191C JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x18EF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1914 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x1956 SWAP1 PUSH2 0x22AE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1982 SWAP1 PUSH2 0x22AE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x19FF JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1A29 JUMPI DUP1 PUSH2 0x1A13 DUP2 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A22 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2238 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A03 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A44 JUMPI PUSH2 0x1A44 PUSH2 0x2354 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1A6E JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x156D JUMPI PUSH2 0x1A83 PUSH1 0x1 DUP4 PUSH2 0x226B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A90 PUSH1 0xA DUP7 PUSH2 0x22FE JUMP JUMPDEST PUSH2 0x1A9B SWAP1 PUSH1 0x30 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1AB0 JUMPI PUSH2 0x1AB0 PUSH2 0x233E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1AD2 PUSH1 0xA DUP7 PUSH2 0x2238 JUMP JUMPDEST SWAP5 POP PUSH2 0x1A72 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD PUSH2 0x8E3 SWAP1 PUSH2 0x22AE JUMP JUMPDEST PUSH2 0x1AF2 DUP4 DUP4 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xAEB JUMPI PUSH1 0x1 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0x1B1C PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0x1B39 JUMPI PUSH1 0x40 MLOAD PUSH4 0x68D2BF6B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x1B09 JUMPI DUP2 PUSH1 0x1 SLOAD EQ PUSH2 0x1B4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 PUSH2 0x1B76 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB562E8DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP9 MUL ADD SWAP1 SSTORE DUP5 DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 DUP6 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 SSTORE DUP3 DUP5 ADD SWAP1 DUP4 SWAP1 DUP4 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 PUSH1 0x1 DUP4 ADD JUMPDEST DUP2 DUP2 EQ PUSH2 0x1C25 JUMPI DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 ADD PUSH2 0x1BED JUMP JUMPDEST POP DUP2 PUSH2 0x1C43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x2E0763 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SSTORE POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1C58 SWAP1 PUSH2 0x22AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1C7A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1CC0 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1C93 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1CC0 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1CC0 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1CC0 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1CA5 JUMP JUMPDEST POP PUSH2 0x1CCC SWAP3 SWAP2 POP PUSH2 0x1CD0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1CCC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1CD1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1D00 JUMPI PUSH2 0x1D00 PUSH2 0x2354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1D28 JUMPI PUSH2 0x1D28 PUSH2 0x2354 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1D41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1D72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B6 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B6 DUP3 PUSH2 0x1D5B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DDE DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x1DEC PUSH1 0x20 DUP5 ADD PUSH2 0x1D5B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E13 DUP5 PUSH2 0x1D5B JUMP JUMPDEST SWAP3 POP PUSH2 0x1E21 PUSH1 0x20 DUP6 ADD PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E50 DUP6 PUSH2 0x1D5B JUMP JUMPDEST SWAP4 POP PUSH2 0x1E5E PUSH1 0x20 DUP7 ADD PUSH2 0x1D5B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1E92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EA1 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1CE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EC9 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP2 POP PUSH2 0x1DEC PUSH1 0x20 DUP5 ADD PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EF3 DUP4 PUSH2 0x1D5B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1F4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1F64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B6 DUP3 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EF3 DUP4 PUSH2 0x1D77 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17B6 DUP2 PUSH2 0x236A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x17B6 DUP2 PUSH2 0x236A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2010 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156D DUP5 DUP3 DUP6 ADD PUSH2 0x1D87 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x202F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2046 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2052 DUP6 DUP3 DUP7 ADD PUSH2 0x1D87 JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2073 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x208D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x20B4 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2282 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 PUSH2 0x20DB DUP3 DUP6 DUP4 DUP11 ADD PUSH2 0x2282 JUMP JUMPDEST DUP6 MLOAD SWAP2 DUP5 ADD SWAP2 PUSH2 0x20EE DUP2 DUP5 DUP5 DUP11 ADD PUSH2 0x2282 JUMP JUMPDEST DUP6 SLOAD SWAP3 ADD SWAP2 PUSH1 0x0 SWAP1 PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP1 DUP4 AND DUP1 PUSH2 0x210B JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST DUP6 DUP4 LT DUP2 EQ ISZERO PUSH2 0x2129 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP1 DUP1 ISZERO PUSH2 0x213D JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x214E JUMPI PUSH2 0x217B JUMP JUMPDEST PUSH1 0xFF NOT DUP6 AND DUP9 MSTORE DUP4 DUP9 ADD SWAP6 POP PUSH2 0x217B JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2173 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP9 ADD PUSH2 0x215A JUMP JUMPDEST POP POP DUP4 DUP9 ADD SWAP6 POP JUMPDEST POP SWAP4 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x21BF SWAP1 DUP4 ADD DUP5 PUSH2 0x209C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2201 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x21E5 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x17B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x209C JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2233 JUMPI PUSH2 0x2233 PUSH2 0x2312 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2247 JUMPI PUSH2 0x2247 PUSH2 0x2328 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2266 JUMPI PUSH2 0x2266 PUSH2 0x2312 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x227D JUMPI PUSH2 0x227D PUSH2 0x2312 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x229D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2285 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x13EF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x22C2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x157F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x22F7 JUMPI PUSH2 0x22F7 PUSH2 0x2312 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x230D JUMPI PUSH2 0x230D PUSH2 0x2328 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCDE JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 DUP8 PUSH17 0x3A58A4B9A63CC4503322BCD6E449094BEC SWAP4 DUP4 JUMP 0xBC SMOD CODECOPY RETURNDATACOPY CREATE SWAP3 0xD6 0xBD 0xEB PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "205:5427:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9526:639:5;;;;;;;;;;-1:-1:-1;9526:639:5;;;;;:::i;:::-;;:::i;:::-;;;9216:14:8;;9209:22;9191:41;;9179:2;9164:18;9526:639:5;;;;;;;;4488:75:7;;;;;;;;;;-1:-1:-1;4488:75:7;;;;;:::i;:::-;;:::i;:::-;;2504:101;;;;;;;;;;-1:-1:-1;2504:101:7;;;;;:::i;:::-;-1:-1:-1;;;;;2583:16:7;2563:4;2583:16;;;:9;:16;;;;;;;;;2504:101;10428:100:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16911:218::-;;;;;;;;;;-1:-1:-1;16911:218:5;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;7877:32:8;;;7859:51;;7847:2;7832:18;16911:218:5;7713:203:8;16352:400:5;;;;;;;;;;-1:-1:-1;16352:400:5;;;;;:::i;:::-;;:::i;3392:110:7:-;;;;;;;;;;-1:-1:-1;3392:110:7;;;;;:::i;:::-;;:::i;403:33::-;;;;;;;;;;;;;;;;;;;15011:25:8;;;14999:2;14984:18;403:33:7;14865:177:8;4855:190:7;;;;;;;;;;-1:-1:-1;4855:190:7;;;;;:::i;:::-;;:::i;4569:95::-;;;;;;;;;;-1:-1:-1;4569:95:7;;;;;:::i;:::-;;:::i;6179:323:5:-;;;;;;;;;;-1:-1:-1;6453:12:5;;6437:13;;:28;6179:323;;853:55:7;;;;;;;;;;-1:-1:-1;853:55:7;;;;;:::i;:::-;;;;;;;;;;;;;;707:51;;;;;;;;;;-1:-1:-1;707:51:7;;;;;:::i;:::-;;;;;;;;;;;;;;20550:2817:5;;;;;;;;;;-1:-1:-1;20550:2817:5;;;;;:::i;:::-;;:::i;475:29:7:-;;;;;;;;;;;;;;;;5519:106;;;:::i;23463:185:5:-;;;;;;;;;;-1:-1:-1;23463:185:5;;;;;:::i;:::-;;:::i;4022:98:7:-;;;;;;;;;;-1:-1:-1;4022:98:7;;;;;:::i;:::-;;:::i;4670:179::-;;;;;;;;;;-1:-1:-1;4670:179:7;;;;;:::i;:::-;;:::i;549:26::-;;;;;;;;;;-1:-1:-1;549:26:7;;;;;;;;4127:121;;;;;;;;;;-1:-1:-1;4127:121:7;;;;;:::i;:::-;;:::i;11821:152:5:-;;;;;;;;;;-1:-1:-1;11821:152:5;;;;;:::i;:::-;;:::i;767:35:7:-;;;;;;;;;;-1:-1:-1;767:35:7;;;;;;;;7363:233:5;;;;;;;;;;-1:-1:-1;7363:233:5;;;;;:::i;:::-;;:::i;1831:101:0:-;;;;;;;;;;;;;:::i;636:66:7:-;;;;;;;;;;-1:-1:-1;636:66:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;3882:134;;;;;;;;;;-1:-1:-1;3882:134:7;;;;;:::i;:::-;3956:4;3976:27;;;:18;:27;;;;;;;;:34;;;;;;;;;;;;3882:134;1201:85:0;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;10604:104:5;;;;;;;;;;;;;:::i;1358:1140:7:-;;;;;;:::i;:::-;;:::i;17469:234:5:-;;;;;;;;;;-1:-1:-1;17469:234:5;;;;;:::i;:::-;;:::i;807:41:7:-;;;;;;;;;;-1:-1:-1;807:41:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;3508:368;;;;;;;;;;-1:-1:-1;3508:368:7;;;;;:::i;:::-;;:::i;509:33::-;;;;;;;;;;;;;;;;24246:399:5;;;;;;;;;;-1:-1:-1;24246:399:5;;;;;:::i;:::-;;:::i;582:49:7:-;;;;;;;;;;-1:-1:-1;582:49:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;4382:100;;;;;;;;;;-1:-1:-1;4382:100:7;;;;;:::i;:::-;;:::i;359:37::-;;;;;;;;;;;;;:::i;2611:775::-;;;;;;;;;;-1:-1:-1;2611:775:7;;;;;:::i;:::-;;:::i;5051:461::-;;;;;;;;;;-1:-1:-1;5051:461:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;441:29::-;;;;;;;;;;;;;;;;4254:122;;;;;;;;;;-1:-1:-1;4254:122:7;;;;;:::i;:::-;;:::i;17860:164:5:-;;;;;;;;;;-1:-1:-1;17860:164:5;;;;;:::i;:::-;-1:-1:-1;;;;;17981:25:5;;;17957:4;17981:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17860:164;2081:198:0;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;9526:639:5:-;9611:4;-1:-1:-1;;;;;;;;;9935:25:5;;;;:102;;-1:-1:-1;;;;;;;;;;10012:25:5;;;9935:102;:179;;;-1:-1:-1;;;;;;;;;;10089:25:5;;;9935:179;9915:199;9526:639;-1:-1:-1;;9526:639:5:o;4488:75:7:-;1094:13:0;:11;:13::i;:::-;4542:6:7::1;:15:::0;;-1:-1:-1;;4542:15:7::1;::::0;::::1;;::::0;;;::::1;::::0;;4488:75::o;10428:100:5:-;10482:13;10515:5;10508:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10428:100;:::o;16911:218::-;16987:7;17012:16;17020:7;17012;:16::i;:::-;17007:64;;17037:34;;-1:-1:-1;;;17037:34:5;;;;;;;;;;;17007:64;-1:-1:-1;17091:24:5;;;;:15;:24;;;;;:30;-1:-1:-1;;;;;17091:30:5;;16911:218::o;16352:400::-;16433:13;16449:16;16457:7;16449;:16::i;:::-;16433:32;-1:-1:-1;40407:10:5;-1:-1:-1;;;;;16482:28:5;;;16478:175;;16530:44;16547:5;40407:10;17860:164;:::i;16530:44::-;16525:128;;16602:35;;-1:-1:-1;;;16602:35:5;;;;;;;;;;;16525:128;16665:24;;;;:15;:24;;;;;;:35;;-1:-1:-1;;;;;;16665:35:5;-1:-1:-1;;;;;16665:35:5;;;;;;;;;16716:28;;16665:24;;16716:28;;;;;;;16422:330;16352:400;;:::o;3392:110:7:-;1094:13:0;:11;:13::i;:::-;3462:25:7::1;::::0;;;:18:::1;:25;::::0;;;;:34;;-1:-1:-1;;3462:34:7::1;::::0;::::1;;::::0;;;::::1;::::0;;3392:110::o;4855:190::-;1094:13:0;:11;:13::i;:::-;4950:9:7::1;4945:95;4965:20:::0;;::::1;4945:95;;;5027:5;5001:9;:23;5011:9;;5021:1;5011:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5001:23:7::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;5001:23:7;:31;;-1:-1:-1;;5001:31:7::1;::::0;::::1;;::::0;;;::::1;::::0;;4987:3;::::1;::::0;::::1;:::i;:::-;;;;4945:95;;;;4855:190:::0;;:::o;4569:95::-;1094:13:0;:11;:13::i;:::-;4634:15:7::1;:24:::0;;-1:-1:-1;;4634:24:7::1;::::0;::::1;;::::0;;;::::1;::::0;;4569:95::o;20550:2817:5:-;20684:27;20714;20733:7;20714:18;:27::i;:::-;20684:57;;20799:4;-1:-1:-1;;;;;20758:45:5;20774:19;-1:-1:-1;;;;;20758:45:5;;20754:86;;20812:28;;-1:-1:-1;;;20812:28:5;;;;;;;;;;;20754:86;20854:27;19658:24;;;:15;:24;;;;;19886:26;;40407:10;19283:30;;;-1:-1:-1;;;;;18976:28:5;;19261:20;;;19258:56;21040:180;;21133:43;21150:4;40407:10;17860:164;:::i;21133:43::-;21128:92;;21185:35;;-1:-1:-1;;;21185:35:5;;;;;;;;;;;21128:92;-1:-1:-1;;;;;21237:16:5;;21233:52;;21262:23;;-1:-1:-1;;;21262:23:5;;;;;;;;;;;21233:52;21434:15;21431:160;;;21574:1;21553:19;21546:30;21431:160;-1:-1:-1;;;;;21971:24:5;;;;;;;:18;:24;;;;;;21969:26;;-1:-1:-1;;21969:26:5;;;22040:22;;;;;;;;;22038:24;;-1:-1:-1;22038:24:5;;;15210:11;15185:23;15181:41;15168:63;-1:-1:-1;;;15168:63:5;22333:26;;;;:17;:26;;;;;:175;-1:-1:-1;;;22628:47:5;;22624:627;;22733:1;22723:11;;22701:19;22856:30;;;:17;:30;;;;;;22852:384;;22994:13;;22979:11;:28;22975:242;;23141:30;;;;:17;:30;;;;;:52;;;22975:242;22682:569;22624:627;23298:7;23294:2;-1:-1:-1;;;;;23279:27:5;23288:4;-1:-1:-1;;;;;23279:27:5;;;;;;;;;;;20673:2694;;;20550:2817;;;:::o;5519:106:7:-;1094:13:0;:11;:13::i;:::-;1247:7;1273:6;;5571:48:7::1;::::0;-1:-1:-1;;;;;1273:6:0;;;;5597:21:7::1;5571:48:::0;::::1;;;::::0;5597:21;;5571:48;1247:7:0;5571:48:7;5597:21;1273:6:0;5571:48:7;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;5519:106::o:0;23463:185:5:-;23601:39;23618:4;23624:2;23628:7;23601:39;;;;;;;;;;;;:16;:39::i;4022:98:7:-;1094:13:0;:11;:13::i;:::-;4093:21:7;;::::1;::::0;:7:::1;::::0;:21:::1;::::0;::::1;::::0;::::1;:::i;:::-;;4022:98:::0;:::o;4670:179::-;1094:13:0;:11;:13::i;:::-;4755:9:7::1;4750:94;4770:20:::0;;::::1;4750:94;;;4832:4;4806:9;:23;4816:9;;4826:1;4816:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4806:23:7::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;4806:23:7;:30;;-1:-1:-1;;4806:30:7::1;::::0;::::1;;::::0;;;::::1;::::0;;4792:3;::::1;::::0;::::1;:::i;:::-;;;;4750:94;;4127:121:::0;1094:13:0;:11;:13::i;:::-;4212:15:7::1;::::0;;;:8:::1;:15;::::0;;;;;;;:30;;::::1;::::0;;::::1;::::0;::::1;:::i;11821:152:5:-:0;11893:7;11936:27;11955:7;11936:18;:27::i;7363:233::-;7435:7;-1:-1:-1;;;;;7459:19:5;;7455:60;;7487:28;;-1:-1:-1;;;7487:28:5;;;;;;;;;;;7455:60;-1:-1:-1;;;;;;7533:25:5;;;;;:18;:25;;;;;;1522:13;7533:55;;7363:233::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;10604:104:5:-;10660:13;10693:7;10686:14;;;;;:::i;1358:1140:7:-;1415:14;1432:13;6453:12:5;;6437:13;;:28;;6179:323;1432:13:7;1484:6;;1415:30;;-1:-1:-1;1484:6:7;;1483:7;1475:115;;;;-1:-1:-1;;;1475:115:7;;11543:2:8;1475:115:7;;;11525:21:8;11582:2;11562:18;;;11555:30;11621:34;11601:18;;;11594:62;11692:34;11672:18;;;11665:62;11764:33;11743:19;;;11736:62;11815:19;;1475:115:7;;;;;;;;;1619:1;1605:11;:15;1597:91;;;;-1:-1:-1;;;1597:91:7;;11111:2:8;1597:91:7;;;11093:21:8;11150:2;11130:18;;;11123:30;11189:34;11169:18;;;11162:62;11260:33;11240:18;;;11233:61;11311:19;;1597:91:7;10909:427:8;1597:91:7;1727:10;;1703:20;1712:11;1703:6;:20;:::i;:::-;:34;;1695:98;;;;-1:-1:-1;;;1695:98:7;;12047:2:8;1695:98:7;;;12029:21:8;12086:2;12066:18;;;12059:30;12125:34;12105:18;;;12098:62;-1:-1:-1;;;12176:18:8;;;12169:49;12235:19;;1695:98:7;11845:415:8;1695:98:7;1832:9;;1808:20;1817:11;1808:6;:20;:::i;:::-;:33;;1800:99;;;;-1:-1:-1;;;1800:99:7;;12467:2:8;1800:99:7;;;12449:21:8;12506:2;12486:18;;;12479:30;12545:34;12525:18;;;12518:62;-1:-1:-1;;;12596:18:8;;;12589:51;12657:19;;1800:99:7;12265:417:8;1800:99:7;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1918:10:7;:21;1914:482;;2007:1;1992:11;:16;;1984:49;;;;-1:-1:-1;;;1984:49:7;;14718:2:8;1984:49:7;;;14700:21:8;14757:2;14737:18;;;14730:30;-1:-1:-1;;;14776:18:8;;;14769:50;14836:18;;1984:49:7;14516:344:8;1984:49:7;2047:15;;;;:23;;:15;:23;2044:272;;;2109:10;2563:4;2583:16;;;:9;:16;;;;;;;;2087:53;;;;-1:-1:-1;;;2087:53:7;;14022:2:8;2087:53:7;;;14004:21:8;14061:2;14041:18;;;14034:30;-1:-1:-1;;;14080:18:8;;;14073:45;14135:18;;2087:53:7;13820:339:8;2087:53:7;2203:10;2155:24;2182:32;;;:20;:32;;;;;;2271:14;;2237:30;2256:11;2182:32;2237:30;:::i;:::-;:48;;2229:75;;;;-1:-1:-1;;;2229:75:7;;9669:2:8;2229:75:7;;;9651:21:8;9708:2;9688:18;;;9681:30;-1:-1:-1;;;9727:18:8;;;9720:44;9781:18;;2229:75:7;9467:338:8;2229:75:7;2072:244;2044:272;2354:11;2347:4;;:18;;;;:::i;:::-;2334:9;:31;;2326:62;;;;-1:-1:-1;;;2326:62:7;;10764:2:8;2326:62:7;;;10746:21:8;10803:2;10783:18;;;10776:30;-1:-1:-1;;;10822:18:8;;;10815:48;10880:18;;2326:62:7;10562:342:8;2326:62:7;2404:34;2414:10;2426:11;2404:9;:34::i;:::-;2466:10;2445:32;;;;:20;:32;;;;;:47;;2481:11;;2445:32;:47;;2481:11;;2445:47;:::i;:::-;;;;-1:-1:-1;;;;1358:1140:7:o;17469:234:5:-;40407:10;17564:39;;;;:18;:39;;;;;;;;-1:-1:-1;;;;;17564:49:5;;;;;;;;;;;;:60;;-1:-1:-1;;17564:60:5;;;;;;;;;;17640:55;;9191:41:8;;;17564:49:5;;40407:10;17640:55;;9164:18:8;17640:55:5;;;;;;;17469:234;;:::o;3508:368:7:-;3600:10;3580:16;3588:7;3580;:16::i;:::-;-1:-1:-1;;;;;3580:30:7;;3572:70;;;;-1:-1:-1;;;3572:70:7;;13666:2:8;3572:70:7;;;13648:21:8;13705:2;13685:18;;;13678:30;13744:29;13724:18;;;13717:57;13791:18;;3572:70:7;13464:351:8;3572:70:7;3657:25;;;;:18;:25;;;;;;;;3649:61;;;;-1:-1:-1;;;3649:61:7;;14366:2:8;3649:61:7;;;14348:21:8;14405:2;14385:18;;;14378:30;14444:25;14424:18;;;14417:53;14487:18;;3649:61:7;14164:347:8;3649:61:7;3726:27;;;;:18;:27;;;;;;;;:34;;;;;;;;;;;3725:35;3717:64;;;;-1:-1:-1;;;3717:64:7;;10012:2:8;3717:64:7;;;9994:21:8;10051:2;10031:18;;;10024:30;-1:-1:-1;;;10070:18:8;;;10063:46;10126:18;;3717:64:7;9810:340:8;3717:64:7;3788:27;;;;:18;:27;;;;;;;;:34;;;;;;;;:41;;-1:-1:-1;;3788:41:7;3825:4;3788:41;;;3836:26;;;:17;:26;;;;;;:34;3508:368::o;24246:399:5:-;24413:31;24426:4;24432:2;24436:7;24413:12;:31::i;:::-;-1:-1:-1;;;;;24459:14:5;;;:19;24455:183;;24498:56;24529:4;24535:2;24539:7;24548:5;24498:30;:56::i;:::-;24493:145;;24582:40;;-1:-1:-1;;;24582:40:5;;;;;;;;;;;24493:145;24246:399;;;;:::o;4382:100:7:-;1094:13:0;:11;:13::i;:::-;4455:10:7::1;:21:::0;4382:100::o;359:37::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2611:775::-;2709:13;2750:16;2758:7;2750;:16::i;:::-;2734:97;;;;-1:-1:-1;;;2734:97:7;;13250:2:8;2734:97:7;;;13232:21:8;13289:2;13269:18;;;13262:30;13328:34;13308:18;;;13301:62;-1:-1:-1;;;13379:18:8;;;13372:45;13434:19;;2734:97:7;13048:411:8;2734:97:7;2840:23;2866:26;;;:17;:26;;;;;;2904:22;;2901:480;;2938:29;2970;2980:18;2970:9;:29::i;:::-;2938:61;;3049:1;3023:15;3017:29;:33;:135;;;;;;;;;;;;;;;;;3086:15;3103:18;:7;:16;:18::i;:::-;3123:13;3069:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3017:135;3010:142;2611:775;-1:-1:-1;;;;2611:775:7:o;2901:480::-;3181:28;3212:10;:8;:10::i;2901:480::-;2727:659;2611:775;;;:::o;5051:461::-;5119:16;5148:21;5172:13;6453:12:5;;6437:13;;:28;;6179:323;5172:13:7;5148:37;;5196:23;5236:21;5246:10;5236:9;:21::i;:::-;5222:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5222:36:7;;5196:62;;5269:15;5304:9;5299:182;5323:13;5319:1;:17;5299:182;;;5376:10;-1:-1:-1;;;;;5362:24:7;:10;5370:1;5362:7;:10::i;:::-;-1:-1:-1;;;;;5362:24:7;;5358:112;;;5425:1;5407:6;5414:7;5407:15;;;;;;;;:::i;:::-;;;;;;;;;;:19;5445:9;;;;:::i;:::-;;;;5358:112;5338:3;;;;:::i;:::-;;;;5299:182;;;-1:-1:-1;5498:6:7;;5051:461;-1:-1:-1;;;;5051:461:7:o;4254:122::-;1094:13:0;:11;:13::i;:::-;4337:33:7;;::::1;::::0;:13:::1;::::0;:33:::1;::::0;::::1;::::0;::::1;:::i;2081:198:0:-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;10357:2:8;2161:73:0::1;::::0;::::1;10339:21:8::0;10396:2;10376:18;;;10369:30;10435:34;10415:18;;;10408:62;-1:-1:-1;;;10486:18:8;;;10479:36;10532:19;;2161:73:0::1;10155:402:8::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1359:130::-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;40407:10:5;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;12889:2:8;1414:68:0;;;12871:21:8;;;12908:18;;;12901:30;12967:34;12947:18;;;12940:62;13019:18;;1414:68:0;12687:356:8;18282:282:5;18347:4;18437:13;;18427:7;:23;18384:153;;;;-1:-1:-1;;18488:26:5;;;;:17;:26;;;;;;-1:-1:-1;;;18488:44:5;:49;;18282:282::o;12976:1275::-;13043:7;13078;13180:13;;13173:4;:20;13169:1015;;;13218:14;13235:23;;;:17;:23;;;;;;-1:-1:-1;;;13324:24:5;;13320:845;;13989:113;13996:11;13989:113;;-1:-1:-1;;;14067:6:5;14049:25;;;;:17;:25;;;;;;13989:113;;;14135:6;12976:1275;-1:-1:-1;;;12976:1275:5:o;13320:845::-;13195:989;13169:1015;14212:31;;-1:-1:-1;;;14212:31:5;;;;;;;;;;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;34152:112:5:-;34229:27;34239:2;34243:8;34229:27;;;;;;;;;;;;:9;:27::i;26729:716::-;26913:88;;-1:-1:-1;;;26913:88:5;;26892:4;;-1:-1:-1;;;;;26913:45:5;;;;;:88;;40407:10;;26980:4;;26986:7;;26995:5;;26913:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26913:88:5;;;;;;;;-1:-1:-1;;26913:88:5;;;;;;;;;;;;:::i;:::-;;;26909:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27196:13:5;;27192:235;;27242:40;;-1:-1:-1;;;27242:40:5;;;;;;;;;;;27192:235;27385:6;27379:13;27370:6;27366:2;27362:15;27355:38;26909:529;-1:-1:-1;;;;;;27072:64:5;-1:-1:-1;;;27072:64:5;;-1:-1:-1;26729:716:5;;;;;;:::o;1227:112:7:-;1318:15;;;;:8;:15;;;;;1311:22;;1289:13;;1318:15;1311:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1227:112;;;:::o;392:703:4:-;448:13;665:10;661:51;;-1:-1:-1;;691:10:4;;;;;;;;;;;;-1:-1:-1;;;691:10:4;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:4;;-1:-1:-1;837:2:4;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:4;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:4;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;966:56:4;;;;;;;;-1:-1:-1;1036:11:4;1045:2;1036:11;;:::i;:::-;;;908:150;;1119:102:7;1179:13;1208:7;1201:14;;;;;:::i;33379:689:5:-;33510:19;33516:2;33520:8;33510:5;:19::i;:::-;-1:-1:-1;;;;;33571:14:5;;;:19;33567:483;;33625:13;;33673:14;;;33706:233;33737:62;33776:1;33780:2;33784:7;;;;;;33793:5;33737:30;:62::i;:::-;33732:167;;33835:40;;-1:-1:-1;;;33835:40:5;;;;;;;;;;;33732:167;33934:3;33926:5;:11;33706:233;;34021:3;34004:13;;:20;34000:34;;34026:8;;;34000:34;33592:458;;33379:689;;;:::o;27907:2720::-;28003:13;;28031;28027:44;;28053:18;;-1:-1:-1;;;28053:18:5;;;;;;;;;;;28027:44;-1:-1:-1;;;;;28559:22:5;;;;;;:18;:22;;;;1660:2;28559:22;;;:71;;28597:32;28585:45;;28559:71;;;28873:31;;;:17;:31;;;;;-1:-1:-1;15641:15:5;;15615:24;15611:46;15210:11;15185:23;15181:41;15178:52;15168:63;;28873:173;;29108:23;;;;28873:31;;28559:22;;29873:25;28559:22;;29726:335;30141:1;30127:12;30123:20;30081:346;30182:3;30173:7;30170:16;30081:346;;30400:7;30390:8;30387:1;30360:25;30357:1;30354;30349:59;30235:1;30222:15;30081:346;;;-1:-1:-1;30460:13:5;30456:45;;30482:19;;-1:-1:-1;;;30482:19:5;;;;;;;;;;;30456:45;30518:13;:19;-1:-1:-1;4945:95:7::1;4855:190:::0;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:631:8;78:5;108:18;149:2;141:6;138:14;135:40;;;155:18;;:::i;:::-;230:2;224:9;198:2;284:15;;-1:-1:-1;;280:24:8;;;306:2;276:33;272:42;260:55;;;330:18;;;350:22;;;327:46;324:72;;;376:18;;:::i;:::-;416:10;412:2;405:22;445:6;436:15;;475:6;467;460:22;515:3;506:6;501:3;497:16;494:25;491:45;;;532:1;529;522:12;491:45;582:6;577:3;570:4;562:6;558:17;545:44;637:1;630:4;621:6;613;609:19;605:30;598:41;;;;14:631;;;;;:::o;650:173::-;718:20;;-1:-1:-1;;;;;767:31:8;;757:42;;747:70;;813:1;810;803:12;747:70;650:173;;;:::o;828:160::-;893:20;;949:13;;942:21;932:32;;922:60;;978:1;975;968:12;993:221;1036:5;1089:3;1082:4;1074:6;1070:17;1066:27;1056:55;;1107:1;1104;1097:12;1056:55;1129:79;1204:3;1195:6;1182:20;1175:4;1167:6;1163:17;1129:79;:::i;1219:186::-;1278:6;1331:2;1319:9;1310:7;1306:23;1302:32;1299:52;;;1347:1;1344;1337:12;1299:52;1370:29;1389:9;1370:29;:::i;1410:260::-;1478:6;1486;1539:2;1527:9;1518:7;1514:23;1510:32;1507:52;;;1555:1;1552;1545:12;1507:52;1578:29;1597:9;1578:29;:::i;:::-;1568:39;;1626:38;1660:2;1649:9;1645:18;1626:38;:::i;:::-;1616:48;;1410:260;;;;;:::o;1675:328::-;1752:6;1760;1768;1821:2;1809:9;1800:7;1796:23;1792:32;1789:52;;;1837:1;1834;1827:12;1789:52;1860:29;1879:9;1860:29;:::i;:::-;1850:39;;1908:38;1942:2;1931:9;1927:18;1908:38;:::i;:::-;1898:48;;1993:2;1982:9;1978:18;1965:32;1955:42;;1675:328;;;;;:::o;2008:666::-;2103:6;2111;2119;2127;2180:3;2168:9;2159:7;2155:23;2151:33;2148:53;;;2197:1;2194;2187:12;2148:53;2220:29;2239:9;2220:29;:::i;:::-;2210:39;;2268:38;2302:2;2291:9;2287:18;2268:38;:::i;:::-;2258:48;;2353:2;2342:9;2338:18;2325:32;2315:42;;2408:2;2397:9;2393:18;2380:32;2435:18;2427:6;2424:30;2421:50;;;2467:1;2464;2457:12;2421:50;2490:22;;2543:4;2535:13;;2531:27;-1:-1:-1;2521:55:8;;2572:1;2569;2562:12;2521:55;2595:73;2660:7;2655:2;2642:16;2637:2;2633;2629:11;2595:73;:::i;:::-;2585:83;;;2008:666;;;;;;;:::o;2679:254::-;2744:6;2752;2805:2;2793:9;2784:7;2780:23;2776:32;2773:52;;;2821:1;2818;2811:12;2773:52;2844:29;2863:9;2844:29;:::i;:::-;2834:39;;2892:35;2923:2;2912:9;2908:18;2892:35;:::i;2938:254::-;3006:6;3014;3067:2;3055:9;3046:7;3042:23;3038:32;3035:52;;;3083:1;3080;3073:12;3035:52;3106:29;3125:9;3106:29;:::i;:::-;3096:39;3182:2;3167:18;;;;3154:32;;-1:-1:-1;;;2938:254:8:o;3197:615::-;3283:6;3291;3344:2;3332:9;3323:7;3319:23;3315:32;3312:52;;;3360:1;3357;3350:12;3312:52;3400:9;3387:23;3429:18;3470:2;3462:6;3459:14;3456:34;;;3486:1;3483;3476:12;3456:34;3524:6;3513:9;3509:22;3499:32;;3569:7;3562:4;3558:2;3554:13;3550:27;3540:55;;3591:1;3588;3581:12;3540:55;3631:2;3618:16;3657:2;3649:6;3646:14;3643:34;;;3673:1;3670;3663:12;3643:34;3726:7;3721:2;3711:6;3708:1;3704:14;3700:2;3696:23;3692:32;3689:45;3686:65;;;3747:1;3744;3737:12;3686:65;3778:2;3770:11;;;;;3800:6;;-1:-1:-1;3197:615:8;;-1:-1:-1;;;;3197:615:8:o;3817:180::-;3873:6;3926:2;3914:9;3905:7;3901:23;3897:32;3894:52;;;3942:1;3939;3932:12;3894:52;3965:26;3981:9;3965:26;:::i;4002:248::-;4067:6;4075;4128:2;4116:9;4107:7;4103:23;4099:32;4096:52;;;4144:1;4141;4134:12;4096:52;4167:26;4183:9;4167:26;:::i;4255:245::-;4313:6;4366:2;4354:9;4345:7;4341:23;4337:32;4334:52;;;4382:1;4379;4372:12;4334:52;4421:9;4408:23;4440:30;4464:5;4440:30;:::i;4505:249::-;4574:6;4627:2;4615:9;4606:7;4602:23;4598:32;4595:52;;;4643:1;4640;4633:12;4595:52;4675:9;4669:16;4694:30;4718:5;4694:30;:::i;4759:322::-;4828:6;4881:2;4869:9;4860:7;4856:23;4852:32;4849:52;;;4897:1;4894;4887:12;4849:52;4937:9;4924:23;4970:18;4962:6;4959:30;4956:50;;;5002:1;4999;4992:12;4956:50;5025;5067:7;5058:6;5047:9;5043:22;5025:50;:::i;5086:390::-;5164:6;5172;5225:2;5213:9;5204:7;5200:23;5196:32;5193:52;;;5241:1;5238;5231:12;5193:52;5281:9;5268:23;5314:18;5306:6;5303:30;5300:50;;;5346:1;5343;5336:12;5300:50;5369;5411:7;5402:6;5391:9;5387:22;5369:50;:::i;:::-;5359:60;5466:2;5451:18;;;;5438:32;;-1:-1:-1;;;;5086:390:8:o;5481:180::-;5540:6;5593:2;5581:9;5572:7;5568:23;5564:32;5561:52;;;5609:1;5606;5599:12;5561:52;-1:-1:-1;5632:23:8;;5481:180;-1:-1:-1;5481:180:8:o;5666:248::-;5734:6;5742;5795:2;5783:9;5774:7;5770:23;5766:32;5763:52;;;5811:1;5808;5801:12;5763:52;-1:-1:-1;;5834:23:8;;;5904:2;5889:18;;;5876:32;;-1:-1:-1;5666:248:8:o;5919:257::-;5960:3;5998:5;5992:12;6025:6;6020:3;6013:19;6041:63;6097:6;6090:4;6085:3;6081:14;6074:4;6067:5;6063:16;6041:63;:::i;:::-;6158:2;6137:15;-1:-1:-1;;6133:29:8;6124:39;;;;6165:4;6120:50;;5919:257;-1:-1:-1;;5919:257:8:o;6181:1527::-;6405:3;6443:6;6437:13;6469:4;6482:51;6526:6;6521:3;6516:2;6508:6;6504:15;6482:51;:::i;:::-;6596:13;;6555:16;;;;6618:55;6596:13;6555:16;6640:15;;;6618:55;:::i;:::-;6762:13;;6695:20;;;6735:1;;6822;6844:18;;;;6897;;;;6924:93;;7002:4;6992:8;6988:19;6976:31;;6924:93;7065:2;7055:8;7052:16;7032:18;7029:40;7026:167;;;-1:-1:-1;;;7092:33:8;;7148:4;7145:1;7138:15;7178:4;7099:3;7166:17;7026:167;7209:18;7236:110;;;;7360:1;7355:328;;;;7202:481;;7236:110;-1:-1:-1;;7271:24:8;;7257:39;;7316:20;;;;-1:-1:-1;7236:110:8;;7355:328;15120:1;15113:14;;;15157:4;15144:18;;7450:1;7464:169;7478:8;7475:1;7472:15;7464:169;;;7560:14;;7545:13;;;7538:37;7603:16;;;;7495:10;;7464:169;;;7468:3;;7664:8;7657:5;7653:20;7646:27;;7202:481;-1:-1:-1;7699:3:8;;6181:1527;-1:-1:-1;;;;;;;;;;;6181:1527:8:o;7921:488::-;-1:-1:-1;;;;;8190:15:8;;;8172:34;;8242:15;;8237:2;8222:18;;8215:43;8289:2;8274:18;;8267:34;;;8337:3;8332:2;8317:18;;8310:31;;;8115:4;;8358:45;;8383:19;;8375:6;8358:45;:::i;:::-;8350:53;7921:488;-1:-1:-1;;;;;;7921:488:8:o;8414:632::-;8585:2;8637:21;;;8707:13;;8610:18;;;8729:22;;;8556:4;;8585:2;8808:15;;;;8782:2;8767:18;;;8556:4;8851:169;8865:6;8862:1;8859:13;8851:169;;;8926:13;;8914:26;;8995:15;;;;8960:12;;;;8887:1;8880:9;8851:169;;;-1:-1:-1;9037:3:8;;8414:632;-1:-1:-1;;;;;;8414:632:8:o;9243:219::-;9392:2;9381:9;9374:21;9355:4;9412:44;9452:2;9441:9;9437:18;9429:6;9412:44;:::i;15173:128::-;15213:3;15244:1;15240:6;15237:1;15234:13;15231:39;;;15250:18;;:::i;:::-;-1:-1:-1;15286:9:8;;15173:128::o;15306:120::-;15346:1;15372;15362:35;;15377:18;;:::i;:::-;-1:-1:-1;15411:9:8;;15306:120::o;15431:168::-;15471:7;15537:1;15533;15529:6;15525:14;15522:1;15519:21;15514:1;15507:9;15500:17;15496:45;15493:71;;;15544:18;;:::i;:::-;-1:-1:-1;15584:9:8;;15431:168::o;15604:125::-;15644:4;15672:1;15669;15666:8;15663:34;;;15677:18;;:::i;:::-;-1:-1:-1;15714:9:8;;15604:125::o;15734:258::-;15806:1;15816:113;15830:6;15827:1;15824:13;15816:113;;;15906:11;;;15900:18;15887:11;;;15880:39;15852:2;15845:10;15816:113;;;15947:6;15944:1;15941:13;15938:48;;;-1:-1:-1;;15982:1:8;15964:16;;15957:27;15734:258::o;15997:380::-;16076:1;16072:12;;;;16119;;;16140:61;;16194:4;16186:6;16182:17;16172:27;;16140:61;16247:2;16239:6;16236:14;16216:18;16213:38;16210:161;;;16293:10;16288:3;16284:20;16281:1;16274:31;16328:4;16325:1;16318:15;16356:4;16353:1;16346:15;16382:135;16421:3;-1:-1:-1;;16442:17:8;;16439:43;;;16462:18;;:::i;:::-;-1:-1:-1;16509:1:8;16498:13;;16382:135::o;16522:112::-;16554:1;16580;16570:35;;16585:18;;:::i;:::-;-1:-1:-1;16619:9:8;;16522:112::o;16639:127::-;16700:10;16695:3;16691:20;16688:1;16681:31;16731:4;16728:1;16721:15;16755:4;16752:1;16745:15;16771:127;16832:10;16827:3;16823:20;16820:1;16813:31;16863:4;16860:1;16853:15;16887:4;16884:1;16877:15;16903:127;16964:10;16959:3;16955:20;16952:1;16945:31;16995:4;16992:1;16985:15;17019:4;17016:1;17009:15;17035:127;17096:10;17091:3;17087:20;17084:1;17077:31;17127:4;17124:1;17117:15;17151:4;17148:1;17141:15;17167:131;-1:-1:-1;;;;;;17241:32:8;;17231:43;;17221:71;;17288:1;17285;17278:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1828400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"AllowlistLimit()": "2340",
								"addressMintedBalance(address)": "2565",
								"allowlist(address)": "2653",
								"allowlistUsers(address[])": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2663",
								"baseExtension()": "infinite",
								"checkClaimed(uint256,uint256)": "2668",
								"claimActiveByPhase(uint256)": "2528",
								"claimItem(uint256,uint256)": "infinite",
								"claimPhaseByToken(uint256)": "2506",
								"claimedItemByPhase(uint256,uint256)": "2646",
								"cost()": "2385",
								"currentSet()": "2407",
								"getApproved(uint256)": "6992",
								"isAllowlisted(address)": "2629",
								"isApprovedForAll(address,address)": "infinite",
								"maxSupply()": "2383",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"onlyAllowlisted()": "2345",
								"owner()": "2376",
								"ownerOf(uint256)": "infinite",
								"ownerOfTokenIds(address)": "infinite",
								"pause(bool)": "26762",
								"paused()": "2410",
								"removeUsersFromAllowlist(address[])": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setBaseExtension(string)": "infinite",
								"setBaseURI(string)": "infinite",
								"setClaimURI(string,uint256)": "infinite",
								"setCurrentSetAmount(uint256)": "24599",
								"setOnlyAllowlisted(bool)": "26827",
								"supportsInterface(bytes4)": "557",
								"symbol()": "infinite",
								"toggleClaim(bool,uint256)": "26848",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4554",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28487",
								"withdraw()": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite",
								"_claimURI(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 359,
									"end": 396,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 359,
									"end": 396,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 359,
									"end": 396,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 359,
									"end": 396,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 359,
									"end": 396,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 359,
									"end": 396,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "173539B7B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 359,
									"end": 396,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 359,
									"end": 396,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 359,
									"end": 396,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 359,
									"end": 396,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 359,
									"end": 396,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 359,
									"end": 396,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 359,
									"end": 396,
									"name": "PUSH",
									"source": 7,
									"value": "C"
								},
								{
									"begin": 359,
									"end": 396,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 359,
									"end": 396,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 359,
									"end": 396,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 359,
									"end": 396,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 359,
									"end": 396,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 359,
									"end": 396,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 425,
									"end": 436,
									"name": "PUSH",
									"source": 7,
									"value": "753D533D968000"
								},
								{
									"begin": 403,
									"end": 436,
									"name": "PUSH",
									"source": 7,
									"value": "D"
								},
								{
									"begin": 403,
									"end": 436,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 468,
									"end": 470,
									"name": "PUSH",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 441,
									"end": 470,
									"name": "PUSH",
									"source": 7,
									"value": "E"
								},
								{
									"begin": 441,
									"end": 470,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 503,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 475,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "F"
								},
								{
									"begin": 475,
									"end": 504,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 541,
									"end": 542,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 509,
									"end": 542,
									"name": "PUSH",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 509,
									"end": 542,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 549,
									"end": 575,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 549,
									"end": 575,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 549,
									"end": 575,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 549,
									"end": 575,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 549,
									"end": 575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 549,
									"end": 575,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 549,
									"end": 575,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 549,
									"end": 575,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 549,
									"end": 575,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 767,
									"end": 802,
									"name": "PUSH",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 767,
									"end": 802,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 767,
									"end": 802,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 767,
									"end": 802,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 767,
									"end": 802,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 767,
									"end": 802,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 767,
									"end": 802,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 767,
									"end": 802,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "tag",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "34B6B4BA32B9BA19"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "494D49"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 5201,
									"end": 5359,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5273,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 5268,
									"end": 5273,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 5268,
									"end": 5281,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 5292,
									"end": 5299,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 5292,
									"end": 5309,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5751,
									"end": 5758,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 5320,
									"end": 5333,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 5320,
									"end": 5351,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5320,
									"end": 5351,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5320,
									"end": 5351,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1033,
									"end": 1057,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1044,
									"end": 1056,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1033,
									"end": 1043,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1033,
									"end": 1057,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1033,
									"end": 1057,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1033,
									"end": 1057,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1064,
									"end": 1092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1076,
									"end": 1089,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1064,
									"end": 1075,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 1064,
									"end": 1092,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1064,
									"end": 1092,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1064,
									"end": 1092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 915,
									"end": 1098,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 4022,
									"end": 4120,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 4022,
									"end": 4120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1094,
									"end": 1105,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4093,
									"end": 4114,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4093,
									"end": 4114,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4093,
									"end": 4114,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 4093,
									"end": 4114,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4093,
									"end": 4100,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 4093,
									"end": 4100,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4093,
									"end": 4114,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4093,
									"end": 4114,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4093,
									"end": 4114,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4093,
									"end": 4114,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4093,
									"end": 4114,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4093,
									"end": 4114,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 4093,
									"end": 4114,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 4093,
									"end": 4114,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4093,
									"end": 4114,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4022,
									"end": 4120,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4022,
									"end": 4120,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 4127,
									"end": 4248,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 4127,
									"end": 4248,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1094,
									"end": 1105,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 1094,
									"end": 1107,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4212,
									"end": 4227,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4212,
									"end": 4227,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4227,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4227,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4220,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 4212,
									"end": 4227,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4212,
									"end": 4227,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4227,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4227,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4227,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4212,
									"end": 4227,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4227,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4227,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4242,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4242,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 4212,
									"end": 4242,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4242,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4242,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4242,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4212,
									"end": 4242,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 4212,
									"end": 4242,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 4212,
									"end": 4242,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4242,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4127,
									"end": 4248,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4127,
									"end": 4248,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4127,
									"end": 4248,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1359,
									"end": 1489,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 1359,
									"end": 1489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1247,
									"end": 1254,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1279,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1422,
									"end": 1445,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1673,
									"end": 1675,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1655,
									"end": 1676,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 1676,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1655,
									"end": 1676,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1692,
									"end": 1710,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1692,
									"end": 1710,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1692,
									"end": 1710,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1685,
									"end": 1715,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1751,
									"end": 1785,
									"name": "PUSH",
									"source": 8,
									"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
								},
								{
									"begin": 1731,
									"end": 1749,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1731,
									"end": 1749,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1731,
									"end": 1749,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1724,
									"end": 1786,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1803,
									"end": 1821,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1803,
									"end": 1821,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 1414,
									"end": 1482,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1359,
									"end": 1489,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1832,
									"end": 2212,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1832,
									"end": 2212,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1911,
									"end": 1912,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1907,
									"end": 1919,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1907,
									"end": 1919,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1907,
									"end": 1919,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1907,
									"end": 1919,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1966,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1966,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1954,
									"end": 1966,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1975,
									"end": 2036,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1975,
									"end": 2036,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2029,
									"end": 2033,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2021,
									"end": 2027,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2017,
									"end": 2034,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2007,
									"end": 2034,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2007,
									"end": 2034,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1975,
									"end": 2036,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1975,
									"end": 2036,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2082,
									"end": 2084,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2074,
									"end": 2080,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2071,
									"end": 2085,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2051,
									"end": 2069,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2048,
									"end": 2086,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2045,
									"end": 2206,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2045,
									"end": 2206,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 2045,
									"end": 2206,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2128,
									"end": 2138,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 2123,
									"end": 2126,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 2119,
									"end": 2139,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2116,
									"end": 2117,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2109,
									"end": 2140,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2163,
									"end": 2167,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2160,
									"end": 2161,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2153,
									"end": 2168,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2191,
									"end": 2195,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2188,
									"end": 2189,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2181,
									"end": 2196,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2045,
									"end": 2206,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 2045,
									"end": 2206,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2045,
									"end": 2206,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1832,
									"end": 2212,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1832,
									"end": 2212,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1832,
									"end": 2212,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1832,
									"end": 2212,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 2217,
									"end": 2344,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 2217,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2278,
									"end": 2288,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 2269,
									"end": 2289,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2266,
									"end": 2267,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2259,
									"end": 2290,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2309,
									"end": 2313,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 2306,
									"end": 2307,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2299,
									"end": 2314,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2337,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2330,
									"end": 2331,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2323,
									"end": 2338,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2217,
									"end": 2344,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2217,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 5632,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208887703a58a4b9a63cc4503322bcd6e449094bec938356bc07393ef092d6bdeb64736f6c63430008070033",
									".code": [
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "674C02AA"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "B3807B1D"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "C87B56DD"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "C87B56DD"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "CA8A7D5E"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "D5ABEB01"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "DA3EF23F"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "E985E9C5"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "B3807B1D"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "B88D4FDE"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "BF705B1C"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "C4D2E8D6"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "C6682862"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "A0712D68"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "A22CB465"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "A7CD52CB"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "A7DC7F2A"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "674C02AA"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "74F59666"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "85649743"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "18CAE269"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "42842E0E"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "42842E0E"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "55F804B3"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "5B9E3CCF"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "5F93E9E3"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "6352211E"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "18CAE269"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "1EE50697"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "30B86627"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "3CCFD60B"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "A70A191"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "13FAEDE6"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "142B0FBE"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "17DC10C4"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A7"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "2329A29"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "5A3B809"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "81812FC"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 205,
											"end": 5632,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9216,
											"end": 9230,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9216,
											"end": 9230,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9209,
											"end": 9231,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9191,
											"end": 9232,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9191,
											"end": 9232,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9179,
											"end": 9181,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2592,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2504,
											"end": 2605,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7877,
											"end": 7909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7877,
											"end": 7909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7877,
											"end": 7909,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7859,
											"end": 7910,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7859,
											"end": 7910,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7847,
											"end": 7849,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7832,
											"end": 7850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 7713,
											"end": 7916,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 403,
											"end": 436,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 403,
											"end": 436,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 403,
											"end": 436,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 403,
											"end": 436,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 403,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 403,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 403,
											"end": 436,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 436,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 403,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15011,
											"end": 15036,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15011,
											"end": 15036,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15011,
											"end": 15036,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14999,
											"end": 15001,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14984,
											"end": 15002,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 14865,
											"end": 15042,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6437,
											"end": 6450,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6437,
											"end": 6450,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6437,
											"end": 6465,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 853,
											"end": 908,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 853,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 908,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 853,
											"end": 908,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 707,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 707,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 707,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 707,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 707,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 707,
											"end": 758,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 707,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 707,
											"end": 758,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 707,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 707,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 707,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 707,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 707,
											"end": 758,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 475,
											"end": 504,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 475,
											"end": 504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 475,
											"end": 504,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 475,
											"end": 504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 475,
											"end": 504,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 475,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 475,
											"end": 504,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 475,
											"end": 504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 475,
											"end": 504,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 475,
											"end": 504,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 475,
											"end": 504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 475,
											"end": 504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 475,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 475,
											"end": 504,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 475,
											"end": 504,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 475,
											"end": 504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 475,
											"end": 504,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 5625,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 5519,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 5519,
											"end": 5625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 5519,
											"end": 5625,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 549,
											"end": 575,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 549,
											"end": 575,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 549,
											"end": 575,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 549,
											"end": 575,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 549,
											"end": 575,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 549,
											"end": 575,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 549,
											"end": 575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 549,
											"end": 575,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 767,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 767,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 767,
											"end": 802,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 767,
											"end": 802,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 767,
											"end": 802,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 767,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 767,
											"end": 802,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 767,
											"end": 802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 802,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 767,
											"end": 802,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 767,
											"end": 802,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 767,
											"end": 802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 767,
											"end": 802,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 767,
											"end": 802,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 767,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 767,
											"end": 802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 767,
											"end": 802,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 767,
											"end": 802,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 767,
											"end": 802,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 802,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 636,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 636,
											"end": 702,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 636,
											"end": 702,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3956,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4003,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4003,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4003,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 3994,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3976,
											"end": 4003,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 4003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4003,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4003,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4003,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3976,
											"end": 4003,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4003,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4003,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 4010,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 4016,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1358,
											"end": 2498,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1358,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1358,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1358,
											"end": 2498,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 2498,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1358,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1358,
											"end": 2498,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1358,
											"end": 2498,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1358,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 2498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1358,
											"end": 2498,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 807,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 807,
											"end": 848,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 807,
											"end": 848,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 542,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 509,
											"end": 542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 509,
											"end": 542,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 509,
											"end": 542,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 542,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 509,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 509,
											"end": 542,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 509,
											"end": 542,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 542,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 509,
											"end": 542,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 509,
											"end": 542,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 509,
											"end": 542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 509,
											"end": 542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 509,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 509,
											"end": 542,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 509,
											"end": 542,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 509,
											"end": 542,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 509,
											"end": 542,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 582,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 582,
											"end": 631,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 582,
											"end": 631,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 441,
											"end": 470,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 441,
											"end": 470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 441,
											"end": 470,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 441,
											"end": 470,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 441,
											"end": 470,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 441,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 441,
											"end": 470,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 441,
											"end": 470,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 470,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 441,
											"end": 470,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 441,
											"end": 470,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 441,
											"end": 470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 441,
											"end": 470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 441,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 441,
											"end": 470,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 441,
											"end": 470,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 441,
											"end": 470,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 441,
											"end": 470,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17957,
											"end": 17961,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 17999,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17981,
											"end": 18016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9615,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 9935,
											"end": 10037,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10012,
											"end": 10037,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10012,
											"end": 10037,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10012,
											"end": 10037,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 10037,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 9935,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 10114,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 9935,
											"end": 10114,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10089,
											"end": 10114,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10089,
											"end": 10114,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10089,
											"end": 10114,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9935,
											"end": 10114,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 9935,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9915,
											"end": 10114,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9526,
											"end": 10165,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4542,
											"end": 4548,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4563,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10482,
											"end": 10495,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10515,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10428,
											"end": 10528,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16987,
											"end": 16994,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17012,
											"end": 17028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 17020,
											"end": 17027,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17012,
											"end": 17019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 17012,
											"end": 17028,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 17012,
											"end": 17028,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 17012,
											"end": 17028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17007,
											"end": 17071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 17007,
											"end": 17071,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33D1C039"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17037,
											"end": 17071,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17007,
											"end": 17071,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 17007,
											"end": 17071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17091,
											"end": 17106,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17091,
											"end": 17115,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17091,
											"end": 17121,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17091,
											"end": 17121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17091,
											"end": 17121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16911,
											"end": 17129,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16433,
											"end": 16446,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16449,
											"end": 16465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 16457,
											"end": 16464,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16449,
											"end": 16456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 16449,
											"end": 16465,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16449,
											"end": 16465,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 16449,
											"end": 16465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16433,
											"end": 16465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16482,
											"end": 16510,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16482,
											"end": 16510,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16482,
											"end": 16510,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 16478,
											"end": 16653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 16478,
											"end": 16653,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16530,
											"end": 16574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 16547,
											"end": 16552,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16530,
											"end": 16574,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 16530,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16525,
											"end": 16653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 16525,
											"end": 16653,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "67D9DCA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16602,
											"end": 16637,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16525,
											"end": 16653,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 16525,
											"end": 16653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16680,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16700,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16665,
											"end": 16689,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16716,
											"end": 16744,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 16422,
											"end": 16752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16352,
											"end": 16752,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3480,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3496,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3496,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3496,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3496,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3496,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3496,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3496,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3496,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3496,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3496,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3496,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3496,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3392,
											"end": 3502,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 4959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4945,
											"end": 5040,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4945,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4985,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4985,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4985,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4945,
											"end": 5040,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4945,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 4945,
											"end": 5040,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5027,
											"end": 5032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5001,
											"end": 5010,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 5001,
											"end": 5024,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5020,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5020,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5022,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5011,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5001,
											"end": 5024,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5024,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5024,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5024,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5001,
											"end": 5024,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5024,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5024,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5024,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5024,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5001,
											"end": 5024,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5001,
											"end": 5024,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5032,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5032,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5001,
											"end": 5032,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5032,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5032,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5032,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5032,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5032,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5032,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5032,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 4990,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 4987,
											"end": 4990,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 4987,
											"end": 4990,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4987,
											"end": 4990,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 4987,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 4990,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 4990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 4990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4945,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4945,
											"end": 5040,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4945,
											"end": 5040,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 4945,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4945,
											"end": 5040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4649,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 4634,
											"end": 4658,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4658,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4634,
											"end": 4658,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4658,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4658,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4658,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4658,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4658,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4658,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4658,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4658,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4569,
											"end": 4664,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20684,
											"end": 20711,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 20714,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 20733,
											"end": 20740,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 20714,
											"end": 20732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 20714,
											"end": 20741,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 20714,
											"end": 20741,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 20714,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20684,
											"end": 20741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20684,
											"end": 20741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20799,
											"end": 20803,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20758,
											"end": 20803,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 20774,
											"end": 20793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20758,
											"end": 20803,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 20758,
											"end": 20803,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 20754,
											"end": 20840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 20754,
											"end": 20840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A11481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 20812,
											"end": 20840,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 20754,
											"end": 20840,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 20754,
											"end": 20840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 20854,
											"end": 20881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19658,
											"end": 19673,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19658,
											"end": 19682,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 19886,
											"end": 19912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 19886,
											"end": 19912,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 19283,
											"end": 19313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 19283,
											"end": 19313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 19283,
											"end": 19313,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18976,
											"end": 19004,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 18976,
											"end": 19004,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 19261,
											"end": 19281,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 19258,
											"end": 19314,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 21040,
											"end": 21220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 21040,
											"end": 21220,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21133,
											"end": 21176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 21150,
											"end": 21154,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 17860,
											"end": 18024,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 21133,
											"end": 21176,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 21133,
											"end": 21176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21128,
											"end": 21220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 21128,
											"end": 21220,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CE44B5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21185,
											"end": 21220,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 21128,
											"end": 21220,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 21128,
											"end": 21220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21237,
											"end": 21253,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 21237,
											"end": 21253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21233,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 21233,
											"end": 21285,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A954ECD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21262,
											"end": 21285,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 21233,
											"end": 21285,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 21233,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 21434,
											"end": 21449,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 21574,
											"end": 21575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 21553,
											"end": 21572,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 21546,
											"end": 21576,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 21431,
											"end": 21591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21989,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 21971,
											"end": 21995,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 21969,
											"end": 21995,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22040,
											"end": 22062,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 22038,
											"end": 22062,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 22038,
											"end": 22062,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 22038,
											"end": 22062,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 22038,
											"end": 22062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22038,
											"end": 22062,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15210,
											"end": 15221,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 15185,
											"end": 15208,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 15181,
											"end": 15222,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 15168,
											"end": 15231,
											"name": "OR",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15168,
											"end": 15231,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22333,
											"end": 22350,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22333,
											"end": 22359,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 22333,
											"end": 22508,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22628,
											"end": 22675,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 22628,
											"end": 22675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 22624,
											"end": 23251,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 22624,
											"end": 23251,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 22733,
											"end": 22734,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 22723,
											"end": 22734,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 22723,
											"end": 22734,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 22701,
											"end": 22720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22856,
											"end": 22873,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 22856,
											"end": 22886,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22852,
											"end": 23236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 22852,
											"end": 23236,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 22994,
											"end": 23007,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 22994,
											"end": 23007,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 22979,
											"end": 22990,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 22979,
											"end": 23007,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 22975,
											"end": 23217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 22975,
											"end": 23217,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23158,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23171,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23193,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23141,
											"end": 23193,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 22975,
											"end": 23217,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 22975,
											"end": 23217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 22682,
											"end": 23251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 22624,
											"end": 23251,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 22624,
											"end": 23251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23298,
											"end": 23305,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23294,
											"end": 23296,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 23288,
											"end": 23292,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 23279,
											"end": 23306,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 20673,
											"end": 23367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20673,
											"end": 23367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20673,
											"end": 23367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 20550,
											"end": 23367,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5519,
											"end": 5625,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 5519,
											"end": 5625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5597,
											"end": 5618,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5597,
											"end": 5618,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5597,
											"end": 5618,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5597,
											"end": 5618,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 5625,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 23463,
											"end": 23648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 23618,
											"end": 23622,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23624,
											"end": 23626,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23628,
											"end": 23635,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 23601,
											"end": 23617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 23601,
											"end": 23640,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4100,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4093,
											"end": 4100,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4120,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 4670,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4755,
											"end": 4764,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4844,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 4750,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4770,
											"end": 4790,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4770,
											"end": 4790,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4770,
											"end": 4790,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4844,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 4750,
											"end": 4844,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4832,
											"end": 4836,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4806,
											"end": 4815,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4825,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4825,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4827,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 4816,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4806,
											"end": 4829,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4792,
											"end": 4795,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4792,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 4792,
											"end": 4795,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4792,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 4792,
											"end": 4795,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4792,
											"end": 4795,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 4792,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4792,
											"end": 4795,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4792,
											"end": 4795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4792,
											"end": 4795,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 4750,
											"end": 4844,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4127,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4220,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4242,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4242,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 4212,
											"end": 4242,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4242,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4212,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4212,
											"end": 4242,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 11821,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11893,
											"end": 11900,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11936,
											"end": 11963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 11955,
											"end": 11962,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11936,
											"end": 11954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 11936,
											"end": 11963,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7435,
											"end": 7442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7459,
											"end": 7478,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7459,
											"end": 7478,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 7455,
											"end": 7515,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23D3AD81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7487,
											"end": 7515,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7455,
											"end": 7515,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 7455,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7551,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7558,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1522,
											"end": 1535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7533,
											"end": 7588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7533,
											"end": 7588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7363,
											"end": 7596,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 10604,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10660,
											"end": 10673,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 10693,
											"end": 10700,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1358,
											"end": 2498,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 1358,
											"end": 2498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1432,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6437,
											"end": 6450,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6437,
											"end": 6450,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6437,
											"end": 6465,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6437,
											"end": 6465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1445,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 1432,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1490,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11543,
											"end": 11545,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11525,
											"end": 11546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11582,
											"end": 11584,
											"name": "PUSH",
											"source": 8,
											"value": "5F"
										},
										{
											"begin": 11562,
											"end": 11580,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11562,
											"end": 11580,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11562,
											"end": 11580,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11555,
											"end": 11585,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11621,
											"end": 11655,
											"name": "PUSH",
											"source": 8,
											"value": "574F414820686F6C6420757020746865206D696E74206973206E6F7420796574"
										},
										{
											"begin": 11601,
											"end": 11619,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11601,
											"end": 11619,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11601,
											"end": 11619,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11594,
											"end": 11656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11692,
											"end": 11726,
											"name": "PUSH",
											"source": 8,
											"value": "206C6976652C2061206C6974746C6520746F6F206561726C792074686572652E"
										},
										{
											"begin": 11672,
											"end": 11690,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11672,
											"end": 11690,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11672,
											"end": 11690,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11665,
											"end": 11727,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11764,
											"end": 11797,
											"name": "PUSH",
											"source": 8,
											"value": "2E2E206F72206C6174653F205472616E736D697373696F6E20456E64696E6700"
										},
										{
											"begin": 11743,
											"end": 11762,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 11743,
											"end": 11762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11743,
											"end": 11762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11736,
											"end": 11798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11815,
											"end": 11834,
											"name": "PUSH",
											"source": 8,
											"value": "A4"
										},
										{
											"begin": 11815,
											"end": 11834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 1475,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1620,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1605,
											"end": 1620,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 1597,
											"end": 1688,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1688,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1597,
											"end": 1688,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1688,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1597,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1597,
											"end": 1688,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1688,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11093,
											"end": 11114,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11150,
											"end": 11152,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 11130,
											"end": 11148,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11130,
											"end": 11148,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11130,
											"end": 11148,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11123,
											"end": 11153,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11189,
											"end": 11223,
											"name": "PUSH",
											"source": 8,
											"value": "6D757374206D696E74206174206C656173742031206E66742C2030206973206E"
										},
										{
											"begin": 11169,
											"end": 11187,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11169,
											"end": 11187,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11169,
											"end": 11187,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11162,
											"end": 11224,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11260,
											"end": 11293,
											"name": "PUSH",
											"source": 8,
											"value": "6F7420616C6C6F7765642E205472616E736D697373696F6E20456E64696E6700"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11240,
											"end": 11258,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11233,
											"end": 11294,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11311,
											"end": 11330,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 11311,
											"end": 11330,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 10909,
											"end": 11336,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1688,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 1597,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1727,
											"end": 1737,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 1727,
											"end": 1737,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 1712,
											"end": 1723,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1709,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 1703,
											"end": 1723,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 1723,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 1703,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1737,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1703,
											"end": 1737,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 1695,
											"end": 1793,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1793,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1793,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1695,
											"end": 1793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1793,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12047,
											"end": 12049,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1793,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1695,
											"end": 1793,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1695,
											"end": 1793,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12029,
											"end": 12050,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12086,
											"end": 12088,
											"name": "PUSH",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 12066,
											"end": 12084,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12066,
											"end": 12084,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12066,
											"end": 12084,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12059,
											"end": 12089,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12125,
											"end": 12159,
											"name": "PUSH",
											"source": 8,
											"value": "5468697320736574206F66207368697274732068617665206265656E206D696E"
										},
										{
											"begin": 12105,
											"end": 12123,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12105,
											"end": 12123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12105,
											"end": 12123,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12098,
											"end": 12160,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A32B21030B63932B0B23C961039B7B9393C97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12176,
											"end": 12194,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12169,
											"end": 12218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12235,
											"end": 12254,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 12235,
											"end": 12254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 11845,
											"end": 12260,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1793,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 1695,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1832,
											"end": 1841,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 1832,
											"end": 1841,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 1817,
											"end": 1828,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1814,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1841,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1841,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 1800,
											"end": 1899,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1899,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1800,
											"end": 1899,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1800,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1899,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12467,
											"end": 12469,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1800,
											"end": 1899,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1800,
											"end": 1899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1899,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12449,
											"end": 12470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12506,
											"end": 12508,
											"name": "PUSH",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 12486,
											"end": 12504,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12486,
											"end": 12504,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12486,
											"end": 12504,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12479,
											"end": 12509,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12545,
											"end": 12579,
											"name": "PUSH",
											"source": 8,
											"value": "6C6F6F6B73206C696B652077652061726520706F70756C6172206D6178207375"
										},
										{
											"begin": 12525,
											"end": 12543,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12525,
											"end": 12543,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12525,
											"end": 12543,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12518,
											"end": 12580,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C1C1B1E481A185CC81899595B881C995858DA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12596,
											"end": 12614,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 12596,
											"end": 12614,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12596,
											"end": 12614,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12589,
											"end": 12640,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12657,
											"end": 12676,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 12657,
											"end": 12676,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 12265,
											"end": 12682,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 1899,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 1800,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 1939,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 1914,
											"end": 2396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2008,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1992,
											"end": 2003,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1992,
											"end": 2008,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1992,
											"end": 2008,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 1984,
											"end": 2033,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 2033,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1984,
											"end": 2033,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1984,
											"end": 2033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 2033,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14718,
											"end": 14720,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1984,
											"end": 2033,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1984,
											"end": 2033,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1984,
											"end": 2033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14700,
											"end": 14721,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14757,
											"end": 14759,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 14737,
											"end": 14755,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14737,
											"end": 14755,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14737,
											"end": 14755,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14730,
											"end": 14760,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7363C90189030BA1030903A34B6B2901D149"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14776,
											"end": 14794,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 14776,
											"end": 14794,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14776,
											"end": 14794,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14769,
											"end": 14819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14836,
											"end": 14854,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 14836,
											"end": 14854,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1984,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 14516,
											"end": 14860,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1984,
											"end": 2033,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 1984,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2047,
											"end": 2062,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2047,
											"end": 2062,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2047,
											"end": 2062,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2047,
											"end": 2062,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2047,
											"end": 2070,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2047,
											"end": 2070,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2047,
											"end": 2062,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2047,
											"end": 2070,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2316,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 2044,
											"end": 2316,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2119,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2592,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2583,
											"end": 2599,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 2087,
											"end": 2140,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2140,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2087,
											"end": 2140,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2087,
											"end": 2140,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2140,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2087,
											"end": 2140,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2087,
											"end": 2140,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2140,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14004,
											"end": 14025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14061,
											"end": 14063,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14034,
											"end": 14064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08105B1B1BDDDB1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14080,
											"end": 14098,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 14080,
											"end": 14098,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14080,
											"end": 14098,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14073,
											"end": 14118,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14135,
											"end": 14153,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 14135,
											"end": 14153,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 13820,
											"end": 14159,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2140,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 2087,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2213,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2214,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2182,
											"end": 2214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2182,
											"end": 2214,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2182,
											"end": 2202,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2182,
											"end": 2214,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2182,
											"end": 2214,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2182,
											"end": 2214,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2214,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2182,
											"end": 2214,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2182,
											"end": 2214,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 2271,
											"end": 2285,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 2256,
											"end": 2267,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2182,
											"end": 2214,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 2237,
											"end": 2267,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2267,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 2237,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2285,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2285,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2229,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 2229,
											"end": 2304,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2229,
											"end": 2304,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2304,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2229,
											"end": 2304,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2229,
											"end": 2304,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9671,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2304,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2229,
											"end": 2304,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2229,
											"end": 2304,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9651,
											"end": 9672,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9708,
											"end": 9710,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9688,
											"end": 9706,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9681,
											"end": 9711,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481B5A5B9D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9720,
											"end": 9764,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2229,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 9467,
											"end": 9805,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2229,
											"end": 2304,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 2229,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2072,
											"end": 2316,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2044,
											"end": 2316,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 2044,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2365,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2347,
											"end": 2351,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 2347,
											"end": 2351,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 2347,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2343,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2365,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2365,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 2326,
											"end": 2388,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2388,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2326,
											"end": 2388,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2326,
											"end": 2388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2388,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10764,
											"end": 10766,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2326,
											"end": 2388,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2326,
											"end": 2388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10746,
											"end": 10767,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10803,
											"end": 10805,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10783,
											"end": 10801,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10783,
											"end": 10801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10783,
											"end": 10801,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10776,
											"end": 10806,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "86DEE6E840C8DECAE6DC4EE840DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10822,
											"end": 10840,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10822,
											"end": 10840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10822,
											"end": 10840,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10815,
											"end": 10863,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10880,
											"end": 10898,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10880,
											"end": 10898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 10562,
											"end": 10904,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2326,
											"end": 2388,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 2326,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 2414,
											"end": 2424,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2426,
											"end": 2437,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 2404,
											"end": 2438,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2404,
											"end": 2438,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 2404,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2445,
											"end": 2477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2465,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2445,
											"end": 2477,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2445,
											"end": 2477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2477,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2445,
											"end": 2477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2477,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2492,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2492,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2492,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2492,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 2445,
											"end": 2492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2492,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 2445,
											"end": 2492,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2445,
											"end": 2492,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 2445,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2492,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2445,
											"end": 2492,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1358,
											"end": 2498,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17582,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17603,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17624,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9191,
											"end": 9232,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9191,
											"end": 9232,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9191,
											"end": 9232,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17564,
											"end": 17613,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17640,
											"end": 17695,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17469,
											"end": 17703,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3600,
											"end": 3610,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 3580,
											"end": 3596,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3580,
											"end": 3596,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 3580,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3580,
											"end": 3610,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3610,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 3572,
											"end": 3642,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3642,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3642,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3572,
											"end": 3642,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3642,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13666,
											"end": 13668,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3642,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3572,
											"end": 3642,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3642,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13705,
											"end": 13707,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 13685,
											"end": 13703,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13685,
											"end": 13703,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13685,
											"end": 13703,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13678,
											"end": 13708,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13744,
											"end": 13773,
											"name": "PUSH",
											"source": 8,
											"value": "736F72727920796F7520617265206E6F7420746865206F776E65720000000000"
										},
										{
											"begin": 13724,
											"end": 13742,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 13724,
											"end": 13742,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13724,
											"end": 13742,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13717,
											"end": 13774,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13791,
											"end": 13809,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 13791,
											"end": 13809,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3572,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 13464,
											"end": 13815,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3572,
											"end": 3642,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 3572,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3682,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3682,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3682,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3682,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3657,
											"end": 3682,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3682,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3682,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3682,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3682,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3682,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3682,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3657,
											"end": 3682,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 3649,
											"end": 3710,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3710,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3710,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3649,
											"end": 3710,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3710,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14366,
											"end": 14368,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3710,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3649,
											"end": 3710,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3710,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14348,
											"end": 14369,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14405,
											"end": 14407,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 14385,
											"end": 14403,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14385,
											"end": 14403,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14385,
											"end": 14403,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14378,
											"end": 14408,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14444,
											"end": 14469,
											"name": "PUSH",
											"source": 8,
											"value": "636C61696D206973206E6F742061637469766520796574000000000000000000"
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14424,
											"end": 14442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14417,
											"end": 14470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14487,
											"end": 14505,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 14487,
											"end": 14505,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3649,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 14164,
											"end": 14511,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3649,
											"end": 3710,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 3649,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3753,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3753,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3753,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3753,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3744,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3726,
											"end": 3753,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3726,
											"end": 3753,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3753,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3753,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3753,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3726,
											"end": 3753,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3753,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3753,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3760,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3760,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3760,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3760,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3760,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3760,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3726,
											"end": 3760,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3726,
											"end": 3760,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3725,
											"end": 3760,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3717,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 3717,
											"end": 3781,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3717,
											"end": 3781,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3717,
											"end": 3781,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3717,
											"end": 3781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3717,
											"end": 3781,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10012,
											"end": 10014,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3717,
											"end": 3781,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3717,
											"end": 3781,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3717,
											"end": 3781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9994,
											"end": 10015,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10051,
											"end": 10053,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10031,
											"end": 10049,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10024,
											"end": 10054,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C726561647920636C61696D656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10070,
											"end": 10088,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10070,
											"end": 10088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10070,
											"end": 10088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10063,
											"end": 10109,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10126,
											"end": 10144,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10126,
											"end": 10144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3717,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 9810,
											"end": 10150,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3717,
											"end": 3781,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 3717,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3788,
											"end": 3815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3815,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3806,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3788,
											"end": 3815,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3788,
											"end": 3815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3815,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3815,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3788,
											"end": 3815,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3815,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3815,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3822,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3822,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3822,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3822,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3822,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3822,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3829,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3829,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3788,
											"end": 3829,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3788,
											"end": 3829,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3788,
											"end": 3829,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3862,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3862,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3853,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3836,
											"end": 3862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3862,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3862,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3862,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3862,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3870,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3876,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24413,
											"end": 24444,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 24426,
											"end": 24430,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24432,
											"end": 24434,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24436,
											"end": 24443,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24413,
											"end": 24425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 24413,
											"end": 24444,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 24413,
											"end": 24444,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 24413,
											"end": 24444,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24459,
											"end": 24473,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 24459,
											"end": 24473,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 24459,
											"end": 24473,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 24459,
											"end": 24478,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 24455,
											"end": 24638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 24455,
											"end": 24638,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 24529,
											"end": 24533,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24535,
											"end": 24537,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24539,
											"end": 24546,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24548,
											"end": 24553,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 24498,
											"end": 24528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 24498,
											"end": 24554,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 24498,
											"end": 24554,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 24498,
											"end": 24554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24493,
											"end": 24638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 24493,
											"end": 24638,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 24582,
											"end": 24622,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 24493,
											"end": 24638,
											"name": "tag",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 24493,
											"end": 24638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 24246,
											"end": 24645,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4455,
											"end": 4465,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 4455,
											"end": 4476,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4382,
											"end": 4482,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 359,
											"end": 396,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2722,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2750,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 2758,
											"end": 2765,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2750,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2750,
											"end": 2766,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2750,
											"end": 2766,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 2750,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2734,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 2734,
											"end": 2831,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2734,
											"end": 2831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2734,
											"end": 2831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2734,
											"end": 2831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2734,
											"end": 2831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13250,
											"end": 13252,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2734,
											"end": 2831,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2734,
											"end": 2831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2734,
											"end": 2831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13232,
											"end": 13253,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13289,
											"end": 13291,
											"name": "PUSH",
											"source": 8,
											"value": "2F"
										},
										{
											"begin": 13269,
											"end": 13287,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13269,
											"end": 13287,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13269,
											"end": 13287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13262,
											"end": 13292,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13328,
											"end": 13362,
											"name": "PUSH",
											"source": 8,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 13308,
											"end": 13326,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 13308,
											"end": 13326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13308,
											"end": 13326,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13301,
											"end": 13363,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13379,
											"end": 13397,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 13379,
											"end": 13397,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13379,
											"end": 13397,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13372,
											"end": 13417,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13434,
											"end": 13453,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 13434,
											"end": 13453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2734,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 13048,
											"end": 13459,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2734,
											"end": 2831,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 2734,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2840,
											"end": 2863,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2883,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2926,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2926,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 2901,
											"end": 3381,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2938,
											"end": 2967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 2980,
											"end": 2998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 2970,
											"end": 2999,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2970,
											"end": 2999,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 2970,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2938,
											"end": 2999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2938,
											"end": 2999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3049,
											"end": 3050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3038,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3046,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3050,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3086,
											"end": 3101,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 3103,
											"end": 3110,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 3103,
											"end": 3121,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3103,
											"end": 3121,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 3103,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3136,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3069,
											"end": 3137,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 3017,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3010,
											"end": 3152,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2901,
											"end": 3381,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 2901,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3209,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 3212,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 3212,
											"end": 3222,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2901,
											"end": 3381,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 2901,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 3386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 3386,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5119,
											"end": 5135,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5148,
											"end": 5169,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6453,
											"end": 6465,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6437,
											"end": 6450,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6437,
											"end": 6450,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6437,
											"end": 6465,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6437,
											"end": 6465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6502,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5185,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 5172,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5196,
											"end": 5219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 5246,
											"end": 5256,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5236,
											"end": 5257,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5257,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 5236,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5196,
											"end": 5258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5196,
											"end": 5258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5284,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5481,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 5299,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5336,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5319,
											"end": 5320,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5319,
											"end": 5336,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5481,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 5299,
											"end": 5481,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5376,
											"end": 5386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5362,
											"end": 5386,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 5370,
											"end": 5371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 5362,
											"end": 5372,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5362,
											"end": 5372,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 5362,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5362,
											"end": 5386,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5386,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5470,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 5358,
											"end": 5470,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5425,
											"end": 5426,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5413,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5414,
											"end": 5421,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5426,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5470,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 5358,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 5299,
											"end": 5481,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5481,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 5299,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5498,
											"end": 5504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5504,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5051,
											"end": 5512,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4254,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4337,
											"end": 4370,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4370,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 4337,
											"end": 4370,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4350,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 4337,
											"end": 4350,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4370,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4337,
											"end": 4370,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4370,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4370,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4337,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4337,
											"end": 4370,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10357,
											"end": 10359,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10339,
											"end": 10360,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10396,
											"end": 10398,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 10376,
											"end": 10394,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10376,
											"end": 10394,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10376,
											"end": 10394,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10369,
											"end": 10399,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10435,
											"end": 10469,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10415,
											"end": 10433,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10415,
											"end": 10433,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10415,
											"end": 10433,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10408,
											"end": 10470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10486,
											"end": 10504,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10479,
											"end": 10515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10532,
											"end": 10551,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 10532,
											"end": 10551,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 10155,
											"end": 10557,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12889,
											"end": 12891,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12871,
											"end": 12892,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12871,
											"end": 12892,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12871,
											"end": 12892,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12908,
											"end": 12926,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12908,
											"end": 12926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12908,
											"end": 12926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12901,
											"end": 12931,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12967,
											"end": 13001,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12947,
											"end": 12965,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 12947,
											"end": 12965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12947,
											"end": 12965,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12940,
											"end": 13002,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13019,
											"end": 13037,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 13019,
											"end": 13037,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 12687,
											"end": 13043,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18282,
											"end": 18564,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 18282,
											"end": 18564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18347,
											"end": 18351,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18437,
											"end": 18450,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 18437,
											"end": 18450,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 18427,
											"end": 18434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18427,
											"end": 18450,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 18384,
											"end": 18537,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18384,
											"end": 18537,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 18384,
											"end": 18537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 18384,
											"end": 18537,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18505,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18514,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18488,
											"end": 18532,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18537,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 18488,
											"end": 18537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 18282,
											"end": 18564,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12976,
											"end": 14251,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 12976,
											"end": 14251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13043,
											"end": 13050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13078,
											"end": 13085,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13180,
											"end": 13193,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 13180,
											"end": 13193,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13173,
											"end": 13177,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13173,
											"end": 13193,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 13169,
											"end": 14184,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13169,
											"end": 14184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "509"
										},
										{
											"begin": 13169,
											"end": 14184,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13218,
											"end": 13232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13235,
											"end": 13252,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 13235,
											"end": 13258,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13324,
											"end": 13348,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13324,
											"end": 13348,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13320,
											"end": 14165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "510"
										},
										{
											"begin": 13320,
											"end": 14165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "tag",
											"source": 5,
											"value": "511"
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13996,
											"end": 14007,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "512"
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14067,
											"end": 14073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14049,
											"end": 14066,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 14049,
											"end": 14074,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "511"
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "tag",
											"source": 5,
											"value": "512"
										},
										{
											"begin": 13989,
											"end": 14102,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14135,
											"end": 14141,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12976,
											"end": 14251,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12976,
											"end": 14251,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13320,
											"end": 14165,
											"name": "tag",
											"source": 5,
											"value": "510"
										},
										{
											"begin": 13320,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13195,
											"end": 14184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13169,
											"end": 14184,
											"name": "tag",
											"source": 5,
											"value": "509"
										},
										{
											"begin": 13169,
											"end": 14184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F96CDA1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14212,
											"end": 14243,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34152,
											"end": 34264,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 34152,
											"end": 34264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 34229,
											"end": 34256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 34239,
											"end": 34241,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 34243,
											"end": 34251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 34229,
											"end": 34256,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 34229,
											"end": 34256,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 34229,
											"end": 34256,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 34229,
											"end": 34256,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 34229,
											"end": 34256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 34229,
											"end": 34256,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 34229,
											"end": 34256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 34229,
											"end": 34256,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 34229,
											"end": 34256,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 34229,
											"end": 34256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 34229,
											"end": 34256,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 34229,
											"end": 34256,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 34229,
											"end": 34238,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "524"
										},
										{
											"begin": 34229,
											"end": 34256,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "tag",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26892,
											"end": 26896,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26892,
											"end": 26896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26913,
											"end": 26958,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 26958,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 26958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 26958,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 26913,
											"end": 26958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "527"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 40407,
											"end": 40417,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26980,
											"end": 26984,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 26980,
											"end": 26984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26986,
											"end": 26993,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 26986,
											"end": 26993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26995,
											"end": 27000,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 26995,
											"end": 27000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "528"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "tag",
											"source": 5,
											"value": "527"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "529"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "tag",
											"source": 5,
											"value": "529"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "530"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "531"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "532"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "tag",
											"source": 5,
											"value": "531"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "tag",
											"source": 5,
											"value": "530"
										},
										{
											"begin": 26913,
											"end": 27001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "533"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "538"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "537"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "tag",
											"source": 5,
											"value": "538"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "tag",
											"source": 5,
											"value": "537"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27196,
											"end": 27209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27196,
											"end": 27209,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 27192,
											"end": 27427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "539"
										},
										{
											"begin": 27192,
											"end": 27427,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 27242,
											"end": 27282,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 27192,
											"end": 27427,
											"name": "tag",
											"source": 5,
											"value": "539"
										},
										{
											"begin": 27192,
											"end": 27427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 27385,
											"end": 27391,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 27379,
											"end": 27392,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 27370,
											"end": 27376,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 27366,
											"end": 27368,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 27362,
											"end": 27377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 27355,
											"end": 27393,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "tag",
											"source": 5,
											"value": "533"
										},
										{
											"begin": 26909,
											"end": 27438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 27072,
											"end": 27136,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27072,
											"end": 27136,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 27072,
											"end": 27136,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 26729,
											"end": 27445,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1227,
											"end": 1339,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 1227,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1326,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 1318,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1318,
											"end": 1333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1333,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1289,
											"end": 1302,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1289,
											"end": 1302,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "tag",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1339,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1339,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "tag",
											"source": 4,
											"value": "455"
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 448,
											"end": 461,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 661,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "549"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 691,
											"end": 701,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 691,
											"end": 701,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 691,
											"end": 701,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 691,
											"end": 701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 691,
											"end": 701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 392,
											"end": 1095,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "tag",
											"source": 4,
											"value": "549"
										},
										{
											"begin": 661,
											"end": 712,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 721,
											"end": 733,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 4,
											"value": "550"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 782,
											"end": 791,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "551"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "552"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 807,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "tag",
											"source": 4,
											"value": "552"
										},
										{
											"begin": 807,
											"end": 815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 807,
											"end": 815,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "553"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 837,
											"end": 839,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "554"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "tag",
											"source": 4,
											"value": "553"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 829,
											"end": 839,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 829,
											"end": 839,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 775,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "550"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 775,
											"end": 850,
											"name": "tag",
											"source": 4,
											"value": "551"
										},
										{
											"begin": 775,
											"end": 850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 859,
											"end": 878,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "556"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "556"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "470"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 4,
											"value": "556"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "557"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 881,
											"end": 898,
											"name": "tag",
											"source": 4,
											"value": "557"
										},
										{
											"begin": 881,
											"end": 898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 859,
											"end": 898,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 859,
											"end": 898,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "tag",
											"source": 4,
											"value": "558"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 915,
											"end": 925,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 915,
											"end": 925,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "453"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "560"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 941,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "561"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "tag",
											"source": 4,
											"value": "560"
										},
										{
											"begin": 941,
											"end": 952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 941,
											"end": 952,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "562"
										},
										{
											"begin": 1017,
											"end": 1019,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1009,
											"end": 1014,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "563"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "tag",
											"source": 4,
											"value": "562"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "564"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 996,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "tag",
											"source": 4,
											"value": "564"
										},
										{
											"begin": 996,
											"end": 1020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "PUSH",
											"source": 4,
											"value": "F8"
										},
										{
											"begin": 983,
											"end": 1022,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 966,
											"end": 972,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 973,
											"end": 979,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 966,
											"end": 980,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 966,
											"end": 980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 966,
											"end": 980,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "566"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "566"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "tag",
											"source": 4,
											"value": "566"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "BYTE",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 966,
											"end": 1022,
											"name": "MSTORE8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "567"
										},
										{
											"begin": 1045,
											"end": 1047,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "554"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "tag",
											"source": 4,
											"value": "567"
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "558"
										},
										{
											"begin": 908,
											"end": 1058,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1119,
											"end": 1221,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 1119,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1179,
											"end": 1192,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1208,
											"end": 1215,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 1201,
											"end": 1215,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 33379,
											"end": 34068,
											"name": "tag",
											"source": 5,
											"value": "524"
										},
										{
											"begin": 33379,
											"end": 34068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 33510,
											"end": 33529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "577"
										},
										{
											"begin": 33516,
											"end": 33518,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 33520,
											"end": 33528,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 33510,
											"end": 33515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "578"
										},
										{
											"begin": 33510,
											"end": 33529,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 33510,
											"end": 33529,
											"name": "tag",
											"source": 5,
											"value": "577"
										},
										{
											"begin": 33510,
											"end": 33529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33571,
											"end": 33585,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 33571,
											"end": 33585,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 33571,
											"end": 33585,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 33571,
											"end": 33590,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 33567,
											"end": 34050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 33567,
											"end": 34050,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 33625,
											"end": 33638,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 33625,
											"end": 33638,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 33673,
											"end": 33687,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 33673,
											"end": 33687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 33673,
											"end": 33687,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 33706,
											"end": 33939,
											"name": "tag",
											"source": 5,
											"value": "580"
										},
										{
											"begin": 33706,
											"end": 33939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 33737,
											"end": 33799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "583"
										},
										{
											"begin": 33776,
											"end": 33777,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 33780,
											"end": 33782,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 33784,
											"end": 33791,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 33784,
											"end": 33791,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 33784,
											"end": 33791,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 33784,
											"end": 33791,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 33784,
											"end": 33791,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 33784,
											"end": 33791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 33793,
											"end": 33798,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 33737,
											"end": 33767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 33737,
											"end": 33799,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 33737,
											"end": 33799,
											"name": "tag",
											"source": 5,
											"value": "583"
										},
										{
											"begin": 33737,
											"end": 33799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 33732,
											"end": 33899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "584"
										},
										{
											"begin": 33732,
											"end": 33899,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 33835,
											"end": 33875,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 33835,
											"end": 33875,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68D2BF6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33835,
											"end": 33875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 33835,
											"end": 33875,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 33835,
											"end": 33875,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 33835,
											"end": 33875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 33835,
											"end": 33875,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 33835,
											"end": 33875,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 33835,
											"end": 33875,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 33835,
											"end": 33875,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 33835,
											"end": 33875,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 33835,
											"end": 33875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 33835,
											"end": 33875,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 33732,
											"end": 33899,
											"name": "tag",
											"source": 5,
											"value": "584"
										},
										{
											"begin": 33732,
											"end": 33899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 33934,
											"end": 33937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 33926,
											"end": 33931,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 33926,
											"end": 33937,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 33706,
											"end": 33939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "580"
										},
										{
											"begin": 33706,
											"end": 33939,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 34021,
											"end": 34024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 34004,
											"end": 34017,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 34004,
											"end": 34017,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 34004,
											"end": 34024,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 34000,
											"end": 34034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "585"
										},
										{
											"begin": 34000,
											"end": 34034,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 34026,
											"end": 34034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 34026,
											"end": 34034,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 34026,
											"end": 34034,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 34000,
											"end": 34034,
											"name": "tag",
											"source": 5,
											"value": "585"
										},
										{
											"begin": 34000,
											"end": 34034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 33592,
											"end": 34050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 33592,
											"end": 34050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 33379,
											"end": 34068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 33379,
											"end": 34068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 33379,
											"end": 34068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 33379,
											"end": 34068,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 27907,
											"end": 30627,
											"name": "tag",
											"source": 5,
											"value": "578"
										},
										{
											"begin": 27907,
											"end": 30627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 28003,
											"end": 28016,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 28003,
											"end": 28016,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 28031,
											"end": 28044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 28027,
											"end": 28071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "587"
										},
										{
											"begin": 28027,
											"end": 28071,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 28053,
											"end": 28071,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 28053,
											"end": 28071,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B562E8DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28053,
											"end": 28071,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 28053,
											"end": 28071,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 28053,
											"end": 28071,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 28053,
											"end": 28071,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 28053,
											"end": 28071,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 28053,
											"end": 28071,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 28053,
											"end": 28071,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 28053,
											"end": 28071,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 28053,
											"end": 28071,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 28053,
											"end": 28071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28053,
											"end": 28071,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 28027,
											"end": 28071,
											"name": "tag",
											"source": 5,
											"value": "587"
										},
										{
											"begin": 28027,
											"end": 28071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28577,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1660,
											"end": 1662,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28630,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28630,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 28597,
											"end": 28629,
											"name": "PUSH",
											"source": 5,
											"value": "10000000000000001"
										},
										{
											"begin": 28585,
											"end": 28630,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 28585,
											"end": 28630,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28630,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 28873,
											"end": 28904,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 28873,
											"end": 28904,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 28873,
											"end": 28904,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 28873,
											"end": 28890,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 28873,
											"end": 28904,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28873,
											"end": 28904,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 28873,
											"end": 28904,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 28873,
											"end": 28904,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 28873,
											"end": 28904,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 15641,
											"end": 15656,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15641,
											"end": 15656,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15615,
											"end": 15639,
											"name": "PUSH",
											"source": 5,
											"value": "E1"
										},
										{
											"begin": 15611,
											"end": 15657,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 15210,
											"end": 15221,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 15185,
											"end": 15208,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 15181,
											"end": 15222,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 15178,
											"end": 15230,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15168,
											"end": 15231,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15168,
											"end": 15231,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 28873,
											"end": 29046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28873,
											"end": 29046,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 29108,
											"end": 29131,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 29108,
											"end": 29131,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 29108,
											"end": 29131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 29108,
											"end": 29131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28873,
											"end": 28904,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 28873,
											"end": 28904,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 29873,
											"end": 29898,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 28559,
											"end": 28581,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 29726,
											"end": 30061,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 30141,
											"end": 30142,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 30127,
											"end": 30139,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 30123,
											"end": 30143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 30081,
											"end": 30427,
											"name": "tag",
											"source": 5,
											"value": "593"
										},
										{
											"begin": 30081,
											"end": 30427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 30182,
											"end": 30185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 30173,
											"end": 30180,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 30170,
											"end": 30186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 30081,
											"end": 30427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "595"
										},
										{
											"begin": 30081,
											"end": 30427,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 30400,
											"end": 30407,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 30390,
											"end": 30398,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 30387,
											"end": 30388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 30360,
											"end": 30385,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 30357,
											"end": 30358,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 30354,
											"end": 30355,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 30349,
											"end": 30408,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 30235,
											"end": 30236,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 30222,
											"end": 30237,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 30081,
											"end": 30427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "593"
										},
										{
											"begin": 30081,
											"end": 30427,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 30081,
											"end": 30427,
											"name": "tag",
											"source": 5,
											"value": "595"
										},
										{
											"begin": 30081,
											"end": 30427,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30460,
											"end": 30473,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 30456,
											"end": 30501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "596"
										},
										{
											"begin": 30456,
											"end": 30501,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 30482,
											"end": 30501,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 30482,
											"end": 30501,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E0763"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30482,
											"end": 30501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 30482,
											"end": 30501,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 30482,
											"end": 30501,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 30482,
											"end": 30501,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 30482,
											"end": 30501,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 30482,
											"end": 30501,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 30482,
											"end": 30501,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 30482,
											"end": 30501,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 30482,
											"end": 30501,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 30482,
											"end": 30501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 30482,
											"end": 30501,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 30456,
											"end": 30501,
											"name": "tag",
											"source": 5,
											"value": "596"
										},
										{
											"begin": 30456,
											"end": 30501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 30518,
											"end": 30531,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 30518,
											"end": 30537,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4945,
											"end": 5040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 5045,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "344"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "599"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "268"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "599"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "601"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "604"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "601"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "602"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "604"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "602"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "604"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "603"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "604"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "603"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "604"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "605"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "606"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "605"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "606"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "607"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "605"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "607"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "tag",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 14,
											"end": 645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 78,
											"end": 83,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 126,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 149,
											"end": 151,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 141,
											"end": 147,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 138,
											"end": 152,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 135,
											"end": 175,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 135,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 135,
											"end": 175,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 155,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "tag",
											"source": 8,
											"value": "613"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 230,
											"end": 232,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 233,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 198,
											"end": 200,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 284,
											"end": 299,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 280,
											"end": 304,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 280,
											"end": 304,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 280,
											"end": 304,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 276,
											"end": 309,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 272,
											"end": 314,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 260,
											"end": 315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 260,
											"end": 315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 260,
											"end": 315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 330,
											"end": 348,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 330,
											"end": 348,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 330,
											"end": 348,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 350,
											"end": 372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 350,
											"end": 372,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 350,
											"end": 372,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 327,
											"end": 373,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 324,
											"end": 396,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 324,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "615"
										},
										{
											"begin": 324,
											"end": 396,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 376,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "615"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "tag",
											"source": 8,
											"value": "615"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 416,
											"end": 426,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 445,
											"end": 451,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 436,
											"end": 451,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 436,
											"end": 451,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 467,
											"end": 473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 460,
											"end": 482,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 515,
											"end": 518,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 506,
											"end": 512,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 501,
											"end": 504,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 497,
											"end": 513,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 494,
											"end": 519,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 491,
											"end": 536,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 491,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 491,
											"end": 536,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 532,
											"end": 533,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 530,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 522,
											"end": 534,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 491,
											"end": 536,
											"name": "tag",
											"source": 8,
											"value": "616"
										},
										{
											"begin": 491,
											"end": 536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 582,
											"end": 588,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 577,
											"end": 580,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 570,
											"end": 574,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 562,
											"end": 568,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 558,
											"end": 575,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 545,
											"end": 589,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 637,
											"end": 638,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 634,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 627,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 613,
											"end": 619,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 609,
											"end": 628,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 605,
											"end": 635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 598,
											"end": 639,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 598,
											"end": 639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 598,
											"end": 639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 598,
											"end": 639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 645,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14,
											"end": 645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14,
											"end": 645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 645,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 650,
											"end": 823,
											"name": "tag",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 650,
											"end": 823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 718,
											"end": 738,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 718,
											"end": 738,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 767,
											"end": 798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 767,
											"end": 798,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 757,
											"end": 799,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 757,
											"end": 799,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 747,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 747,
											"end": 817,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 813,
											"end": 814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 811,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 803,
											"end": 815,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 747,
											"end": 817,
											"name": "tag",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 747,
											"end": 817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 650,
											"end": 823,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 650,
											"end": 823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 650,
											"end": 823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 650,
											"end": 823,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 828,
											"end": 988,
											"name": "tag",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 828,
											"end": 988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 893,
											"end": 913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 893,
											"end": 913,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 949,
											"end": 962,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 949,
											"end": 962,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 942,
											"end": 963,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 932,
											"end": 964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 932,
											"end": 964,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 922,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "619"
										},
										{
											"begin": 922,
											"end": 982,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 978,
											"end": 979,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 976,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 968,
											"end": 980,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 993,
											"end": 1214,
											"name": "tag",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 993,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1041,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1092,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1082,
											"end": 1086,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1074,
											"end": 1080,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1070,
											"end": 1087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1066,
											"end": 1093,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1056,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 1056,
											"end": 1111,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1107,
											"end": 1108,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1104,
											"end": 1105,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1097,
											"end": 1109,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1056,
											"end": 1111,
											"name": "tag",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 1056,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 1204,
											"end": 1207,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1182,
											"end": 1202,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1175,
											"end": 1179,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1173,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1163,
											"end": 1180,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 1129,
											"end": 1208,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1219,
											"end": 1405,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 1219,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1278,
											"end": 1284,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1333,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1328,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1310,
											"end": 1317,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1306,
											"end": 1329,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1334,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1299,
											"end": 1351,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1299,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 1299,
											"end": 1351,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1347,
											"end": 1348,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1345,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1349,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1299,
											"end": 1351,
											"name": "tag",
											"source": 8,
											"value": "628"
										},
										{
											"begin": 1299,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 1370,
											"end": 1399,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1410,
											"end": 1670,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 1410,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1492,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1539,
											"end": 1541,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1527,
											"end": 1536,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1514,
											"end": 1537,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1510,
											"end": 1542,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "tag",
											"source": 8,
											"value": "631"
										},
										{
											"begin": 1507,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1578,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 1597,
											"end": 1606,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1578,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 1578,
											"end": 1607,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1578,
											"end": 1607,
											"name": "tag",
											"source": 8,
											"value": "632"
										},
										{
											"begin": 1578,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1568,
											"end": 1607,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1568,
											"end": 1607,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1626,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 1660,
											"end": 1662,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1645,
											"end": 1663,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1626,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 1626,
											"end": 1664,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1626,
											"end": 1664,
											"name": "tag",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 1626,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1616,
											"end": 1664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1616,
											"end": 1664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1410,
											"end": 1670,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1410,
											"end": 1670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1410,
											"end": 1670,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1410,
											"end": 1670,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1410,
											"end": 1670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1410,
											"end": 1670,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1675,
											"end": 2003,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1675,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1766,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1768,
											"end": 1774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1823,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1800,
											"end": 1807,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1792,
											"end": 1824,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 1841,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 1789,
											"end": 1841,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1837,
											"end": 1838,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1839,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 1841,
											"name": "tag",
											"source": 8,
											"value": "635"
										},
										{
											"begin": 1789,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 1879,
											"end": 1888,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "tag",
											"source": 8,
											"value": "636"
										},
										{
											"begin": 1860,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1889,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1908,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 1942,
											"end": 1944,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1931,
											"end": 1940,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1908,
											"end": 1946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 1908,
											"end": 1946,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1908,
											"end": 1946,
											"name": "tag",
											"source": 8,
											"value": "637"
										},
										{
											"begin": 1908,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1946,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1898,
											"end": 1946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 1995,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1982,
											"end": 1991,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1978,
											"end": 1996,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1965,
											"end": 1997,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 1997,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 1997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 2003,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 2003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 2003,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 2003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 2003,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 2003,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2008,
											"end": 2674,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 2008,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2103,
											"end": 2109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2117,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2119,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2133,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2180,
											"end": 2183,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2166,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2155,
											"end": 2178,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2151,
											"end": 2184,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2148,
											"end": 2201,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2148,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 2148,
											"end": 2201,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2197,
											"end": 2198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2148,
											"end": 2201,
											"name": "tag",
											"source": 8,
											"value": "639"
										},
										{
											"begin": 2148,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 2239,
											"end": 2248,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2220,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 2220,
											"end": 2249,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2220,
											"end": 2249,
											"name": "tag",
											"source": 8,
											"value": "640"
										},
										{
											"begin": 2220,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2249,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 2302,
											"end": 2304,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2305,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 2268,
											"end": 2306,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2268,
											"end": 2306,
											"name": "tag",
											"source": 8,
											"value": "641"
										},
										{
											"begin": 2268,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2258,
											"end": 2306,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2258,
											"end": 2306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2355,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2342,
											"end": 2351,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2338,
											"end": 2356,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2325,
											"end": 2357,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2357,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2315,
											"end": 2357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2410,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2393,
											"end": 2411,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2380,
											"end": 2412,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2435,
											"end": 2453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2427,
											"end": 2433,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2454,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2421,
											"end": 2471,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2421,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 2421,
											"end": 2471,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2467,
											"end": 2468,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2465,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2421,
											"end": 2471,
											"name": "tag",
											"source": 8,
											"value": "642"
										},
										{
											"begin": 2421,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2490,
											"end": 2512,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2490,
											"end": 2512,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2547,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2535,
											"end": 2548,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2535,
											"end": 2548,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2521,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 2521,
											"end": 2576,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2521,
											"end": 2576,
											"name": "tag",
											"source": 8,
											"value": "643"
										},
										{
											"begin": 2521,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2658,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2637,
											"end": 2639,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2633,
											"end": 2635,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2640,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 2595,
											"end": 2668,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2595,
											"end": 2668,
											"name": "tag",
											"source": 8,
											"value": "644"
										},
										{
											"begin": 2595,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2668,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2674,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2674,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2674,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2674,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2674,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2674,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2674,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2008,
											"end": 2674,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2679,
											"end": 2933,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 2679,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2758,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2807,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2793,
											"end": 2802,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2791,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2780,
											"end": 2803,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2776,
											"end": 2808,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2818,
											"end": 2819,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2811,
											"end": 2823,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "tag",
											"source": 8,
											"value": "646"
										},
										{
											"begin": 2773,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "tag",
											"source": 8,
											"value": "647"
										},
										{
											"begin": 2844,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2873,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2834,
											"end": 2873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2892,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "633"
										},
										{
											"begin": 2923,
											"end": 2925,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2912,
											"end": 2921,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 2926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2892,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 2892,
											"end": 2927,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2938,
											"end": 3192,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2938,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3012,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3020,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3067,
											"end": 3069,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3055,
											"end": 3064,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3053,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3042,
											"end": 3065,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3038,
											"end": 3070,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3035,
											"end": 3087,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3035,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "650"
										},
										{
											"begin": 3035,
											"end": 3087,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3083,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3081,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3073,
											"end": 3085,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3035,
											"end": 3087,
											"name": "tag",
											"source": 8,
											"value": "650"
										},
										{
											"begin": 3035,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3106,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 3125,
											"end": 3134,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3106,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "617"
										},
										{
											"begin": 3106,
											"end": 3135,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3106,
											"end": 3135,
											"name": "tag",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 3106,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3096,
											"end": 3135,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3182,
											"end": 3184,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3167,
											"end": 3185,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3167,
											"end": 3185,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3167,
											"end": 3185,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3167,
											"end": 3185,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3154,
											"end": 3186,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3154,
											"end": 3186,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2938,
											"end": 3192,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3197,
											"end": 3812,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 3197,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3283,
											"end": 3289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3297,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3344,
											"end": 3346,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3332,
											"end": 3341,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3323,
											"end": 3330,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3319,
											"end": 3342,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3315,
											"end": 3347,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3312,
											"end": 3364,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3312,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "653"
										},
										{
											"begin": 3312,
											"end": 3364,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3360,
											"end": 3361,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3358,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3350,
											"end": 3362,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3312,
											"end": 3364,
											"name": "tag",
											"source": 8,
											"value": "653"
										},
										{
											"begin": 3312,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3387,
											"end": 3410,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3470,
											"end": 3472,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3459,
											"end": 3473,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3490,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 3456,
											"end": 3490,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3486,
											"end": 3487,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 3484,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3476,
											"end": 3488,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3490,
											"name": "tag",
											"source": 8,
											"value": "654"
										},
										{
											"begin": 3456,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3530,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3513,
											"end": 3522,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3509,
											"end": 3531,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3569,
											"end": 3576,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3558,
											"end": 3560,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3567,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3550,
											"end": 3577,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 3540,
											"end": 3595,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3592,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3588,
											"end": 3589,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3581,
											"end": 3593,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3595,
											"name": "tag",
											"source": 8,
											"value": "655"
										},
										{
											"begin": 3540,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3631,
											"end": 3633,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3634,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3657,
											"end": 3659,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3649,
											"end": 3655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3646,
											"end": 3660,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3677,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 3643,
											"end": 3677,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3673,
											"end": 3674,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3671,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3663,
											"end": 3675,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3643,
											"end": 3677,
											"name": "tag",
											"source": 8,
											"value": "656"
										},
										{
											"begin": 3643,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3726,
											"end": 3733,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3721,
											"end": 3723,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3704,
											"end": 3718,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3700,
											"end": 3702,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3696,
											"end": 3719,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3692,
											"end": 3724,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3689,
											"end": 3734,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3686,
											"end": 3751,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3686,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 3686,
											"end": 3751,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3748,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3745,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3737,
											"end": 3749,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3686,
											"end": 3751,
											"name": "tag",
											"source": 8,
											"value": "657"
										},
										{
											"begin": 3686,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3778,
											"end": 3780,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3197,
											"end": 3812,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3197,
											"end": 3812,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3197,
											"end": 3812,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3817,
											"end": 3997,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 3817,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 3879,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3928,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3914,
											"end": 3923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 3912,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3901,
											"end": 3924,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3897,
											"end": 3929,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3946,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "659"
										},
										{
											"begin": 3894,
											"end": 3946,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 3943,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3932,
											"end": 3944,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3894,
											"end": 3946,
											"name": "tag",
											"source": 8,
											"value": "659"
										},
										{
											"begin": 3894,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3965,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 3981,
											"end": 3990,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3965,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 3965,
											"end": 3991,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4002,
											"end": 4250,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 4002,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4067,
											"end": 4073,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4081,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4128,
											"end": 4130,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4114,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4103,
											"end": 4126,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4099,
											"end": 4131,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4148,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "662"
										},
										{
											"begin": 4096,
											"end": 4148,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4144,
											"end": 4145,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4142,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4134,
											"end": 4146,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4096,
											"end": 4148,
											"name": "tag",
											"source": 8,
											"value": "662"
										},
										{
											"begin": 4096,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "651"
										},
										{
											"begin": 4183,
											"end": 4192,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4167,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "620"
										},
										{
											"begin": 4167,
											"end": 4193,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4255,
											"end": 4500,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 4255,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4319,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4366,
											"end": 4368,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4354,
											"end": 4363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4345,
											"end": 4352,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4341,
											"end": 4364,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4337,
											"end": 4369,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4334,
											"end": 4386,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4334,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "665"
										},
										{
											"begin": 4334,
											"end": 4386,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4382,
											"end": 4383,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4380,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4372,
											"end": 4384,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4334,
											"end": 4386,
											"name": "tag",
											"source": 8,
											"value": "665"
										},
										{
											"begin": 4334,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4431,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 4464,
											"end": 4469,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4440,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "667"
										},
										{
											"begin": 4440,
											"end": 4470,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4505,
											"end": 4754,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 4505,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4627,
											"end": 4629,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4615,
											"end": 4624,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4606,
											"end": 4613,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4602,
											"end": 4625,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4598,
											"end": 4630,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4647,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "669"
										},
										{
											"begin": 4595,
											"end": 4647,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4643,
											"end": 4644,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4641,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4633,
											"end": 4645,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4647,
											"name": "tag",
											"source": 8,
											"value": "669"
										},
										{
											"begin": 4595,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4675,
											"end": 4684,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4669,
											"end": 4685,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 4718,
											"end": 4723,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "667"
										},
										{
											"begin": 4694,
											"end": 4724,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4759,
											"end": 5081,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 4759,
											"end": 5081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4828,
											"end": 4834,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4883,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4869,
											"end": 4878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4867,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4879,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4852,
											"end": 4884,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4849,
											"end": 4901,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4849,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "672"
										},
										{
											"begin": 4849,
											"end": 4901,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4898,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4894,
											"end": 4895,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4849,
											"end": 4901,
											"name": "tag",
											"source": 8,
											"value": "672"
										},
										{
											"begin": 4849,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4937,
											"end": 4946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4947,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4962,
											"end": 4968,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4959,
											"end": 4989,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4956,
											"end": 5006,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4956,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "673"
										},
										{
											"begin": 4956,
											"end": 5006,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5002,
											"end": 5003,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5004,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4956,
											"end": 5006,
											"name": "tag",
											"source": 8,
											"value": "673"
										},
										{
											"begin": 4956,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 5067,
											"end": 5074,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5058,
											"end": 5064,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5047,
											"end": 5056,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5043,
											"end": 5065,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 5025,
											"end": 5075,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5086,
											"end": 5476,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 5086,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5164,
											"end": 5170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5178,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5225,
											"end": 5227,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 5222,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5200,
											"end": 5223,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5196,
											"end": 5228,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5193,
											"end": 5245,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5193,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 5193,
											"end": 5245,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5241,
											"end": 5242,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5238,
											"end": 5239,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5231,
											"end": 5243,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5193,
											"end": 5245,
											"name": "tag",
											"source": 8,
											"value": "676"
										},
										{
											"begin": 5193,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5268,
											"end": 5291,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5314,
											"end": 5332,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5306,
											"end": 5312,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5333,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5300,
											"end": 5350,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5300,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "677"
										},
										{
											"begin": 5300,
											"end": 5350,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5346,
											"end": 5347,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5343,
											"end": 5344,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5336,
											"end": 5348,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5300,
											"end": 5350,
											"name": "tag",
											"source": 8,
											"value": "677"
										},
										{
											"begin": 5300,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5369,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "678"
										},
										{
											"begin": 5411,
											"end": 5418,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5402,
											"end": 5408,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5391,
											"end": 5400,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5387,
											"end": 5409,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5369,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 5369,
											"end": 5419,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5369,
											"end": 5419,
											"name": "tag",
											"source": 8,
											"value": "678"
										},
										{
											"begin": 5369,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5419,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5466,
											"end": 5468,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5438,
											"end": 5470,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5438,
											"end": 5470,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5086,
											"end": 5476,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5481,
											"end": 5661,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 5481,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5546,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5593,
											"end": 5595,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5581,
											"end": 5590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5572,
											"end": 5579,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5568,
											"end": 5591,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5596,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5561,
											"end": 5613,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5561,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 5561,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5609,
											"end": 5610,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5561,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "680"
										},
										{
											"begin": 5561,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5632,
											"end": 5655,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5655,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5661,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5481,
											"end": 5661,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5666,
											"end": 5914,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 5666,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5734,
											"end": 5740,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5742,
											"end": 5748,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5795,
											"end": 5797,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5783,
											"end": 5792,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 5781,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5770,
											"end": 5793,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5766,
											"end": 5798,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5815,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 5763,
											"end": 5815,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5812,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5808,
											"end": 5809,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5801,
											"end": 5813,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 5815,
											"name": "tag",
											"source": 8,
											"value": "682"
										},
										{
											"begin": 5763,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5857,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5834,
											"end": 5857,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5834,
											"end": 5857,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5904,
											"end": 5906,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5889,
											"end": 5907,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5889,
											"end": 5907,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5889,
											"end": 5907,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5876,
											"end": 5908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5666,
											"end": 5914,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5919,
											"end": 6176,
											"name": "tag",
											"source": 8,
											"value": "683"
										},
										{
											"begin": 5919,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5960,
											"end": 5963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6003,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5992,
											"end": 6004,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6025,
											"end": 6031,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6023,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "685"
										},
										{
											"begin": 6097,
											"end": 6103,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6090,
											"end": 6094,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6085,
											"end": 6088,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6074,
											"end": 6078,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6067,
											"end": 6072,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6079,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6041,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "686"
										},
										{
											"begin": 6041,
											"end": 6104,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6041,
											"end": 6104,
											"name": "tag",
											"source": 8,
											"value": "685"
										},
										{
											"begin": 6041,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6158,
											"end": 6160,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6137,
											"end": 6152,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6133,
											"end": 6162,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6124,
											"end": 6163,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6124,
											"end": 6163,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6124,
											"end": 6163,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6124,
											"end": 6163,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6165,
											"end": 6169,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6120,
											"end": 6170,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6120,
											"end": 6170,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5919,
											"end": 6176,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5919,
											"end": 6176,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6181,
											"end": 7708,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 6181,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6443,
											"end": 6449,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6450,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6469,
											"end": 6473,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6482,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 6526,
											"end": 6532,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6521,
											"end": 6524,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6516,
											"end": 6518,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6508,
											"end": 6514,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 6504,
											"end": 6519,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6482,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "686"
										},
										{
											"begin": 6482,
											"end": 6533,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6482,
											"end": 6533,
											"name": "tag",
											"source": 8,
											"value": "688"
										},
										{
											"begin": 6482,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6596,
											"end": 6609,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6596,
											"end": 6609,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6555,
											"end": 6571,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6555,
											"end": 6571,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6555,
											"end": 6571,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6555,
											"end": 6571,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6618,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "689"
										},
										{
											"begin": 6596,
											"end": 6609,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6555,
											"end": 6571,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6640,
											"end": 6655,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6640,
											"end": 6655,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 6640,
											"end": 6655,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6618,
											"end": 6673,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "686"
										},
										{
											"begin": 6618,
											"end": 6673,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6618,
											"end": 6673,
											"name": "tag",
											"source": 8,
											"value": "689"
										},
										{
											"begin": 6618,
											"end": 6673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6762,
											"end": 6775,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6762,
											"end": 6775,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6715,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6715,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6695,
											"end": 6715,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6736,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6735,
											"end": 6736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6822,
											"end": 6823,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6844,
											"end": 6862,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6844,
											"end": 6862,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6844,
											"end": 6862,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 6844,
											"end": 6862,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6897,
											"end": 6915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6897,
											"end": 6915,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6897,
											"end": 6915,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6897,
											"end": 6915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6924,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 6924,
											"end": 7017,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7002,
											"end": 7006,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6992,
											"end": 7000,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6988,
											"end": 7007,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6976,
											"end": 7007,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6976,
											"end": 7007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6924,
											"end": 7017,
											"name": "tag",
											"source": 8,
											"value": "690"
										},
										{
											"begin": 6924,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7065,
											"end": 7067,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7063,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7052,
											"end": 7068,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7032,
											"end": 7050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7029,
											"end": 7069,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7026,
											"end": 7193,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7026,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "691"
										},
										{
											"begin": 7026,
											"end": 7193,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7092,
											"end": 7125,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7092,
											"end": 7125,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7148,
											"end": 7152,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 7145,
											"end": 7146,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7138,
											"end": 7153,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7178,
											"end": 7182,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7099,
											"end": 7102,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7166,
											"end": 7183,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7026,
											"end": 7193,
											"name": "tag",
											"source": 8,
											"value": "691"
										},
										{
											"begin": 7026,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7209,
											"end": 7227,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7346,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7346,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "693"
										},
										{
											"begin": 7236,
											"end": 7346,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7361,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7355,
											"end": 7683,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7355,
											"end": 7683,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7355,
											"end": 7683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "694"
										},
										{
											"begin": 7355,
											"end": 7683,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7202,
											"end": 7683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "692"
										},
										{
											"begin": 7202,
											"end": 7683,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7236,
											"end": 7346,
											"name": "tag",
											"source": 8,
											"value": "693"
										},
										{
											"begin": 7236,
											"end": 7346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7271,
											"end": 7295,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7271,
											"end": 7295,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7296,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7257,
											"end": 7296,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7316,
											"end": 7336,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7316,
											"end": 7336,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7316,
											"end": 7336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7316,
											"end": 7336,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7236,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "692"
										},
										{
											"begin": 7236,
											"end": 7346,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7355,
											"end": 7683,
											"name": "tag",
											"source": 8,
											"value": "694"
										},
										{
											"begin": 7355,
											"end": 7683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15120,
											"end": 15121,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15113,
											"end": 15127,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 15113,
											"end": 15127,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15113,
											"end": 15127,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15144,
											"end": 15162,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 7450,
											"end": 7451,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7633,
											"name": "tag",
											"source": 8,
											"value": "697"
										},
										{
											"begin": 7464,
											"end": 7633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7478,
											"end": 7486,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7475,
											"end": 7476,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7487,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7464,
											"end": 7633,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7464,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "699"
										},
										{
											"begin": 7464,
											"end": 7633,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7560,
											"end": 7574,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7560,
											"end": 7574,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7558,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7558,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7545,
											"end": 7558,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7538,
											"end": 7575,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7603,
											"end": 7619,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7603,
											"end": 7619,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7603,
											"end": 7619,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7603,
											"end": 7619,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7495,
											"end": 7505,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7495,
											"end": 7505,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7464,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "697"
										},
										{
											"begin": 7464,
											"end": 7633,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7464,
											"end": 7633,
											"name": "tag",
											"source": 8,
											"value": "699"
										},
										{
											"begin": 7464,
											"end": 7633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7468,
											"end": 7471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7468,
											"end": 7471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7664,
											"end": 7672,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7657,
											"end": 7662,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7653,
											"end": 7673,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 7646,
											"end": 7673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7202,
											"end": 7683,
											"name": "tag",
											"source": 8,
											"value": "692"
										},
										{
											"begin": 7202,
											"end": 7683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7699,
											"end": 7702,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7699,
											"end": 7702,
											"name": "SWAP12",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 7708,
											"name": "SWAP11",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6181,
											"end": 7708,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7921,
											"end": 8409,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 7921,
											"end": 8409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8190,
											"end": 8205,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8190,
											"end": 8205,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8190,
											"end": 8205,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8172,
											"end": 8206,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8172,
											"end": 8206,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8242,
											"end": 8257,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8242,
											"end": 8257,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8237,
											"end": 8239,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8222,
											"end": 8240,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8222,
											"end": 8240,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8215,
											"end": 8258,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8289,
											"end": 8291,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8267,
											"end": 8301,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8267,
											"end": 8301,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8267,
											"end": 8301,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8337,
											"end": 8340,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8332,
											"end": 8334,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8341,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8341,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8341,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8115,
											"end": 8119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8115,
											"end": 8119,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "702"
										},
										{
											"begin": 8358,
											"end": 8403,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8381,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "683"
										},
										{
											"begin": 8358,
											"end": 8403,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8358,
											"end": 8403,
											"name": "tag",
											"source": 8,
											"value": "702"
										},
										{
											"begin": 8358,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8403,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 7921,
											"end": 8409,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7921,
											"end": 8409,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8414,
											"end": 9046,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 8414,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8637,
											"end": 8658,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8637,
											"end": 8658,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8637,
											"end": 8658,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8707,
											"end": 8720,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8707,
											"end": 8720,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8729,
											"end": 8751,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8729,
											"end": 8751,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8729,
											"end": 8751,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8556,
											"end": 8560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8556,
											"end": 8560,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8808,
											"end": 8823,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8808,
											"end": 8823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8808,
											"end": 8823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8808,
											"end": 8823,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8782,
											"end": 8784,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8767,
											"end": 8785,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8767,
											"end": 8785,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8767,
											"end": 8785,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8556,
											"end": 8560,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8851,
											"end": 9020,
											"name": "tag",
											"source": 8,
											"value": "704"
										},
										{
											"begin": 8851,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8865,
											"end": 8871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8862,
											"end": 8863,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8859,
											"end": 8872,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8851,
											"end": 9020,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8851,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "706"
										},
										{
											"begin": 8851,
											"end": 9020,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8926,
											"end": 8939,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8926,
											"end": 8939,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8940,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8940,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8995,
											"end": 9010,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8995,
											"end": 9010,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8995,
											"end": 9010,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8995,
											"end": 9010,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8960,
											"end": 8972,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8960,
											"end": 8972,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8960,
											"end": 8972,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8960,
											"end": 8972,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8887,
											"end": 8888,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8880,
											"end": 8889,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8851,
											"end": 9020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "704"
										},
										{
											"begin": 8851,
											"end": 9020,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8851,
											"end": 9020,
											"name": "tag",
											"source": 8,
											"value": "706"
										},
										{
											"begin": 8851,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9037,
											"end": 9040,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9040,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 9046,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8414,
											"end": 9046,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9243,
											"end": 9462,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 9243,
											"end": 9462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9392,
											"end": 9394,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9381,
											"end": 9390,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9355,
											"end": 9359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 9452,
											"end": 9454,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9441,
											"end": 9450,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9437,
											"end": 9455,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9429,
											"end": 9435,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9412,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "683"
										},
										{
											"begin": 9412,
											"end": 9456,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15173,
											"end": 15301,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 15173,
											"end": 15301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15213,
											"end": 15216,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15244,
											"end": 15245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15240,
											"end": 15246,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 15237,
											"end": 15238,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15234,
											"end": 15247,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 15231,
											"end": 15270,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15231,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "728"
										},
										{
											"begin": 15231,
											"end": 15270,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15250,
											"end": 15268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "728"
										},
										{
											"begin": 15250,
											"end": 15268,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "729"
										},
										{
											"begin": 15250,
											"end": 15268,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15250,
											"end": 15268,
											"name": "tag",
											"source": 8,
											"value": "728"
										},
										{
											"begin": 15250,
											"end": 15268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15286,
											"end": 15295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15286,
											"end": 15295,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15173,
											"end": 15301,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15306,
											"end": 15426,
											"name": "tag",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 15306,
											"end": 15426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15346,
											"end": 15347,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15372,
											"end": 15373,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15362,
											"end": 15397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "732"
										},
										{
											"begin": 15362,
											"end": 15397,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15377,
											"end": 15395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "732"
										},
										{
											"begin": 15377,
											"end": 15395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "733"
										},
										{
											"begin": 15377,
											"end": 15395,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15377,
											"end": 15395,
											"name": "tag",
											"source": 8,
											"value": "732"
										},
										{
											"begin": 15377,
											"end": 15395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15411,
											"end": 15420,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 15411,
											"end": 15420,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15306,
											"end": 15426,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15431,
											"end": 15599,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 15431,
											"end": 15599,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15471,
											"end": 15478,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15537,
											"end": 15538,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15533,
											"end": 15534,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15529,
											"end": 15535,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 15525,
											"end": 15539,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 15522,
											"end": 15523,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15519,
											"end": 15540,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 15514,
											"end": 15515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15507,
											"end": 15516,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15500,
											"end": 15517,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15496,
											"end": 15541,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15493,
											"end": 15564,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15493,
											"end": 15564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "736"
										},
										{
											"begin": 15493,
											"end": 15564,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15544,
											"end": 15562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "736"
										},
										{
											"begin": 15544,
											"end": 15562,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "729"
										},
										{
											"begin": 15544,
											"end": 15562,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15544,
											"end": 15562,
											"name": "tag",
											"source": 8,
											"value": "736"
										},
										{
											"begin": 15544,
											"end": 15562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15584,
											"end": 15593,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 15584,
											"end": 15593,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15431,
											"end": 15599,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15604,
											"end": 15729,
											"name": "tag",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 15604,
											"end": 15729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15644,
											"end": 15648,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15672,
											"end": 15673,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15669,
											"end": 15670,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15666,
											"end": 15674,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 15663,
											"end": 15697,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15663,
											"end": 15697,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "739"
										},
										{
											"begin": 15663,
											"end": 15697,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15677,
											"end": 15695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "739"
										},
										{
											"begin": 15677,
											"end": 15695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "729"
										},
										{
											"begin": 15677,
											"end": 15695,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15677,
											"end": 15695,
											"name": "tag",
											"source": 8,
											"value": "739"
										},
										{
											"begin": 15677,
											"end": 15695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15714,
											"end": 15723,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15714,
											"end": 15723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15604,
											"end": 15729,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15734,
											"end": 15992,
											"name": "tag",
											"source": 8,
											"value": "686"
										},
										{
											"begin": 15734,
											"end": 15992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15806,
											"end": 15807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15816,
											"end": 15929,
											"name": "tag",
											"source": 8,
											"value": "741"
										},
										{
											"begin": 15816,
											"end": 15929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15830,
											"end": 15836,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15827,
											"end": 15828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15824,
											"end": 15837,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 15816,
											"end": 15929,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15816,
											"end": 15929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "743"
										},
										{
											"begin": 15816,
											"end": 15929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15906,
											"end": 15917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15906,
											"end": 15917,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15906,
											"end": 15917,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15900,
											"end": 15918,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15887,
											"end": 15898,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15887,
											"end": 15898,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15887,
											"end": 15898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15880,
											"end": 15919,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15852,
											"end": 15854,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15845,
											"end": 15855,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15816,
											"end": 15929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "741"
										},
										{
											"begin": 15816,
											"end": 15929,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15816,
											"end": 15929,
											"name": "tag",
											"source": 8,
											"value": "743"
										},
										{
											"begin": 15816,
											"end": 15929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15947,
											"end": 15953,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15944,
											"end": 15945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15941,
											"end": 15954,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 15938,
											"end": 15986,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15938,
											"end": 15986,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 15938,
											"end": 15986,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15982,
											"end": 15983,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15964,
											"end": 15980,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15964,
											"end": 15980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15957,
											"end": 15984,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15734,
											"end": 15992,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15997,
											"end": 16377,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 15997,
											"end": 16377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16076,
											"end": 16077,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16072,
											"end": 16084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16072,
											"end": 16084,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16072,
											"end": 16084,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 16072,
											"end": 16084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16119,
											"end": 16131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16119,
											"end": 16131,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16119,
											"end": 16131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16140,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "746"
										},
										{
											"begin": 16140,
											"end": 16201,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16194,
											"end": 16198,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 16186,
											"end": 16192,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16182,
											"end": 16199,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16172,
											"end": 16199,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16172,
											"end": 16199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16140,
											"end": 16201,
											"name": "tag",
											"source": 8,
											"value": "746"
										},
										{
											"begin": 16140,
											"end": 16201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16247,
											"end": 16249,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16239,
											"end": 16245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16236,
											"end": 16250,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16216,
											"end": 16234,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16213,
											"end": 16251,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 16210,
											"end": 16371,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16210,
											"end": 16371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 16210,
											"end": 16371,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16293,
											"end": 16303,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 16288,
											"end": 16291,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 16284,
											"end": 16304,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 16281,
											"end": 16282,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16274,
											"end": 16305,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16328,
											"end": 16332,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 16325,
											"end": 16326,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16318,
											"end": 16333,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16356,
											"end": 16360,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 16353,
											"end": 16354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16346,
											"end": 16361,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16382,
											"end": 16517,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 16382,
											"end": 16517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16421,
											"end": 16424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16442,
											"end": 16459,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16442,
											"end": 16459,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 16439,
											"end": 16482,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16439,
											"end": 16482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "750"
										},
										{
											"begin": 16439,
											"end": 16482,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "750"
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "729"
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "tag",
											"source": 8,
											"value": "750"
										},
										{
											"begin": 16462,
											"end": 16480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16509,
											"end": 16510,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 16498,
											"end": 16511,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16498,
											"end": 16511,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16382,
											"end": 16517,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16522,
											"end": 16634,
											"name": "tag",
											"source": 8,
											"value": "563"
										},
										{
											"begin": 16522,
											"end": 16634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16554,
											"end": 16555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16580,
											"end": 16581,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16570,
											"end": 16605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "753"
										},
										{
											"begin": 16570,
											"end": 16605,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16585,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "753"
										},
										{
											"begin": 16585,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "733"
										},
										{
											"begin": 16585,
											"end": 16603,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16585,
											"end": 16603,
											"name": "tag",
											"source": 8,
											"value": "753"
										},
										{
											"begin": 16585,
											"end": 16603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16619,
											"end": 16628,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 16619,
											"end": 16628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16522,
											"end": 16634,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16639,
											"end": 16766,
											"name": "tag",
											"source": 8,
											"value": "729"
										},
										{
											"begin": 16639,
											"end": 16766,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16700,
											"end": 16710,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 16695,
											"end": 16698,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 16691,
											"end": 16711,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 16688,
											"end": 16689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16681,
											"end": 16712,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16731,
											"end": 16735,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 16728,
											"end": 16729,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16721,
											"end": 16736,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16755,
											"end": 16759,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 16752,
											"end": 16753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16745,
											"end": 16760,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16771,
											"end": 16898,
											"name": "tag",
											"source": 8,
											"value": "733"
										},
										{
											"begin": 16771,
											"end": 16898,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16832,
											"end": 16842,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 16827,
											"end": 16830,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 16823,
											"end": 16843,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 16820,
											"end": 16821,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16813,
											"end": 16844,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16863,
											"end": 16867,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 16860,
											"end": 16861,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16853,
											"end": 16868,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16887,
											"end": 16891,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 16884,
											"end": 16885,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16877,
											"end": 16892,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16903,
											"end": 17030,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 16903,
											"end": 17030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16964,
											"end": 16974,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 16959,
											"end": 16962,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 16955,
											"end": 16975,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 16952,
											"end": 16953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16945,
											"end": 16976,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16995,
											"end": 16999,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 16992,
											"end": 16993,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16985,
											"end": 17000,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17019,
											"end": 17023,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 17016,
											"end": 17017,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17009,
											"end": 17024,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 17035,
											"end": 17162,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 17035,
											"end": 17162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17096,
											"end": 17106,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 17091,
											"end": 17094,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 17087,
											"end": 17107,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 17084,
											"end": 17085,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17077,
											"end": 17108,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17127,
											"end": 17131,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 17124,
											"end": 17125,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17117,
											"end": 17132,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17151,
											"end": 17155,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 17148,
											"end": 17149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17141,
											"end": 17156,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 17167,
											"end": 17298,
											"name": "tag",
											"source": 8,
											"value": "667"
										},
										{
											"begin": 17167,
											"end": 17298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17241,
											"end": 17273,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17241,
											"end": 17273,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17231,
											"end": 17274,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17231,
											"end": 17274,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 17221,
											"end": 17292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 17221,
											"end": 17292,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17288,
											"end": 17289,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17285,
											"end": 17286,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17278,
											"end": 17290,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"AllowlistLimit()": "b3807b1d",
							"addressMintedBalance(address)": "18cae269",
							"allowlist(address)": "a7cd52cb",
							"allowlistUsers(address[])": "5b9e3ccf",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"baseExtension()": "c6682862",
							"checkClaimed(uint256,uint256)": "85649743",
							"claimActiveByPhase(uint256)": "bf705b1c",
							"claimItem(uint256,uint256)": "a7dc7f2a",
							"claimPhaseByToken(uint256)": "1ee50697",
							"claimedItemByPhase(uint256,uint256)": "74f59666",
							"cost()": "13faede6",
							"currentSet()": "30b86627",
							"getApproved(uint256)": "081812fc",
							"isAllowlisted(address)": "05a3b809",
							"isApprovedForAll(address,address)": "e985e9c5",
							"maxSupply()": "d5abeb01",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"onlyAllowlisted()": "674c02aa",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"ownerOfTokenIds(address)": "ca8a7d5e",
							"pause(bool)": "02329a29",
							"paused()": "5c975abb",
							"removeUsersFromAllowlist(address[])": "142b0fbe",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setBaseExtension(string)": "da3ef23f",
							"setBaseURI(string)": "55f804b3",
							"setClaimURI(string,uint256)": "5f93e9e3",
							"setCurrentSetAmount(uint256)": "c4d2e8d6",
							"setOnlyAllowlisted(bool)": "17dc10c4",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"toggleClaim(bool,uint256)": "0a70a191",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_initBaseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_initClaimURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AllowlistLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressMintedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowlist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"allowlistUsers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseExtension\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claim\",\"type\":\"uint256\"}],\"name\":\"checkClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimActiveByPhase\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claim\",\"type\":\"uint256\"}],\"name\":\"claimItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimPhaseByToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimedItemByPhase\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isAllowlisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_mintAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onlyAllowlisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"ownerOfTokenIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"removeUsersFromAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newBaseExtension\",\"type\":\"string\"}],\"name\":\"setBaseExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_newClaimURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"claim\",\"type\":\"uint256\"}],\"name\":\"setClaimURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"setTotal\",\"type\":\"uint256\"}],\"name\":\"setCurrentSetAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"setOnlyAllowlisted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"claim\",\"type\":\"uint256\"}],\"name\":\"toggleClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/imiltestTwo.sol\":\"imiltestTwo\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"contracts/ERC721A.sol\":{\"keccak256\":\"0xb0471dec724f0725c1bcbad030b9e84f9b0eb81b5ded06e14eaa549a32dfbb0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://552b6961ee7704c1f7a059d54aa6207ae2df5de4eaec77bd6dbc0b0c2a8f6aec\",\"dweb:/ipfs/QmRME5NFYsQdWBW7WLMbLFnwAejEuexqFjd9S5VkD4iQuo\"]},\"contracts/IERC721A.sol\":{\"keccak256\":\"0x62c93219335387b2052d161c29a3b38bcdb89cff897d19a5276738c44a825ee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c31b2128eed6dcaedbf256024ce4e2a104a3dfab635f1af34dfb304ea38fd556\",\"dweb:/ipfs/QmXpXFocJBGTPua7Wc7HwbbSbD1cAAe51L5daFYyFqsozS\"]},\"contracts/imiltestTwo.sol\":{\"keccak256\":\"0x0aa0a4210d50a54ed6b02b0156a6400b27534b4dc756fe587bd8266c41f1ed4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be130a61bcfe11a708f2eb1b63a7e2ff399fa3b4e63d8ee87a5fff4b08d05ea5\",\"dweb:/ipfs/QmV4mCkBSEyAikiaeCq9kA8bEDbJ6MPmaRygKbmYWrxPNq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 790,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 792,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 794,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 796,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 800,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 804,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 809,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)722_storage)"
							},
							{
								"astId": 815,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 123,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "_status",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 2543,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "baseURI",
								"offset": 0,
								"slot": "10",
								"type": "t_string_storage"
							},
							{
								"astId": 2547,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "claimURI",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 2550,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "baseExtension",
								"offset": 0,
								"slot": "12",
								"type": "t_string_storage"
							},
							{
								"astId": 2553,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "cost",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 2556,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "maxSupply",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 2559,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "currentSet",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 2562,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "AllowlistLimit",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 2565,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "paused",
								"offset": 0,
								"slot": "17",
								"type": "t_bool"
							},
							{
								"astId": 2569,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "claimActiveByPhase",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 2575,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "claimedItemByPhase",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 2579,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "claimPhaseByToken",
								"offset": 0,
								"slot": "20",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2582,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "onlyAllowlisted",
								"offset": 0,
								"slot": "21",
								"type": "t_bool"
							},
							{
								"astId": 2586,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "allowlist",
								"offset": 0,
								"slot": "22",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 2590,
								"contract": "contracts/imiltestTwo.sol:imiltestTwo",
								"label": "addressMintedBalance",
								"offset": 0,
								"slot": "23",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)722_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)722_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)722_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 721,
										"contract": "contracts/imiltestTwo.sol:imiltestTwo",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							469
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 470,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 469,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								469
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							152
						]
					},
					"id": 153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1661:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1708:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "1752:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1796:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1816:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 152,
									"src": "1782:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "2236:421:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 135,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 136,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2336:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:1"
											},
											{
												"expression": {
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 141,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2455:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 142,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2465:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:1"
											},
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 146,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 147,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2638:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 151,
									"name": "nonReentrant",
									"nameLocation": "2221:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:1"
									},
									"src": "2212:445:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 153,
							"src": "873:1786:1",
							"usedErrors": []
						}
					],
					"src": "97:2563:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							447
						]
					},
					"id": 448,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 155,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 447,
							"linearizedBaseContracts": [
								447
							],
							"name": "Address",
							"nameLocation": "202:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "1241:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 163,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "1465:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 162,
												"id": 168,
												"nodeType": "Return",
												"src": "1458:30:2"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1195:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:2"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1235:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:2"
									},
									"scope": 447,
									"src": "1175:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "2483:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 181,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$447",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$447",
																				"typeString": "library Address"
																			}
																		],
																		"id": 180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 179,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 184,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "2526:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:2"
											},
											{
												"assignments": [
													190,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 190,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 203,
														"src": "2578:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 189,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 197,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 191,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 173,
																"src": "2596:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 193,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "2618:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 199,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "2647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:2"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2431:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2458:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:2"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:2"
									},
									"scope": 447,
									"src": "2412:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "3555:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "3585:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3593:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 214,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															221,
															241
														],
														"referencedDeclaration": 241,
														"src": "3572:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 213,
												"id": 219,
												"nodeType": "Return",
												"src": "3565:67:2"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "3488:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "3504:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "3541:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:2"
									},
									"scope": 447,
									"src": "3466:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "4008:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 234,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4047:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "4055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 237,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "4064:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 233,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															261,
															311
														],
														"referencedDeclaration": 311,
														"src": "4025:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 232,
												"id": 239,
												"nodeType": "Return",
												"src": "4018:59:2"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3892:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3916:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3943:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 227,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3994:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:2"
									},
									"scope": 447,
									"src": "3861:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "4589:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 254,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4628:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "4636:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 256,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 253,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															261,
															311
														],
														"referencedDeclaration": 311,
														"src": "4606:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 252,
												"id": 259,
												"nodeType": "Return",
												"src": "4599:94:2"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4486:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4510:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4537:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4575:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 250,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:2"
									},
									"scope": 447,
									"src": "4446:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "5127:320:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 278,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$447",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$447",
																				"typeString": "library Address"
																			}
																		],
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 276,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 281,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "5170:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 288,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "5247:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 287,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "5236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:2"
											},
											{
												"assignments": [
													294,
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "5300:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 293,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 296,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 310,
														"src": "5314:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 295,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 303,
												"initialValue": {
													"arguments": [
														{
															"id": 301,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "5367:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 297,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "5341:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 299,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "5360:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "5406:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 306,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "5415:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 307,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "5427:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 304,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "5389:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 274,
												"id": 309,
												"nodeType": "Return",
												"src": "5382:58:2"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "4988:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "5012:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "5039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "5062:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:2"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "5113:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:2"
									},
									"scope": 447,
									"src": "4948:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "5724:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 322,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "5760:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 323,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "5768:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 321,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															328,
															363
														],
														"referencedDeclaration": 363,
														"src": "5741:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 320,
												"id": 326,
												"nodeType": "Return",
												"src": "5734:80:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "5652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "5668:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 315,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:2"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "5710:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 318,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:2"
									},
									"scope": 447,
									"src": "5624:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "6163:228:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 342,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "6192:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 341,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "6181:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:2"
											},
											{
												"assignments": [
													348,
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 348,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 362,
														"src": "6252:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 347,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 362,
														"src": "6266:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 349,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"arguments": [
														{
															"id": 353,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "6311:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 351,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "6293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 357,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "6350:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 358,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "6359:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 359,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "6371:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 356,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "6333:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 339,
												"id": 361,
												"nodeType": "Return",
												"src": "6326:58:2"
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "6042:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "6066:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 332,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "6093:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 334,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "6149:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 337,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:2"
									},
									"scope": 447,
									"src": "6005:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "6667:101:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "6705:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "6713:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 373,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															380,
															415
														],
														"referencedDeclaration": 415,
														"src": "6684:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 372,
												"id": 378,
												"nodeType": "Return",
												"src": "6677:84:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "6600:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "6616:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "6653:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:2"
									},
									"scope": 447,
									"src": "6570:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "7109:232:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 394,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "7138:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 393,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "7127:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:2"
											},
											{
												"assignments": [
													400,
													402
												],
												"declarations": [
													{
														"constant": false,
														"id": 400,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "7200:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 399,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 402,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "7214:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 401,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 407,
												"initialValue": {
													"arguments": [
														{
															"id": 405,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "7261:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 403,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "7241:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 409,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "7300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 410,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "7309:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 411,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "7321:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 408,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "7283:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 391,
												"id": 413,
												"nodeType": "Return",
												"src": "7276:58:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "6993:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "7017:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 384,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "7044:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "7095:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:2"
									},
									"scope": 447,
									"src": "6954:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "7721:582:2",
										"statements": [
											{
												"condition": {
													"id": 427,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 418,
													"src": "7735:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 443,
													"nodeType": "Block",
													"src": "7792:505:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 431,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "7876:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 441,
																"nodeType": "Block",
																"src": "8234:53:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 438,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 422,
																					"src": "8259:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 437,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8252:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8252:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 440,
																		"nodeType": "ExpressionStatement",
																		"src": "8252:20:2"
																	}
																]
															},
															"id": 442,
															"nodeType": "IfStatement",
															"src": "7872:415:2",
															"trueBody": {
																"id": 436,
																"nodeType": "Block",
																"src": "7899:329:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8069:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8091:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8120:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8114:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8114:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8095:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8163:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8167:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8159:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8159:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8180:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8152:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8152:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8152:44:2"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 420,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8120:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 420,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8167:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 435,
																		"nodeType": "InlineAssembly",
																		"src": "8060:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 444,
												"nodeType": "IfStatement",
												"src": "7731:566:2",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "7744:42:2",
													"statements": [
														{
															"expression": {
																"id": 428,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "7765:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 426,
															"id": 429,
															"nodeType": "Return",
															"src": "7758:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "7596:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "7618:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 419,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "7651:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:2"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "7707:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 424,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:2"
									},
									"scope": 447,
									"src": "7561:742:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 448,
							"src": "194:8111:2",
							"usedErrors": []
						}
					],
					"src": "101:8205:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							469
						]
					},
					"id": 470,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 449,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 450,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 469,
							"linearizedBaseContracts": [
								469
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 455,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 454,
												"id": 457,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 469,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 464,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 463,
												"id": 466,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 469,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 470,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							695
						]
					},
					"id": 696,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 471,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 472,
								"nodeType": "StructuredDocumentation",
								"src": "126:34:4",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 695,
							"linearizedBaseContracts": [
								695
							],
							"name": "Strings",
							"nameLocation": "169:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 475,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "208:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 695,
									"src": "183:58:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 473,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "183:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 474,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "223:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 478,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "270:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 695,
									"src": "247:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 476,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "247:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 477,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "463:632:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "665:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "674:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "665:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "661:51:4",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "677:35:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "698:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 485,
															"id": 490,
															"nodeType": "Return",
															"src": "691:10:4"
														}
													]
												}
											},
											{
												"assignments": [
													494
												],
												"declarations": [
													{
														"constant": false,
														"id": 494,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "729:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 556,
														"src": "721:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 493,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 496,
												"initialValue": {
													"id": 495,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 481,
													"src": "736:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:20:4"
											},
											{
												"assignments": [
													498
												],
												"declarations": [
													{
														"constant": false,
														"id": 498,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "759:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 556,
														"src": "751:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 497,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "751:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 499,
												"nodeType": "VariableDeclarationStatement",
												"src": "751:14:4"
											},
											{
												"body": {
													"id": 510,
													"nodeType": "Block",
													"src": "793:57:4",
													"statements": [
														{
															"expression": {
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "807:8:4",
																"subExpression": {
																	"id": 503,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "807:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 505,
															"nodeType": "ExpressionStatement",
															"src": "807:8:4"
														},
														{
															"expression": {
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 506,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "829:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "837:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "829:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 509,
															"nodeType": "ExpressionStatement",
															"src": "829:10:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 500,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "782:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "790:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "782:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "WhileStatement",
												"src": "775:75:4"
											},
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "872:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 556,
														"src": "859:19:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 512,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "859:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 518,
												"initialValue": {
													"arguments": [
														{
															"id": 516,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "891:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "881:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 514,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "885:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "881:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:39:4"
											},
											{
												"body": {
													"id": 549,
													"nodeType": "Block",
													"src": "927:131:4",
													"statements": [
														{
															"expression": {
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 522,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "941:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "951:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "941:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 525,
															"nodeType": "ExpressionStatement",
															"src": "941:11:4"
														},
														{
															"expression": {
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 526,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "966:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 528,
																	"indexExpression": {
																		"id": 527,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 498,
																		"src": "973:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "966:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 540,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "996:2:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 538,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 536,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 481,
																									"src": "1009:5:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 537,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1017:2:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "1009:10:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 535,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1001:7:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 534,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "1001:7:4",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 539,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1001:19:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "996:24:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 532,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "990:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 531,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "990:5:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "990:31:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "983:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 529,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "983:6:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "983:39:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "966:56:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 544,
															"nodeType": "ExpressionStatement",
															"src": "966:56:4"
														},
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "1036:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1045:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1036:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "1036:11:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 519,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "915:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "924:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "915:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 550,
												"nodeType": "WhileStatement",
												"src": "908:150:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 553,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "1081:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1074:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 551,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1074:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1074:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 485,
												"id": 555,
												"nodeType": "Return",
												"src": "1067:21:4"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "297:90:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "401:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "418:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "410:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:15:4"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "448:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "448:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:15:4"
									},
									"scope": 695,
									"src": "392:703:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "1274:255:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 565,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "1288:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1297:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1288:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "1284:54:4",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "1300:38:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1321:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 564,
															"id": 569,
															"nodeType": "Return",
															"src": "1314:13:4"
														}
													]
												}
											},
											{
												"assignments": [
													573
												],
												"declarations": [
													{
														"constant": false,
														"id": 573,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1355:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "1347:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 572,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1347:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 575,
												"initialValue": {
													"id": 574,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 560,
													"src": "1362:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1347:20:4"
											},
											{
												"assignments": [
													577
												],
												"declarations": [
													{
														"constant": false,
														"id": 577,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1385:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "1377:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 576,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1377:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 579,
												"initialValue": {
													"hexValue": "30",
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1394:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1377:18:4"
											},
											{
												"body": {
													"id": 590,
													"nodeType": "Block",
													"src": "1423:57:4",
													"statements": [
														{
															"expression": {
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1437:8:4",
																"subExpression": {
																	"id": 583,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "1437:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 585,
															"nodeType": "ExpressionStatement",
															"src": "1437:8:4"
														},
														{
															"expression": {
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 586,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "1459:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1468:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 589,
															"nodeType": "ExpressionStatement",
															"src": "1459:10:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 580,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "1412:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1420:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1412:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 591,
												"nodeType": "WhileStatement",
												"src": "1405:75:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 593,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "1508:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 594,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "1515:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 592,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															598,
															674,
															694
														],
														"referencedDeclaration": 674,
														"src": "1496:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1496:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 564,
												"id": 596,
												"nodeType": "Return",
												"src": "1489:33:4"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "1101:94:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1209:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1229:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1221:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:15:4"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "1259:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 562,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1259:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:15:4"
									},
									"scope": 695,
									"src": "1200:329:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "1742:351:4",
										"statements": [
											{
												"assignments": [
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1765:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 673,
														"src": "1752:19:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 608,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1752:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1784:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 613,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "1788:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1784:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1797:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1784:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1774:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 610,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1778:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1752:47:4"
											},
											{
												"expression": {
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 619,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "1809:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 621,
														"indexExpression": {
															"hexValue": "30",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1816:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1809:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1821:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1809:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "1809:15:4"
											},
											{
												"expression": {
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 625,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "1834:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 627,
														"indexExpression": {
															"hexValue": "31",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1841:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1834:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1846:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1834:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "1834:15:4"
											},
											{
												"body": {
													"id": 659,
													"nodeType": "Block",
													"src": "1904:87:4",
													"statements": [
														{
															"expression": {
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 645,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "1918:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 647,
																	"indexExpression": {
																		"id": 646,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "1925:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1918:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 648,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 475,
																		"src": "1930:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 652,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 649,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "1943:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1951:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1943:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1930:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1918:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 654,
															"nodeType": "ExpressionStatement",
															"src": "1918:37:4"
														},
														{
															"expression": {
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 655,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "1969:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1979:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1969:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 658,
															"nodeType": "ExpressionStatement",
															"src": "1969:11:4"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 639,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "1892:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1896:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1892:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 660,
												"initializationExpression": {
													"assignments": [
														632
													],
													"declarations": [
														{
															"constant": false,
															"id": 632,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1872:1:4",
															"nodeType": "VariableDeclaration",
															"scope": 660,
															"src": "1864:9:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 631,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1864:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 638,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1876:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 634,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "1880:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1876:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1889:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1876:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1864:26:4"
												},
												"loopExpression": {
													"expression": {
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1899:3:4",
														"subExpression": {
															"id": 642,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "1901:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 644,
													"nodeType": "ExpressionStatement",
													"src": "1899:3:4"
												},
												"nodeType": "ForStatement",
												"src": "1859:132:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 662,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "2008:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2008:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2020:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 661,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2000:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2000:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "2000:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "2079:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2072:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 668,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2072:6:4",
															"typeDescriptions": {}
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2072:14:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 607,
												"id": 672,
												"nodeType": "Return",
												"src": "2065:21:4"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "1535:112:4",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1661:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1681:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1673:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1696:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1688:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:31:4"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "1727:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 605,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1726:15:4"
									},
									"scope": 695,
									"src": "1652:441:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "2318:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 687,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 677,
																			"src": "2363:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 685,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2355:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2347:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 683,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2347:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2347:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 690,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "2371:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 682,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															598,
															674,
															694
														],
														"referencedDeclaration": 674,
														"src": "2335:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 681,
												"id": 692,
												"nodeType": "Return",
												"src": "2328:59:4"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "2099:141:4",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2254:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2274:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "2266:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:14:4"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "2303:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 679,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2303:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:15:4"
									},
									"scope": 695,
									"src": "2245:149:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 696,
							"src": "161:2235:4",
							"usedErrors": []
						}
					],
					"src": "101:2296:4"
				},
				"id": 4
			},
			"contracts/ERC721A.sol": {
				"ast": {
					"absolutePath": "contracts/ERC721A.sol",
					"exportedSymbols": {
						"Address": [
							447
						],
						"Context": [
							469
						],
						"ERC721A": [
							2321
						],
						"ERC721A__IERC721Receiver": [
							716
						],
						"IERC721A": [
							2527
						],
						"Strings": [
							695
						]
					},
					"id": 2322,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 697,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:5"
						},
						{
							"absolutePath": "contracts/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 698,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2322,
							"sourceUnit": 2528,
							"src": "115:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 699,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2322,
							"sourceUnit": 448,
							"src": "141:51:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 700,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2322,
							"sourceUnit": 470,
							"src": "194:51:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 701,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2322,
							"sourceUnit": 696,
							"src": "247:51:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 702,
								"nodeType": "StructuredDocumentation",
								"src": "302:53:5",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 716,
							"linearizedBaseContracts": [
								716
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "367:24:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "408:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "443:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "435:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "470:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "462:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "493:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "485:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "526:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "511:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 709,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "511:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:113:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "556:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 712,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "556:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "555:8:5"
									},
									"scope": 716,
									"src": "399:165:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2322,
							"src": "357:210:5",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 718,
										"name": "IERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2527,
										"src": "1109:8:5"
									},
									"id": 719,
									"nodeType": "InheritanceSpecifier",
									"src": "1109:8:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 717,
								"nodeType": "StructuredDocumentation",
								"src": "571:516:5",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 2321,
							"linearizedBaseContracts": [
								2321,
								2527
							],
							"name": "ERC721A",
							"nameLocation": "1098:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 722,
									"members": [
										{
											"constant": false,
											"id": 721,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1211:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 722,
											"src": "1203:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 720,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1203:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1175:16:5",
									"nodeType": "StructDefinition",
									"scope": 2321,
									"src": "1168:56:5",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 730,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1492:27:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "1467:68:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 723,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1467:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 729,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1523:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1528:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 727,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1522:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 728,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1534:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1522:13:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 733,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "1636:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "1611:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 731,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1611:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 732,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1660:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 736,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "1763:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "1738:52:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 734,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1738:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 735,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1787:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 739,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "1882:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "1857:42:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 737,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1857:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 738,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1896:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 747,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "2015:23:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "1990:65:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 740,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1990:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 746,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2042:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2047:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "2042:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 744,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2041:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 745,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2054:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2041:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 750,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "2155:23:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "2130:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 748,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2130:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 749,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2181:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 755,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "2280:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "2255:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 751,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2255:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 754,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 752,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2298:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 753,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2303:3:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "2298:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 758,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2415:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "2390:55:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 756,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2390:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 757,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2442:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 763,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2550:25:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "2525:61:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 759,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2525:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 762,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 760,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2578:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 761,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2583:3:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2578:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 766,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "2681:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "2656:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 764,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2656:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 765,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2702:3:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 774,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2826:30:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "2801:72:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 767,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2801:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 773,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2860:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2865:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2860:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 771,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2859:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 772,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2872:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2859:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 782,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2961:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "2936:58:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 775,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2936:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 781,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2981:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2986:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2981:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 779,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2980:10:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 780,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2993:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2980:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 785,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "3308:32:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "3283:64:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 783,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3283:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 784,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3343:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 788,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "3498:25:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "3473:128:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 786,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3473:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 787,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3535:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 790,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3851:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "3835:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 789,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3835:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 792,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3926:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "3910:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 791,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3910:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 794,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3981:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "3966:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 793,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3966:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 796,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "4031:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "4016:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 795,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "4016:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 800,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "4470:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "4434:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 799,
										"keyType": {
											"id": 797,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4442:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4434:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 798,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4453:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 804,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "4738:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "4702:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 803,
										"keyType": {
											"id": 801,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4710:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4702:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 802,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4721:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 809,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4861:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "4816:60:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$722_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 808,
										"keyType": {
											"id": 805,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4824:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4816:36:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$722_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueType": {
											"id": 807,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 806,
												"name": "TokenApprovalRef",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 722,
												"src": "4835:16:5"
											},
											"referencedDeclaration": 722,
											"src": "4835:16:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$722_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 815,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4987:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 2321,
									"src": "4934:71:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 814,
										"keyType": {
											"id": 810,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4942:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4934:44:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 813,
											"keyType": {
												"id": 811,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4961:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4953:24:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 812,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4972:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "5257:102:5",
										"statements": [
											{
												"expression": {
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 822,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "5268:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 823,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "5276:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5268:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "5268:13:5"
											},
											{
												"expression": {
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 826,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "5292:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 827,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "5302:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5292:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "5292:17:5"
											},
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 830,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "5320:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 831,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "5336:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5336:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5320:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "5320:31:5"
											}
										]
									},
									"id": 836,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "5227:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "5213:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 816,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5213:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "5248:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "5234:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 818,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5234:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5212:44:5"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5257:0:5"
									},
									"scope": 2321,
									"src": "5201:158:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "5760:27:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5778:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 841,
												"id": 843,
												"nodeType": "Return",
												"src": "5771:8:5"
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "5561:128:5",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5704:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5717:2:5"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "5751:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5751:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5750:9:5"
									},
									"scope": 2321,
									"src": "5695:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "5930:39:5",
										"statements": [
											{
												"expression": {
													"id": 851,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 790,
													"src": "5948:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 850,
												"id": 852,
												"nodeType": "Return",
												"src": "5941:20:5"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "5795:65:5",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "5875:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5887:2:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "5921:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5921:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5920:9:5"
									},
									"scope": 2321,
									"src": "5866:103:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2378
									],
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "6249:253:5",
										"statements": [
											{
												"id": 868,
												"nodeType": "UncheckedBlock",
												"src": "6405:90:5",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 861,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "6437:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 862,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "6453:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6437:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 864,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "6468:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6468:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6437:46:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 860,
														"id": 867,
														"nodeType": "Return",
														"src": "6430:53:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "5977:196:5",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6188:11:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 857,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6222:8:5"
									},
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6199:2:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "6240:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6240:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6239:9:5"
									},
									"scope": 2321,
									"src": "6179:323:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "6664:232:5",
										"statements": [
											{
												"id": 881,
												"nodeType": "UncheckedBlock",
												"src": "6814:75:5",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 876,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "6846:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 877,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "6862:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6862:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6846:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 875,
														"id": 880,
														"nodeType": "Return",
														"src": "6839:38:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "6510:84:5",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "6609:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6621:2:5"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "6655:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6655:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6654:9:5"
									},
									"scope": 2321,
									"src": "6600:296:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "7042:38:5",
										"statements": [
											{
												"expression": {
													"id": 889,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 792,
													"src": "7060:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 888,
												"id": 890,
												"nodeType": "Return",
												"src": "7053:19:5"
											}
										]
									},
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "6904:68:5",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "6987:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6999:2:5"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "7033:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7033:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7032:9:5"
									},
									"scope": 2321,
									"src": "6978:102:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2421
									],
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "7444:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 901,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "7459:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7476:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7468:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 902,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7468:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7468:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7459:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 910,
												"nodeType": "IfStatement",
												"src": "7455:60:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 907,
															"name": "BalanceQueryForZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2333,
															"src": "7487:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7487:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 909,
													"nodeType": "RevertStatement",
													"src": "7480:35:5"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 911,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "7533:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 913,
														"indexExpression": {
															"id": 912,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "7552:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7533:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 914,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "7561:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7533:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 900,
												"id": 916,
												"nodeType": "Return",
												"src": "7526:62:5"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "7281:76:5",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7372:9:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 897,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7417:8:5"
									},
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7390:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "7382:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7382:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7381:15:5"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "7435:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7435:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7434:9:5"
									},
									"scope": 2321,
									"src": "7363:233:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "7748:108:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 926,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "7767:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 928,
																	"indexExpression": {
																		"id": 927,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 921,
																		"src": "7786:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7767:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 929,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "7796:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7767:50:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 931,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7766:52:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 932,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "7821:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7766:82:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 925,
												"id": 934,
												"nodeType": "Return",
												"src": "7759:89:5"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "7604:68:5",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "7687:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7709:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "7701:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7701:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7700:15:5"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "7739:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7738:9:5"
									},
									"scope": 2321,
									"src": "7678:178:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "8024:108:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 944,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "8043:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 946,
																	"indexExpression": {
																		"id": 945,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 939,
																		"src": "8062:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8043:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 947,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "8072:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8043:50:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 949,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8042:52:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 950,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "8097:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8042:82:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 943,
												"id": 952,
												"nodeType": "Return",
												"src": "8035:89:5"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "7864:84:5",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "7963:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7985:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "7977:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7977:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7976:15:5"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "8015:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8015:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8014:9:5"
									},
									"scope": 2321,
									"src": "7954:178:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "8313:74:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 964,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "8338:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 966,
																"indexExpression": {
																	"id": 965,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "8357:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8338:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 967,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "8367:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8338:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8331:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 962,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "8331:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8331:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 961,
												"id": 970,
												"nodeType": "Return",
												"src": "8324:55:5"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "8140:104:5",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "8259:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8275:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "8267:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8267:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8266:15:5"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "8305:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 959,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8305:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8304:8:5"
									},
									"scope": 2321,
									"src": "8250:137:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "8636:343:5",
										"statements": [
											{
												"assignments": [
													981
												],
												"declarations": [
													{
														"constant": false,
														"id": 981,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "8655:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1008,
														"src": "8647:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 980,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8647:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 985,
												"initialValue": {
													"baseExpression": {
														"id": 982,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "8664:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 984,
													"indexExpression": {
														"id": 983,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "8683:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8664:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8647:42:5"
											},
											{
												"assignments": [
													987
												],
												"declarations": [
													{
														"constant": false,
														"id": 987,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "8708:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 1008,
														"src": "8700:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 986,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8700:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 988,
												"nodeType": "VariableDeclarationStatement",
												"src": "8700:17:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8802:42:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8817:16:5",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "8830:3:5"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "8817:9:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 977,
														"isOffset": false,
														"isSlot": false,
														"src": "8830:3:5",
														"valueSize": 1
													},
													{
														"declaration": 987,
														"isOffset": false,
														"isSlot": false,
														"src": "8817:9:5",
														"valueSize": 1
													}
												],
												"id": 989,
												"nodeType": "InlineAssembly",
												"src": "8793:51:5"
											},
											{
												"expression": {
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 990,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "8854:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 991,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "8864:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 992,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 747,
																		"src": "8873:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8864:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 994,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8863:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 995,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 987,
																		"src": "8901:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 996,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "8914:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8901:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 998,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8900:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8863:63:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8854:72:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "8854:72:5"
											},
											{
												"expression": {
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1002,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "8937:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1004,
														"indexExpression": {
															"id": 1003,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "8956:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8937:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1005,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "8965:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8937:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "8937:34:5"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "8395:174:5",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "8584:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8600:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "8592:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8592:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "8614:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "8607:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 976,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8607:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8591:27:5"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8636:0:5"
									},
									"scope": 2321,
									"src": "8575:404:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2386
									],
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "9617:548:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1018,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "9935:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9950:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "9935:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1021,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "10012:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10027:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "10012:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9935:102:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1025,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "10089:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10104:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "10089:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9935:179:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1017,
												"id": 1029,
												"nodeType": "Return",
												"src": "9915:199:5"
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "9172:348:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "9535:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1014,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9593:8:5"
									},
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "9560:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "9553:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1011,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "9553:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9552:20:5"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "9611:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1015,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9611:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9610:6:5"
									},
									"scope": 2321,
									"src": "9526:639:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2501
									],
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "10497:31:5",
										"statements": [
											{
												"expression": {
													"id": 1038,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 794,
													"src": "10515:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1037,
												"id": 1039,
												"nodeType": "Return",
												"src": "10508:12:5"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "10362:60:5",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10437:4:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1034,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10464:8:5"
									},
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10441:2:5"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "10482:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1035,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10482:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10481:15:5"
									},
									"scope": 2321,
									"src": "10428:100:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2507
									],
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "10675:33:5",
										"statements": [
											{
												"expression": {
													"id": 1048,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 796,
													"src": "10693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1047,
												"id": 1049,
												"nodeType": "Return",
												"src": "10686:14:5"
											}
										]
									},
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "10536:62:5",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10613:6:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1044,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10642:8:5"
									},
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10619:2:5"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "10660:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1045,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10660:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10659:15:5"
									},
									"scope": 2321,
									"src": "10604:104:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2515
									],
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "10902:230:5",
										"statements": [
											{
												"condition": {
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10917:17:5",
													"subExpression": {
														"arguments": [
															{
																"id": 1061,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "10926:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1060,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "10918:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10918:16:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1067,
												"nodeType": "IfStatement",
												"src": "10913:59:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1064,
															"name": "URIQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "10943:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10943:29:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1066,
													"nodeType": "RevertStatement",
													"src": "10936:36:5"
												}
											},
											{
												"assignments": [
													1069
												],
												"declarations": [
													{
														"constant": false,
														"id": 1069,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "10999:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1093,
														"src": "10985:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1068,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10985:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1072,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1070,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "11009:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11009:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10985:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1075,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "11043:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11037:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1073,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "11037:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11037:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11037:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11062:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11037:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11122:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11037:87:5",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1084,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "11090:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1086,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1054,
																				"src": "11109:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1085,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2320,
																			"src": "11099:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11099:18:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1082,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "11073:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "11073:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11073:45:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11066:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1080,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "11066:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11066:53:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1059,
												"id": 1092,
												"nodeType": "Return",
												"src": "11030:94:5"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "10716:92:5",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "10823:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1056,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10869:8:5"
									},
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10840:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "10832:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10832:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10831:17:5"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "10887:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1057,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10887:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10886:15:5"
									},
									"scope": 2321,
									"src": "10814:318:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "11450:28:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11468:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1099,
												"id": 1101,
												"nodeType": "Return",
												"src": "11461:9:5"
											}
										]
									},
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "11140:238:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "11393:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11401:2:5"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "11435:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1097,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11435:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11434:15:5"
									},
									"scope": 2321,
									"src": "11384:94:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2429
									],
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "11902:71:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1117,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1106,
																			"src": "11955:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1116,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "11936:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11936:27:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11928:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1114,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11928:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11928:36:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11920:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1112,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11920:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11920:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1111,
												"id": 1121,
												"nodeType": "Return",
												"src": "11913:52:5"
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "11678:137:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "11830:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1108,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11875:8:5"
									},
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11846:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "11838:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11837:17:5"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "11893:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11893:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11892:9:5"
									},
									"scope": 2321,
									"src": "11821:152:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "12255:73:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1134,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "12311:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1133,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "12292:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12292:27:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1132,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "12273:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2372_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12273:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2372_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 1131,
												"id": 1137,
												"nodeType": "Return",
												"src": "12266:54:5"
											}
										]
									},
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "11981:175:5",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "12171:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12192:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "12184:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12184:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12183:17:5"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "12232:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2372_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1129,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1128,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2372,
														"src": "12232:14:5"
													},
													"referencedDeclaration": 2372,
													"src": "12232:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2372_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12231:23:5"
									},
									"scope": 2321,
									"src": "12162:166:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "12515:70:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1149,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 800,
																"src": "12552:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1151,
															"indexExpression": {
																"id": 1150,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "12570:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12552:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1148,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "12533:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$2372_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12533:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2372_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 1147,
												"id": 1153,
												"nodeType": "Return",
												"src": "12526:51:5"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "12336:82:5",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "12433:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "12446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12445:15:5"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "12492:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2372_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1145,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1144,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2372,
														"src": "12492:14:5"
													},
													"referencedDeclaration": 2372,
													"src": "12492:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2372_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12491:23:5"
									},
									"scope": 2321,
									"src": "12424:161:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "12762:132:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1161,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "12777:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1163,
														"indexExpression": {
															"id": 1162,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "12795:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12777:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12805:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12777:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"nodeType": "IfStatement",
												"src": "12773:114:5",
												"trueBody": {
													"id": 1174,
													"nodeType": "Block",
													"src": "12808:79:5",
													"statements": [
														{
															"expression": {
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1166,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "12823:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1168,
																	"indexExpression": {
																		"id": 1167,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "12841:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12823:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1170,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1158,
																			"src": "12869:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1169,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "12850:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12850:25:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12823:52:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1173,
															"nodeType": "ExpressionStatement",
															"src": "12823:52:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "12593:99:5",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "12707:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12738:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "12730:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12730:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12729:15:5"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12762:0:5"
									},
									"scope": 2321,
									"src": "12698:196:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "13052:1199:5",
										"statements": [
											{
												"assignments": [
													1186
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "curr",
														"nameLocation": "13071:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "13063:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1185,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13063:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1188,
												"initialValue": {
													"id": 1187,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1180,
													"src": "13078:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13063:22:5"
											},
											{
												"id": 1226,
												"nodeType": "UncheckedBlock",
												"src": "13098:1097:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1189,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "13127:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13127:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1191,
																"name": "curr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "13146:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13127:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1225,
														"nodeType": "IfStatement",
														"src": "13123:1061:5",
														"trueBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1193,
																	"name": "curr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "13173:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1194,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "13180:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13173:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1224,
															"nodeType": "IfStatement",
															"src": "13169:1015:5",
															"trueBody": {
																"id": 1223,
																"nodeType": "Block",
																"src": "13195:989:5",
																"statements": [
																	{
																		"assignments": [
																			1197
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1197,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "13226:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1223,
																				"src": "13218:14:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1196,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "13218:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1201,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1198,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "13235:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1200,
																			"indexExpression": {
																				"id": 1199,
																				"name": "curr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1186,
																				"src": "13253:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13235:23:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "13218:40:5"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1204,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1202,
																					"name": "packed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1197,
																					"src": "13324:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"id": 1203,
																					"name": "_BITMASK_BURNED",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "13333:15:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13324:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13352:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "13324:29:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1222,
																		"nodeType": "IfStatement",
																		"src": "13320:845:5",
																		"trueBody": {
																			"id": 1221,
																			"nodeType": "Block",
																			"src": "13355:810:5",
																			"statements": [
																				{
																					"body": {
																						"id": 1217,
																						"nodeType": "Block",
																						"src": "14009:93:5",
																						"statements": [
																							{
																								"expression": {
																									"id": 1215,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1210,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1197,
																										"src": "14040:6:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"baseExpression": {
																											"id": 1211,
																											"name": "_packedOwnerships",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 800,
																											"src": "14049:17:5",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																												"typeString": "mapping(uint256 => uint256)"
																											}
																										},
																										"id": 1214,
																										"indexExpression": {
																											"id": 1213,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "UnaryOperation",
																											"operator": "--",
																											"prefix": true,
																											"src": "14067:6:5",
																											"subExpression": {
																												"id": 1212,
																												"name": "curr",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1186,
																												"src": "14069:4:5",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "14049:25:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "14040:34:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1216,
																								"nodeType": "ExpressionStatement",
																								"src": "14040:34:5"
																							}
																						]
																					},
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1209,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1207,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1197,
																							"src": "13996:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1208,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14006:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "13996:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1218,
																					"nodeType": "WhileStatement",
																					"src": "13989:113:5"
																				},
																				{
																					"expression": {
																						"id": 1219,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1197,
																						"src": "14135:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 1184,
																					"id": 1220,
																					"nodeType": "Return",
																					"src": "14128:13:5"
																				}
																			]
																		}
																	}
																]
															}
														}
													}
												]
											},
											{
												"errorCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1227,
														"name": "OwnerQueryForNonexistentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2342,
														"src": "14212:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14212:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "RevertStatement",
												"src": "14205:38:5"
											}
										]
									},
									"documentation": {
										"id": 1178,
										"nodeType": "StructuredDocumentation",
										"src": "12902:68:5",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "12985:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13012:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "13004:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13004:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13003:17:5"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "13043:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13043:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13042:9:5"
									},
									"scope": 2321,
									"src": "12976:1275:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "14449:267:5",
										"statements": [
											{
												"expression": {
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1240,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "14460:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2372_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2365,
														"src": "14460:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1247,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "14493:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14485:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1245,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "14485:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14485:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14477:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1243,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14477:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14477:24:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14460:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "14460:41:5"
											},
											{
												"expression": {
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1252,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "14512:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2372_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2367,
														"src": "14512:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1257,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "14546:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1258,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "14556:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14546:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14539:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 1255,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "14539:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14539:41:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "14512:68:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "14512:68:5"
											},
											{
												"expression": {
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1263,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "14591:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2372_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2369,
														"src": "14591:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1266,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1234,
																"src": "14610:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1267,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "14619:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14610:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14638:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14610:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14591:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "14591:48:5"
											},
											{
												"expression": {
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1273,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "14650:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$2372_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2371,
														"src": "14650:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1278,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "14679:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 1279,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "14689:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14679:28:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14672:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 1276,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "14672:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14672:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "14650:58:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "14650:58:5"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "14259:85:5",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "14359:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "14386:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "14378:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14378:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14377:16:5"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "14438:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "14416:31:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$2372_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 1237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1236,
														"name": "TokenOwnership",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2372,
														"src": "14416:14:5"
													},
													"referencedDeclaration": 2372,
													"src": "14416:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$2372_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14415:33:5"
									},
									"scope": 2321,
									"src": "14350:366:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "14895:354:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14915:327:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15027:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15040:5:5"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "15047:16:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15036:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15036:28:5"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "15027:5:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15158:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15171:5:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "15185:23:5"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "15210:9:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15210:11:5"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "15181:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15181:41:5"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "15224:5:5"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "15178:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15178:52:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15168:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15168:63:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15158:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 782,
														"isOffset": false,
														"isSlot": false,
														"src": "15047:16:5",
														"valueSize": 1
													},
													{
														"declaration": 750,
														"isOffset": false,
														"isSlot": false,
														"src": "15185:23:5",
														"valueSize": 1
													},
													{
														"declaration": 1290,
														"isOffset": false,
														"isSlot": false,
														"src": "15224:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1288,
														"isOffset": false,
														"isSlot": false,
														"src": "15027:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1288,
														"isOffset": false,
														"isSlot": false,
														"src": "15040:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1288,
														"isOffset": false,
														"isSlot": false,
														"src": "15171:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1293,
														"isOffset": false,
														"isSlot": false,
														"src": "15158:6:5",
														"valueSize": 1
													}
												],
												"id": 1295,
												"nodeType": "InlineAssembly",
												"src": "14906:336:5"
											}
										]
									},
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "14724:69:5",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "14808:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14835:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "14827:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "14850:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "14842:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14842:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14826:30:5"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14887:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "14879:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14879:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14878:16:5"
									},
									"scope": 2321,
									"src": "14799:450:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "15437:238:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15523:145:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15601:56:5",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "15615:24:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "15644:8:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15654:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15641:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15641:15:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "15611:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15611:46:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15601:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 758,
														"isOffset": false,
														"isSlot": false,
														"src": "15615:24:5",
														"valueSize": 1
													},
													{
														"declaration": 1300,
														"isOffset": false,
														"isSlot": false,
														"src": "15644:8:5",
														"valueSize": 1
													},
													{
														"declaration": 1303,
														"isOffset": false,
														"isSlot": false,
														"src": "15601:6:5",
														"valueSize": 1
													}
												],
												"id": 1305,
												"nodeType": "InlineAssembly",
												"src": "15514:154:5"
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "15257:88:5",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "15360:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15389:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "15381:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15381:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15380:18:5"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15429:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "15421:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15421:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15420:16:5"
									},
									"scope": 2321,
									"src": "15351:324:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2469
									],
									"body": {
										"id": 1351,
										"nodeType": "Block",
										"src": "16422:330:5",
										"statements": [
											{
												"assignments": [
													1317
												],
												"declarations": [
													{
														"constant": false,
														"id": 1317,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16441:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1351,
														"src": "16433:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1316,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16433:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1321,
												"initialValue": {
													"arguments": [
														{
															"id": 1319,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "16457:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1318,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "16449:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16449:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16433:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1322,
															"name": "_msgSenderERC721A",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "16482:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16482:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1324,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "16505:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16482:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1337,
												"nodeType": "IfStatement",
												"src": "16478:175:5",
												"trueBody": {
													"condition": {
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "16529:45:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 1327,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "16547:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1328,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "16554:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16554:19:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1326,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "16530:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16530:44:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1336,
													"nodeType": "IfStatement",
													"src": "16525:128:5",
													"trueBody": {
														"id": 1335,
														"nodeType": "Block",
														"src": "16576:77:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1332,
																		"name": "ApprovalCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2327,
																		"src": "16602:33:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16602:35:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1334,
																"nodeType": "RevertStatement",
																"src": "16595:42:5"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1338,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "16665:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$722_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 1340,
															"indexExpression": {
																"id": 1339,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "16681:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "16665:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$722_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 721,
														"src": "16665:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1342,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "16698:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16665:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "16665:35:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1346,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "16725:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1347,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "16732:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1348,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "16736:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1345,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2404,
														"src": "16716:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16716:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1350,
												"nodeType": "EmitStatement",
												"src": "16711:33:5"
											}
										]
									},
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "15874:472:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "16361:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1314,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16413:8:5"
									},
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16377:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "16369:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16369:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16389:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "16381:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16381:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16368:29:5"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16422:0:5"
									},
									"scope": 2321,
									"src": "16352:400:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2485
									],
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "16996:133:5",
										"statements": [
											{
												"condition": {
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "17011:17:5",
													"subExpression": {
														"arguments": [
															{
																"id": 1362,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "17020:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1361,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "17012:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17012:16:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1368,
												"nodeType": "IfStatement",
												"src": "17007:64:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1365,
															"name": "ApprovalQueryForNonexistentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2330,
															"src": "17037:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17037:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1367,
													"nodeType": "RevertStatement",
													"src": "17030:41:5"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1369,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "17091:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$722_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 1371,
														"indexExpression": {
															"id": 1370,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "17107:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17091:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$722_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 721,
													"src": "17091:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1360,
												"id": 1373,
												"nodeType": "Return",
												"src": "17084:37:5"
											}
										]
									},
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "16760:145:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "16920:11:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1357,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16969:8:5"
									},
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "16932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16932:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16931:17:5"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "16987:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16987:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16986:9:5"
									},
									"scope": 2321,
									"src": "16911:218:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2477
									],
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "17553:150:5",
										"statements": [
											{
												"expression": {
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1384,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "17564:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1388,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1385,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2310,
																	"src": "17583:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17583:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17564:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1389,
														"indexExpression": {
															"id": 1387,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "17604:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17564:49:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1390,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "17616:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17564:60:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "17564:60:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1394,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "17655:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17655:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1396,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "17676:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1397,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "17686:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1393,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2413,
														"src": "17640:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17640:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "EmitStatement",
												"src": "17635:60:5"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "17137:326:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "17478:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1382,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17544:8:5"
									},
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17504:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "17496:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17496:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17519:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "17514:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1379,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17514:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17495:33:5"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17553:0:5"
									},
									"scope": 2321,
									"src": "17469:234:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2495
									],
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "17963:61:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1412,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "17981:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1414,
														"indexExpression": {
															"id": 1413,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "18000:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17981:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1416,
													"indexExpression": {
														"id": 1415,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "18007:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17981:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1411,
												"id": 1417,
												"nodeType": "Return",
												"src": "17974:42:5"
											}
										]
									},
									"documentation": {
										"id": 1402,
										"nodeType": "StructuredDocumentation",
										"src": "17711:143:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17869:16:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1408,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17939:8:5"
									},
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17894:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "17886:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17886:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17909:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "17901:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17901:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17885:33:5"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "17957:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17957:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17956:6:5"
									},
									"scope": 2321,
									"src": "17860:164:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "18353:211:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1427,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "18384:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18384:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1429,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "18403:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18384:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1431,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "18427:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1432,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "18437:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18427:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "18384:66:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1435,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "18488:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1437,
																"indexExpression": {
																	"id": 1436,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "18506:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18488:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1438,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "18517:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18488:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18536:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "18488:49:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18384:153:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1426,
												"id": 1443,
												"nodeType": "Return",
												"src": "18364:173:5"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "18032:244:5",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "18291:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18307:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "18299:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18299:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18298:17:5"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "18347:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18347:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18346:6:5"
									},
									"scope": 2321,
									"src": "18282:282:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1458,
										"nodeType": "Block",
										"src": "18835:497:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18855:470:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18967:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "18980:5:5"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "18987:16:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18976:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18976:28:5"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "18967:5:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19119:45:5",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "19136:9:5"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "19147:16:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19132:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19132:32:5"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "19119:9:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19248:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "19264:9:5"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "19275:5:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19261:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19261:20:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "19286:9:5"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "19297:15:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19283:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19283:30:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19258:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19258:56:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "19248:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 782,
														"isOffset": false,
														"isSlot": false,
														"src": "18987:16:5",
														"valueSize": 1
													},
													{
														"declaration": 782,
														"isOffset": false,
														"isSlot": false,
														"src": "19147:16:5",
														"valueSize": 1
													},
													{
														"declaration": 1448,
														"isOffset": false,
														"isSlot": false,
														"src": "19297:15:5",
														"valueSize": 1
													},
													{
														"declaration": 1452,
														"isOffset": false,
														"isSlot": false,
														"src": "19119:9:5",
														"valueSize": 1
													},
													{
														"declaration": 1452,
														"isOffset": false,
														"isSlot": false,
														"src": "19136:9:5",
														"valueSize": 1
													},
													{
														"declaration": 1452,
														"isOffset": false,
														"isSlot": false,
														"src": "19264:9:5",
														"valueSize": 1
													},
													{
														"declaration": 1452,
														"isOffset": false,
														"isSlot": false,
														"src": "19286:9:5",
														"valueSize": 1
													},
													{
														"declaration": 1450,
														"isOffset": false,
														"isSlot": false,
														"src": "18967:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1450,
														"isOffset": false,
														"isSlot": false,
														"src": "18980:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1450,
														"isOffset": false,
														"isSlot": false,
														"src": "19275:5:5",
														"valueSize": 1
													},
													{
														"declaration": 1455,
														"isOffset": false,
														"isSlot": false,
														"src": "19248:6:5",
														"valueSize": 1
													}
												],
												"id": 1457,
												"nodeType": "InlineAssembly",
												"src": "18846:479:5"
											}
										]
									},
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "18572:95:5",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 1459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "18682:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18725:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "18717:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18717:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18759:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "18751:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18751:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "18783:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "18775:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18775:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18706:93:5"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18827:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "18822:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1454,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18822:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18821:13:5"
									},
									"scope": 2321,
									"src": "18673:659:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "19606:324:5",
										"statements": [
											{
												"assignments": [
													1471
												],
												"declarations": [
													{
														"constant": false,
														"id": 1471,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "19642:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1477,
														"src": "19617:38:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$722_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 1470,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1469,
																"name": "TokenApprovalRef",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 722,
																"src": "19617:16:5"
															},
															"referencedDeclaration": 722,
															"src": "19617:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$722_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1475,
												"initialValue": {
													"baseExpression": {
														"id": 1472,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "19658:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$722_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 1474,
													"indexExpression": {
														"id": 1473,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "19674:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19658:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$722_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19617:65:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19797:126:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19812:41:5",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "19835:18:5"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "19812:19:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19867:45:5",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "19892:19:5"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "19886:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "19886:26:5"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "19867:15:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "19867:15:5",
														"valueSize": 1
													},
													{
														"declaration": 1465,
														"isOffset": false,
														"isSlot": false,
														"src": "19812:19:5",
														"valueSize": 1
													},
													{
														"declaration": 1465,
														"isOffset": false,
														"isSlot": false,
														"src": "19892:19:5",
														"valueSize": 1
													},
													{
														"declaration": 1471,
														"isOffset": false,
														"isSlot": true,
														"src": "19835:18:5",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1476,
												"nodeType": "InlineAssembly",
												"src": "19788:135:5"
											}
										]
									},
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "19340:99:5",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "19454:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19489:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "19481:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19481:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19480:17:5"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "19555:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "19547:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19547:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "19584:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "19576:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19576:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19546:54:5"
									},
									"scope": 2321,
									"src": "19445:485:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2461
									],
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "20673:2694:5",
										"statements": [
											{
												"assignments": [
													1490
												],
												"declarations": [
													{
														"constant": false,
														"id": 1490,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "20692:19:5",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "20684:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1489,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20684:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1494,
												"initialValue": {
													"arguments": [
														{
															"id": 1492,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "20733:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1491,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "20714:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20714:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20684:57:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1499,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "20774:19:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20766:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1497,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20766:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20766:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20758:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1495,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20758:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20758:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1502,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "20799:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20758:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1507,
												"nodeType": "IfStatement",
												"src": "20754:86:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1504,
															"name": "TransferFromIncorrectOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2348,
															"src": "20812:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20812:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1506,
													"nodeType": "RevertStatement",
													"src": "20805:35:5"
												}
											},
											{
												"assignments": [
													1509,
													1511
												],
												"declarations": [
													{
														"constant": false,
														"id": 1509,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "20862:19:5",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "20854:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1508,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20854:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1511,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "20891:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1622,
														"src": "20883:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1510,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20883:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1515,
												"initialValue": {
													"arguments": [
														{
															"id": 1513,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "20937:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1512,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "20910:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20910:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20853:92:5"
											},
											{
												"condition": {
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "21044:69:5",
													"subExpression": {
														"arguments": [
															{
																"id": 1517,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "21070:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1518,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "21087:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1519,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2310,
																	"src": "21093:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21093:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1516,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "21045:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21045:68:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1533,
												"nodeType": "IfStatement",
												"src": "21040:180:5",
												"trueBody": {
													"condition": {
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "21132:44:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 1524,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "21150:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1525,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "21156:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21156:19:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1523,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "21133:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21133:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1532,
													"nodeType": "IfStatement",
													"src": "21128:92:5",
													"trueBody": {
														"errorCall": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1529,
																"name": "TransferCallerNotOwnerNorApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2345,
																"src": "21185:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21185:35:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1531,
														"nodeType": "RevertStatement",
														"src": "21178:42:5"
													}
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1534,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "21237:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21243:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1535,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "21243:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21243:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "21237:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1543,
												"nodeType": "IfStatement",
												"src": "21233:52:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1540,
															"name": "TransferToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2354,
															"src": "21262:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21262:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1542,
													"nodeType": "RevertStatement",
													"src": "21255:30:5"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1545,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "21320:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1546,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "21326:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1547,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "21330:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21339:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1544,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "21298:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21298:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "21298:43:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21416:186:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21450:141:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "21553:19:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21574:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "21546:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21546:30:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21546:30:5"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "21434:15:5"
															},
															"nodeType": "YulIf",
															"src": "21431:160:5"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1511,
														"isOffset": false,
														"isSlot": false,
														"src": "21434:15:5",
														"valueSize": 1
													},
													{
														"declaration": 1509,
														"isOffset": false,
														"isSlot": false,
														"src": "21553:19:5",
														"valueSize": 1
													}
												],
												"id": 1551,
												"nodeType": "InlineAssembly",
												"src": "21407:195:5"
											},
											{
												"id": 1608,
												"nodeType": "UncheckedBlock",
												"src": "21874:1388:5",
												"statements": [
													{
														"expression": {
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "21969:26:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1552,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "21971:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1554,
																"indexExpression": {
																	"id": 1553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "21990:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21971:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1556,
														"nodeType": "ExpressionStatement",
														"src": "21969:26:5"
													},
													{
														"expression": {
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "22038:24:5",
															"subExpression": {
																"baseExpression": {
																	"id": 1557,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "22040:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1559,
																"indexExpression": {
																	"id": 1558,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1483,
																	"src": "22059:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "22040:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1561,
														"nodeType": "ExpressionStatement",
														"src": "22038:24:5"
													},
													{
														"expression": {
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1562,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "22333:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1564,
																"indexExpression": {
																	"id": 1563,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1485,
																	"src": "22351:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "22333:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1566,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1483,
																		"src": "22399:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1567,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 763,
																			"src": "22420:25:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1569,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1481,
																					"src": "22463:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1570,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1483,
																					"src": "22469:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1571,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1490,
																					"src": "22473:19:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1568,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2300,
																				"src": "22448:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22448:45:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22420:73:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1565,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "22362:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22362:146:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22333:175:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1576,
														"nodeType": "ExpressionStatement",
														"src": "22333:175:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1577,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1490,
																	"src": "22628:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1578,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "22650:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22628:47:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22679:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22628:52:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1607,
														"nodeType": "IfStatement",
														"src": "22624:627:5",
														"trueBody": {
															"id": 1606,
															"nodeType": "Block",
															"src": "22682:569:5",
															"statements": [
																{
																	"assignments": [
																		1583
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1583,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "22709:11:5",
																			"nodeType": "VariableDeclaration",
																			"scope": 1606,
																			"src": "22701:19:5",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1582,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22701:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1587,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1584,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1485,
																			"src": "22723:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22733:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22723:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22701:33:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1588,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "22856:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1590,
																			"indexExpression": {
																				"id": 1589,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "22874:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22856:30:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22890:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "22856:35:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1605,
																	"nodeType": "IfStatement",
																	"src": "22852:384:5",
																	"trueBody": {
																		"id": 1604,
																		"nodeType": "Block",
																		"src": "22893:343:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1595,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1593,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1583,
																						"src": "22979:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1594,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 790,
																						"src": "22994:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22979:28:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1603,
																				"nodeType": "IfStatement",
																				"src": "22975:242:5",
																				"trueBody": {
																					"id": 1602,
																					"nodeType": "Block",
																					"src": "23009:208:5",
																					"statements": [
																						{
																							"expression": {
																								"id": 1600,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1596,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 800,
																										"src": "23141:17:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1598,
																									"indexExpression": {
																										"id": 1597,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1583,
																										"src": "23159:11:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "23141:30:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1599,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1490,
																									"src": "23174:19:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "23141:52:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1601,
																							"nodeType": "ExpressionStatement",
																							"src": "23141:52:5"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1610,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "23288:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1611,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "23294:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1612,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "23298:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1609,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2395,
														"src": "23279:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23279:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "EmitStatement",
												"src": "23274:32:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1616,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "23338:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1617,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "23344:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1618,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "23348:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23357:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1615,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "23317:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23317:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "23317:42:5"
											}
										]
									},
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "20129:415:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "20559:12:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1487,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20664:8:5"
									},
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20590:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "20582:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20613:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "20605:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20605:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20634:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "20626:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20626:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20571:77:5"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20673:0:5"
									},
									"scope": 2321,
									"src": "20550:2817:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2451
									],
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "23590:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1635,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "23618:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1636,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1628,
															"src": "23624:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1637,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "23628:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23637:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1634,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1642,
															1680
														],
														"referencedDeclaration": 1680,
														"src": "23601:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23601:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "23601:39:5"
											}
										]
									},
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "23375:82:5",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23472:16:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1632,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23581:8:5"
									},
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23507:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "23499:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23499:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23530:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "23522:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23522:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23551:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "23543:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23543:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23488:77:5"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23590:0:5"
									},
									"scope": 2321,
									"src": "23463:185:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2441
									],
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "24402:243:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1656,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1645,
															"src": "24426:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1657,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "24432:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1658,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "24436:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1655,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "24413:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24413:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1660,
												"nodeType": "ExpressionStatement",
												"src": "24413:31:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1661,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1647,
																"src": "24459:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "24459:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "24459:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24477:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24459:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1678,
												"nodeType": "IfStatement",
												"src": "24455:183:5",
												"trueBody": {
													"condition": {
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "24497:57:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 1667,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1645,
																	"src": "24529:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1668,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "24535:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1669,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "24539:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1670,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1651,
																	"src": "24548:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1666,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "24498:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24498:56:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1677,
													"nodeType": "IfStatement",
													"src": "24493:145:5",
													"trueBody": {
														"id": 1676,
														"nodeType": "Block",
														"src": "24556:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1673,
																		"name": "TransferToNonERC721ReceiverImplementer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2351,
																		"src": "24582:38:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24582:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1675,
																"nodeType": "RevertStatement",
																"src": "24575:47:5"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "23656:584:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24255:16:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1653,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24393:8:5"
									},
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24290:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "24282:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24282:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24313:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "24305:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24305:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "24326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24326:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "24365:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "24352:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24352:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24271:106:5"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24402:0:5"
									},
									"scope": 2321,
									"src": "24246:399:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "25464:2:5",
										"statements": []
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "24653:648:5",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "25316:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25356:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "25348:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25348:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25379:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "25371:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25371:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "25400:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "25392:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25392:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "25431:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "25423:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25337:109:5"
									},
									"returnParameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25464:0:5"
									},
									"scope": 2321,
									"src": "25307:159:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "26287:2:5",
										"statements": []
									},
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "25474:651:5",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "26140:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26179:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "26171:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26171:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26202:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "26194:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26194:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "26223:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "26215:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26215:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "26254:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "26246:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26160:109:5"
									},
									"returnParameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26287:0:5"
									},
									"scope": 2321,
									"src": "26131:158:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "26898:547:5",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1741,
															"nodeType": "Block",
															"src": "27050:98:5",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1733,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "27072:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1735,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1711,
																							"src": "27107:2:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1734,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 716,
																						"src": "27082:24:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$716_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1736,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27082:28:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$716",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 715,
																				"src": "27082:45:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "27082:54:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "27072:64:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1719,
																	"id": 1740,
																	"nodeType": "Return",
																	"src": "27065:71:5"
																}
															]
														},
														"errorName": "",
														"id": 1742,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1732,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1731,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "27032:6:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1742,
																	"src": "27025:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1730,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "27025:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "27010:39:5"
														},
														"src": "27002:146:5"
													},
													{
														"block": {
															"id": 1757,
															"nodeType": "Block",
															"src": "27177:261:5",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1746,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "27196:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "27196:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27213:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "27196:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 1755,
																		"nodeType": "Block",
																		"src": "27304:123:5",
																		"statements": [
																			{
																				"AST": {
																					"nodeType": "YulBlock",
																					"src": "27332:80:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"kind": "number",
																												"nodeType": "YulLiteral",
																												"src": "27366:2:5",
																												"type": "",
																												"value": "32"
																											},
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "27370:6:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "27362:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27362:15:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "reason",
																												"nodeType": "YulIdentifier",
																												"src": "27385:6:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "27379:5:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "27379:13:5"
																									}
																								],
																								"functionName": {
																									"name": "revert",
																									"nodeType": "YulIdentifier",
																									"src": "27355:6:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "27355:38:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "27355:38:5"
																						}
																					]
																				},
																				"evmVersion": "london",
																				"externalReferences": [
																					{
																						"declaration": 1744,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "27370:6:5",
																						"valueSize": 1
																					},
																					{
																						"declaration": 1744,
																						"isOffset": false,
																						"isSlot": false,
																						"src": "27385:6:5",
																						"valueSize": 1
																					}
																				],
																				"id": 1754,
																				"nodeType": "InlineAssembly",
																				"src": "27323:89:5"
																			}
																		]
																	},
																	"id": 1756,
																	"nodeType": "IfStatement",
																	"src": "27192:235:5",
																	"trueBody": {
																		"id": 1753,
																		"nodeType": "Block",
																		"src": "27216:82:5",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1750,
																						"name": "TransferToNonERC721ReceiverImplementer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2351,
																						"src": "27242:38:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 1751,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27242:40:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1752,
																				"nodeType": "RevertStatement",
																				"src": "27235:47:5"
																			}
																		]
																	}
																}
															]
														},
														"errorName": "",
														"id": 1758,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1745,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1744,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "27169:6:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1758,
																	"src": "27156:19:5",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1743,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "27156:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "27155:21:5"
														},
														"src": "27149:289:5"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1724,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "26959:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26959:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1726,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "26980:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1727,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "26986:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1728,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "26995:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1721,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "26938:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1720,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "26913:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$716_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26913:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$716",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 715,
														"src": "26913:45:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26913:88:5",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1759,
												"nodeType": "TryStatement",
												"src": "26909:529:5"
											}
										]
									},
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "26297:426:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "26738:30:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26787:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "26779:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26779:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26810:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "26802:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26802:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26831:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "26823:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26823:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "26862:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "26849:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1714,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26849:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26768:106:5"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "26892:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1717,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26892:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26891:6:5"
									},
									"scope": 2321,
									"src": "26729:716:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1856,
										"nodeType": "Block",
										"src": "27969:2658:5",
										"statements": [
											{
												"assignments": [
													1770
												],
												"declarations": [
													{
														"constant": false,
														"id": 1770,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "27988:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 1856,
														"src": "27980:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1769,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27980:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1772,
												"initialValue": {
													"id": 1771,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 790,
													"src": "28003:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27980:36:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1773,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "28031:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28043:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "28031:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1779,
												"nodeType": "IfStatement",
												"src": "28027:44:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1776,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "28053:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28053:18:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1778,
													"nodeType": "RevertStatement",
													"src": "28046:25:5"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28114:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28106:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1781,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28106:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28106:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1785,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "28118:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1786,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "28122:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1787,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "28136:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1780,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "28084:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28084:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1789,
												"nodeType": "ExpressionStatement",
												"src": "28084:61:5"
											},
											{
												"id": 1845,
												"nodeType": "UncheckedBlock",
												"src": "28333:2216:5",
												"statements": [
													{
														"expression": {
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1790,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "28559:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1792,
																"indexExpression": {
																	"id": 1791,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1764,
																	"src": "28578:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28559:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1793,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "28585:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1796,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1794,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28598:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1795,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 733,
																							"src": "28603:21:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "28598:26:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1797,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "28597:28:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28628:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "28597:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1800,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "28596:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28585:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28559:71:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1803,
														"nodeType": "ExpressionStatement",
														"src": "28559:71:5"
													},
													{
														"expression": {
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1804,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "28873:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1806,
																"indexExpression": {
																	"id": 1805,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "28891:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28873:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1808,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1764,
																		"src": "28944:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1810,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1766,
																					"src": "28986:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1809,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1307,
																				"src": "28965:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28965:30:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1815,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "29021:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1814,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "29013:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1813,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "29013:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1816,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29013:10:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1817,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1764,
																					"src": "29025:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1818,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "29029:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1812,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2300,
																				"src": "28998:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28998:33:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28965:66:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1807,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "28907:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28907:139:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28873:173:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1823,
														"nodeType": "ExpressionStatement",
														"src": "28873:173:5"
													},
													{
														"assignments": [
															1825
														],
														"declarations": [
															{
																"constant": false,
																"id": 1825,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "29071:8:5",
																"nodeType": "VariableDeclaration",
																"scope": 1845,
																"src": "29063:16:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1824,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29063:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1826,
														"nodeType": "VariableDeclarationStatement",
														"src": "29063:16:5"
													},
													{
														"assignments": [
															1828
														],
														"declarations": [
															{
																"constant": false,
																"id": 1828,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "29102:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 1845,
																"src": "29094:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1827,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29094:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1832,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1829,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1770,
																"src": "29108:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1830,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "29123:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29108:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29094:37:5"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "29507:935:5",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "29624:37:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "to",
																				"nodeType": "YulIdentifier",
																				"src": "29640:2:5"
																			},
																			{
																				"name": "_BITMASK_ADDRESS",
																				"nodeType": "YulIdentifier",
																				"src": "29644:16:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "29636:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29636:25:5"
																	},
																	"variableNames": [
																		{
																			"name": "toMasked",
																			"nodeType": "YulIdentifier",
																			"src": "29624:8:5"
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29753:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29814:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "_TRANSFER_EVENT_SIGNATURE",
																				"nodeType": "YulIdentifier",
																				"src": "29873:25:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29935:1:5",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"name": "toMasked",
																				"nodeType": "YulIdentifier",
																				"src": "29976:8:5"
																			},
																			{
																				"name": "startTokenId",
																				"nodeType": "YulIdentifier",
																				"src": "30016:12:5"
																			}
																		],
																		"functionName": {
																			"name": "log4",
																			"nodeType": "YulIdentifier",
																			"src": "29726:4:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29726:335:5"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "29726:335:5"
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "30257:170:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30354:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30357:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nodeType": "YulIdentifier",
																							"src": "30360:25:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30387:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nodeType": "YulIdentifier",
																							"src": "30390:8:5"
																						},
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30400:7:5"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nodeType": "YulIdentifier",
																						"src": "30349:4:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30349:59:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "30349:59:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "30173:7:5"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "30182:3:5"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "30170:2:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30170:16:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "30163:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30163:24:5"
																	},
																	"nodeType": "YulForLoop",
																	"post": {
																		"nodeType": "YulBlock",
																		"src": "30188:68:5",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "30211:26:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30226:7:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30235:1:5",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "30222:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30222:15:5"
																				},
																				"variableNames": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulIdentifier",
																						"src": "30211:7:5"
																					}
																				]
																			}
																		]
																	},
																	"pre": {
																		"nodeType": "YulBlock",
																		"src": "30085:77:5",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "30108:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "startTokenId",
																							"nodeType": "YulIdentifier",
																							"src": "30127:12:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "30141:1:5",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "30123:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "30123:20:5"
																				},
																				"variables": [
																					{
																						"name": "tokenId",
																						"nodeType": "YulTypedName",
																						"src": "30112:7:5",
																						"type": ""
																					}
																				]
																			}
																		]
																	},
																	"src": "30081:346:5"
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 782,
																"isOffset": false,
																"isSlot": false,
																"src": "29644:16:5",
																"valueSize": 1
															},
															{
																"declaration": 788,
																"isOffset": false,
																"isSlot": false,
																"src": "29873:25:5",
																"valueSize": 1
															},
															{
																"declaration": 788,
																"isOffset": false,
																"isSlot": false,
																"src": "30360:25:5",
																"valueSize": 1
															},
															{
																"declaration": 1828,
																"isOffset": false,
																"isSlot": false,
																"src": "30182:3:5",
																"valueSize": 1
															},
															{
																"declaration": 1770,
																"isOffset": false,
																"isSlot": false,
																"src": "30016:12:5",
																"valueSize": 1
															},
															{
																"declaration": 1770,
																"isOffset": false,
																"isSlot": false,
																"src": "30127:12:5",
																"valueSize": 1
															},
															{
																"declaration": 1764,
																"isOffset": false,
																"isSlot": false,
																"src": "29640:2:5",
																"valueSize": 1
															},
															{
																"declaration": 1825,
																"isOffset": false,
																"isSlot": false,
																"src": "29624:8:5",
																"valueSize": 1
															},
															{
																"declaration": 1825,
																"isOffset": false,
																"isSlot": false,
																"src": "29976:8:5",
																"valueSize": 1
															},
															{
																"declaration": 1825,
																"isOffset": false,
																"isSlot": false,
																"src": "30390:8:5",
																"valueSize": 1
															}
														],
														"id": 1833,
														"nodeType": "InlineAssembly",
														"src": "29498:944:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1834,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1825,
																"src": "30460:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30472:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30460:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1840,
														"nodeType": "IfStatement",
														"src": "30456:45:5",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1837,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2336,
																	"src": "30482:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30482:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1839,
															"nodeType": "RevertStatement",
															"src": "30475:26:5"
														}
													},
													{
														"expression": {
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1841,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "30518:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1842,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "30534:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30518:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1844,
														"nodeType": "ExpressionStatement",
														"src": "30518:19:5"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30588:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30580:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1847,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30580:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30580:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1851,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "30592:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1852,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "30596:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1853,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "30610:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1846,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "30559:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30559:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1855,
												"nodeType": "ExpressionStatement",
												"src": "30559:60:5"
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "27642:259:5",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "27916:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27930:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "27922:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27922:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "27942:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "27934:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27934:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27921:30:5"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27969:0:5"
									},
									"scope": 2321,
									"src": "27907:2720:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "31559:1406:5",
										"statements": [
											{
												"assignments": [
													1866
												],
												"declarations": [
													{
														"constant": false,
														"id": 1866,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "31578:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "31570:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1865,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31570:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1868,
												"initialValue": {
													"id": 1867,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 790,
													"src": "31593:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31570:36:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1869,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1860,
														"src": "31621:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31635:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31627:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1870,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "31627:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31627:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31621:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1878,
												"nodeType": "IfStatement",
												"src": "31617:48:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1875,
															"name": "MintToZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "31646:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31646:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1877,
													"nodeType": "RevertStatement",
													"src": "31639:26:5"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1879,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "31680:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31692:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31680:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1885,
												"nodeType": "IfStatement",
												"src": "31676:44:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1882,
															"name": "MintZeroQuantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "31702:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31702:18:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1884,
													"nodeType": "RevertStatement",
													"src": "31695:25:5"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1886,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "31735:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1887,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "31746:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31735:43:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1892,
												"nodeType": "IfStatement",
												"src": "31731:89:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1889,
															"name": "MintERC2309QuantityExceedsLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2360,
															"src": "31787:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31787:33:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1891,
													"nodeType": "RevertStatement",
													"src": "31780:40:5"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31863:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31855:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1894,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31855:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31855:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1898,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "31867:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1899,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "31871:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1900,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "31885:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1893,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "31833:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31833:61:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1902,
												"nodeType": "ExpressionStatement",
												"src": "31833:61:5"
											},
											{
												"id": 1957,
												"nodeType": "UncheckedBlock",
												"src": "32006:881:5",
												"statements": [
													{
														"expression": {
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1903,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "32232:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1905,
																"indexExpression": {
																	"id": 1904,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1860,
																	"src": "32251:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32232:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1906,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1862,
																	"src": "32258:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1909,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1907,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32271:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1908,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 733,
																							"src": "32276:21:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "32271:26:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1910,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "32270:28:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32301:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "32270:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1913,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "32269:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32258:45:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32232:71:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1916,
														"nodeType": "ExpressionStatement",
														"src": "32232:71:5"
													},
													{
														"expression": {
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1917,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "32546:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1919,
																"indexExpression": {
																	"id": 1918,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1866,
																	"src": "32564:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "32546:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1921,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1860,
																		"src": "32617:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1923,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1862,
																					"src": "32659:8:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1922,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1307,
																				"src": "32638:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32638:30:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1928,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32694:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1927,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "32686:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1926,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "32686:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1929,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "32686:10:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1930,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1860,
																					"src": "32698:2:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1931,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "32702:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1925,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2300,
																				"src": "32671:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32671:33:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32638:66:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1920,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "32580:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32580:139:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32546:173:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1936,
														"nodeType": "ExpressionStatement",
														"src": "32546:173:5"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1938,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1866,
																	"src": "32761:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1939,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1866,
																			"src": "32775:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1940,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1862,
																			"src": "32790:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32775:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32801:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32775:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32812:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32804:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1944,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "32804:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32804:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1948,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1860,
																	"src": "32816:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1937,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2526,
																"src": "32741:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32741:78:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1950,
														"nodeType": "EmitStatement",
														"src": "32736:83:5"
													},
													{
														"expression": {
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1951,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "32836:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1952,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1866,
																	"src": "32852:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1953,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1862,
																	"src": "32867:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32852:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32836:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1956,
														"nodeType": "ExpressionStatement",
														"src": "32836:39:5"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32926:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32918:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1959,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32918:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32918:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1963,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "32930:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1964,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1866,
															"src": "32934:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1965,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "32948:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1958,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "32897:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32897:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "32897:60:5"
											}
										]
									},
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "30635:849:5",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "31499:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31520:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "31512:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31512:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "31532:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "31524:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31524:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31511:30:5"
									},
									"returnParameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31559:0:5"
									},
									"scope": 2321,
									"src": "31490:1475:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "33499:569:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1980,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1972,
															"src": "33516:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1981,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "33520:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1979,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1857,
														"src": "33510:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33510:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1983,
												"nodeType": "ExpressionStatement",
												"src": "33510:19:5"
											},
											{
												"id": 2029,
												"nodeType": "UncheckedBlock",
												"src": "33542:519:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1984,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1972,
																		"src": "33571:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "33571:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "33571:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33589:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33571:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2028,
														"nodeType": "IfStatement",
														"src": "33567:483:5",
														"trueBody": {
															"id": 2027,
															"nodeType": "Block",
															"src": "33592:458:5",
															"statements": [
																{
																	"assignments": [
																		1990
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1990,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "33619:3:5",
																			"nodeType": "VariableDeclaration",
																			"scope": 2027,
																			"src": "33611:11:5",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1989,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33611:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1992,
																	"initialValue": {
																		"id": 1991,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "33625:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33611:27:5"
																},
																{
																	"assignments": [
																		1994
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1994,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "33665:5:5",
																			"nodeType": "VariableDeclaration",
																			"scope": 2027,
																			"src": "33657:13:5",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1993,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33657:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1998,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1995,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1990,
																			"src": "33673:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1996,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1974,
																			"src": "33679:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33673:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33657:30:5"
																},
																{
																	"body": {
																		"id": 2015,
																		"nodeType": "Block",
																		"src": "33709:209:5",
																		"statements": [
																			{
																				"condition": {
																					"id": 2009,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "33736:63:5",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 2002,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "33776:1:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 2001,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "33768:7:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 2000,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "33768:7:5",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2003,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33768:10:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2004,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1972,
																								"src": "33780:2:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2006,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "33784:7:5",
																								"subExpression": {
																									"id": 2005,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1994,
																									"src": "33784:5:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2007,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1976,
																								"src": "33793:5:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1999,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1761,
																							"src": "33737:30:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 2008,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "33737:62:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2014,
																				"nodeType": "IfStatement",
																				"src": "33732:167:5",
																				"trueBody": {
																					"id": 2013,
																					"nodeType": "Block",
																					"src": "33801:98:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"id": 2010,
																									"name": "TransferToNonERC721ReceiverImplementer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2351,
																									"src": "33835:38:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 2011,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33835:40:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2012,
																							"nodeType": "RevertStatement",
																							"src": "33828:47:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2016,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1994,
																			"src": "33926:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2017,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1990,
																			"src": "33934:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33926:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2019,
																	"nodeType": "DoWhileStatement",
																	"src": "33706:233:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2020,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 790,
																			"src": "34004:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2021,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1990,
																			"src": "34021:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34004:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2026,
																	"nodeType": "IfStatement",
																	"src": "34000:34:5",
																	"trueBody": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2023,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "34026:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34026:8:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2025,
																		"nodeType": "ExpressionStatement",
																		"src": "34026:8:5"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1970,
										"nodeType": "StructuredDocumentation",
										"src": "32973:400:5",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "33388:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33416:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "33408:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33408:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33437:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "33429:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33429:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "33469:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "33456:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1975,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33456:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33397:84:5"
									},
									"returnParameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33499:0:5"
									},
									"scope": 2321,
									"src": "33379:689:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2045,
										"nodeType": "Block",
										"src": "34218:46:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2040,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "34239:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2041,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "34243:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34253:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2039,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2031,
															2046
														],
														"referencedDeclaration": 2031,
														"src": "34229:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34229:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2044,
												"nodeType": "ExpressionStatement",
												"src": "34229:27:5"
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "34076:70:5",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 2046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "34161:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34179:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "34171:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34171:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "34191:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "34183:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34183:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34170:30:5"
									},
									"returnParameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34218:0:5"
									},
									"scope": 2321,
									"src": "34152:112:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "34580:40:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2053,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "34597:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34606:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2052,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2058,
															2210
														],
														"referencedDeclaration": 2210,
														"src": "34591:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34591:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "34591:21:5"
											}
										]
									},
									"documentation": {
										"id": 2047,
										"nodeType": "StructuredDocumentation",
										"src": "34461:64:5",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "34540:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34554:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "34546:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34546:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34545:17:5"
									},
									"returnParameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34580:0:5"
									},
									"scope": 2321,
									"src": "34531:89:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2209,
										"nodeType": "Block",
										"src": "34918:3012:5",
										"statements": [
											{
												"assignments": [
													2067
												],
												"declarations": [
													{
														"constant": false,
														"id": 2067,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "34937:19:5",
														"nodeType": "VariableDeclaration",
														"scope": 2209,
														"src": "34929:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2066,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "34929:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2071,
												"initialValue": {
													"arguments": [
														{
															"id": 2069,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "34978:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2068,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "34959:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34959:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34929:57:5"
											},
											{
												"assignments": [
													2073
												],
												"declarations": [
													{
														"constant": false,
														"id": 2073,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "35007:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 2209,
														"src": "34999:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2072,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34999:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2081,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2078,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2067,
																	"src": "35030:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35022:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2076,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "35022:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35022:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "35014:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2074,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35014:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35014:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34999:52:5"
											},
											{
												"assignments": [
													2083,
													2085
												],
												"declarations": [
													{
														"constant": false,
														"id": 2083,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "35073:19:5",
														"nodeType": "VariableDeclaration",
														"scope": 2209,
														"src": "35065:27:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2082,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2085,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "35102:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2209,
														"src": "35094:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2084,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35094:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2089,
												"initialValue": {
													"arguments": [
														{
															"id": 2087,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "35148:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2086,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "35121:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35121:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35064:92:5"
											},
											{
												"condition": {
													"id": 2090,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2063,
													"src": "35173:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2110,
												"nodeType": "IfStatement",
												"src": "35169:316:5",
												"trueBody": {
													"id": 2109,
													"nodeType": "Block",
													"src": "35188:297:5",
													"statements": [
														{
															"condition": {
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "35293:69:5",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 2092,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2085,
																			"src": "35319:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2093,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2073,
																			"src": "35336:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2094,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2310,
																				"src": "35342:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 2095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35342:19:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2091,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1459,
																		"src": "35294:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35294:68:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2108,
															"nodeType": "IfStatement",
															"src": "35289:184:5",
															"trueBody": {
																"condition": {
																	"id": 2103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "35385:44:5",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 2099,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2073,
																				"src": "35403:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2100,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2310,
																					"src": "35409:17:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "35409:19:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2098,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "35386:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35386:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 2107,
																"nodeType": "IfStatement",
																"src": "35381:92:5",
																"trueBody": {
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2104,
																			"name": "TransferCallerNotOwnerNorApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2345,
																			"src": "35438:33:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35438:35:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2106,
																	"nodeType": "RevertStatement",
																	"src": "35431:42:5"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2112,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "35519:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35533:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35525:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2113,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35525:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35525:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2117,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "35537:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35546:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2111,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "35497:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35497:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2120,
												"nodeType": "ExpressionStatement",
												"src": "35497:51:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "35623:186:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "35657:141:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "35760:19:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35781:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "35753:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "35753:30:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "35753:30:5"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "35641:15:5"
															},
															"nodeType": "YulIf",
															"src": "35638:160:5"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2085,
														"isOffset": false,
														"isSlot": false,
														"src": "35641:15:5",
														"valueSize": 1
													},
													{
														"declaration": 2083,
														"isOffset": false,
														"isSlot": false,
														"src": "35760:19:5",
														"valueSize": 1
													}
												],
												"id": 2121,
												"nodeType": "InlineAssembly",
												"src": "35614:195:5"
											},
											{
												"id": 2185,
												"nodeType": "UncheckedBlock",
												"src": "36081:1576:5",
												"statements": [
													{
														"expression": {
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2122,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "36400:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2124,
																"indexExpression": {
																	"id": 2123,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2073,
																	"src": "36419:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36400:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 2125,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "36429:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 2126,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 736,
																				"src": "36434:21:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "36429:26:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2128,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "36428:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36459:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "36428:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36400:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2132,
														"nodeType": "ExpressionStatement",
														"src": "36400:60:5"
													},
													{
														"expression": {
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2133,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "36698:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2135,
																"indexExpression": {
																	"id": 2134,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2061,
																	"src": "36716:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36698:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 2137,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "36764:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2140,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2138,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 755,
																						"src": "36788:15:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 2139,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 763,
																						"src": "36806:25:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "36788:43:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2141,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "36787:45:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2143,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2073,
																					"src": "36850:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 2146,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "36864:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 2145,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "36856:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2144,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "36856:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2147,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "36856:10:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2148,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2067,
																					"src": "36868:19:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2142,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2300,
																				"src": "36835:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 2149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "36835:53:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36787:101:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2136,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "36727:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36727:176:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36698:205:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2153,
														"nodeType": "ExpressionStatement",
														"src": "36698:205:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2154,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2067,
																	"src": "37023:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2155,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "37045:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37023:47:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37074:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37023:52:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2184,
														"nodeType": "IfStatement",
														"src": "37019:627:5",
														"trueBody": {
															"id": 2183,
															"nodeType": "Block",
															"src": "37077:569:5",
															"statements": [
																{
																	"assignments": [
																		2160
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2160,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "37104:11:5",
																			"nodeType": "VariableDeclaration",
																			"scope": 2183,
																			"src": "37096:19:5",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2159,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "37096:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2164,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2161,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2061,
																			"src": "37118:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37128:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "37118:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "37096:33:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 2165,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 800,
																				"src": "37251:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 2167,
																			"indexExpression": {
																				"id": 2166,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2160,
																				"src": "37269:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "37251:30:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37285:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "37251:35:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2182,
																	"nodeType": "IfStatement",
																	"src": "37247:384:5",
																	"trueBody": {
																		"id": 2181,
																		"nodeType": "Block",
																		"src": "37288:343:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2172,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2170,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2160,
																						"src": "37374:11:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 2171,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 790,
																						"src": "37389:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "37374:28:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2180,
																				"nodeType": "IfStatement",
																				"src": "37370:242:5",
																				"trueBody": {
																					"id": 2179,
																					"nodeType": "Block",
																					"src": "37404:208:5",
																					"statements": [
																						{
																							"expression": {
																								"id": 2177,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 2173,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 800,
																										"src": "37536:17:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 2175,
																									"indexExpression": {
																										"id": 2174,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2160,
																										"src": "37554:11:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "37536:30:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 2176,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2067,
																									"src": "37569:19:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "37536:52:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2178,
																							"nodeType": "ExpressionStatement",
																							"src": "37536:52:5"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2187,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "37683:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37697:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37689:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2188,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37689:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37689:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2192,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "37701:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2186,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2395,
														"src": "37674:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37674:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2194,
												"nodeType": "EmitStatement",
												"src": "37669:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2196,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "37741:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37755:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37747:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2197,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37747:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 2200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37747:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2201,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "37759:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37768:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2195,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "37720:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37720:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2204,
												"nodeType": "ExpressionStatement",
												"src": "37720:50:5"
											},
											{
												"id": 2208,
												"nodeType": "UncheckedBlock",
												"src": "37872:51:5",
												"statements": [
													{
														"expression": {
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "37897:14:5",
															"subExpression": {
																"id": 2205,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "37897:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2207,
														"nodeType": "ExpressionStatement",
														"src": "37897:14:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "34628:215:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "34858:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34872:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "34864:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34864:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "34886:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 2210,
												"src": "34881:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2062,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34881:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34863:37:5"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34918:0:5"
									},
									"scope": 2321,
									"src": "34849:3081:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2253,
										"nodeType": "Block",
										"src": "38297:457:5",
										"statements": [
											{
												"assignments": [
													2219
												],
												"declarations": [
													{
														"constant": false,
														"id": 2219,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "38316:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 2253,
														"src": "38308:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38308:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2223,
												"initialValue": {
													"baseExpression": {
														"id": 2220,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "38325:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2222,
													"indexExpression": {
														"id": 2221,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "38343:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "38325:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38308:41:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2224,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "38364:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38374:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38364:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2230,
												"nodeType": "IfStatement",
												"src": "38360:61:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2227,
															"name": "OwnershipNotInitializedForExtraData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "38384:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38384:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2229,
													"nodeType": "RevertStatement",
													"src": "38377:44:5"
												}
											},
											{
												"assignments": [
													2232
												],
												"declarations": [
													{
														"constant": false,
														"id": 2232,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "38440:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 2253,
														"src": "38432:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2231,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38432:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2233,
												"nodeType": "VariableDeclarationStatement",
												"src": "38432:23:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "38546:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "38561:28:5",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "38580:9:5"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "38561:15:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2215,
														"isOffset": false,
														"isSlot": false,
														"src": "38580:9:5",
														"valueSize": 1
													},
													{
														"declaration": 2232,
														"isOffset": false,
														"isSlot": false,
														"src": "38561:15:5",
														"valueSize": 1
													}
												],
												"id": 2234,
												"nodeType": "InlineAssembly",
												"src": "38537:63:5"
											},
											{
												"expression": {
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2235,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "38610:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2236,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2219,
																		"src": "38620:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 2237,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "38629:30:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38620:39:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2239,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38619:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2240,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2232,
																		"src": "38664:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 2241,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "38683:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "38664:37:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2243,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "38663:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "38619:83:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38610:92:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2246,
												"nodeType": "ExpressionStatement",
												"src": "38610:92:5"
											},
											{
												"expression": {
													"id": 2251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2247,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "38713:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2249,
														"indexExpression": {
															"id": 2248,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "38731:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38713:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2250,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "38740:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "38713:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2252,
												"nodeType": "ExpressionStatement",
												"src": "38713:33:5"
											}
										]
									},
									"documentation": {
										"id": 2211,
										"nodeType": "StructuredDocumentation",
										"src": "38130:86:5",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 2254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "38231:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "38255:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "38247:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38247:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "38269:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 2254,
												"src": "38262:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2214,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "38262:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38246:33:5"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38297:0:5"
									},
									"scope": 2321,
									"src": "38222:532:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2266,
										"nodeType": "Block",
										"src": "39475:2:5",
										"statements": []
									},
									"documentation": {
										"id": 2255,
										"nodeType": "StructuredDocumentation",
										"src": "38762:562:5",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 2267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "39339:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39368:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "39360:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39360:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39391:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "39383:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39383:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "39411:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "39404:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2260,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39404:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39349:86:5"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "39467:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2263,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39467:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39466:8:5"
									},
									"scope": 2321,
									"src": "39330:147:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2299,
										"nodeType": "Block",
										"src": "39773:167:5",
										"statements": [
											{
												"assignments": [
													2280
												],
												"declarations": [
													{
														"constant": false,
														"id": 2280,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "39791:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 2299,
														"src": "39784:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 2279,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "39784:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2287,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2283,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2274,
																"src": "39810:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 2284,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "39833:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39810:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "39803:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 2281,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "39803:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39803:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39784:68:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2291,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2270,
																		"src": "39889:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2292,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "39895:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2293,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2280,
																		"src": "39899:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 2290,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2267,
																	"src": "39878:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39878:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "39870:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2288,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "39870:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 2295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39870:40:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 2296,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "39914:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39870:62:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2278,
												"id": 2298,
												"nodeType": "Return",
												"src": "39863:69:5"
											}
										]
									},
									"documentation": {
										"id": 2268,
										"nodeType": "StructuredDocumentation",
										"src": "39485:138:5",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 2300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "39638:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39671:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "39663:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39663:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39694:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "39686:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39686:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "39715:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "39707:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39707:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39652:89:5"
									},
									"returnParameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2300,
												"src": "39764:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39764:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39763:9:5"
									},
									"scope": 2321,
									"src": "39629:311:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2309,
										"nodeType": "Block",
										"src": "40389:36:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2306,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "40407:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "40407:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2305,
												"id": 2308,
												"nodeType": "Return",
												"src": "40400:17:5"
											}
										]
									},
									"documentation": {
										"id": 2301,
										"nodeType": "StructuredDocumentation",
										"src": "40137:177:5",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 2310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "40329:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40346:2:5"
									},
									"returnParameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "40380:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40380:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40379:9:5"
									},
									"scope": 2321,
									"src": "40320:105:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2319,
										"nodeType": "Block",
										"src": "40611:1498:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "40631:1471:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "40994:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "41011:4:5",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "41005:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "41005:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41018:4:5",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "41001:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "41001:22:5"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "40994:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41104:4:5",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41110:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41097:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "41097:17:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41097:17:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41205:14:5",
															"value": {
																"name": "str",
																"nodeType": "YulIdentifier",
																"src": "41216:3:5"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "41209:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "41468:397:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "41487:18:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "41498:3:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "41503:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "41494:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41494:11:5"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "41487:3:5"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "41651:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "41660:2:5",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "41668:4:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "41674:2:5",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "41664:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "41664:13:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "41656:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "41656:22:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "41643:7:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41643:36:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "41643:36:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "41750:21:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "41762:4:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "41768:2:5",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "41758:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41758:13:5"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "41750:4:5"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "41841:9:5",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "41843:5:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "41835:4:5"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "41828:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "41828:12:5"
																		},
																		"nodeType": "YulIf",
																		"src": "41825:25:5"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "41463:1:5",
																"type": "",
																"value": "1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "41465:2:5",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "41441:21:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "41443:17:5",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "41455:5:5"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "41447:4:5",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "41437:428:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41881:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "41899:3:5"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41904:3:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "41895:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "41895:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "41885:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "42003:21:5",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42014:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42019:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "42010:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "42010:14:5"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "42003:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42079:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "42084:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "42072:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "42072:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "42072:19:5"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2316,
														"isOffset": false,
														"isSlot": false,
														"src": "40994:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2316,
														"isOffset": false,
														"isSlot": false,
														"src": "41110:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2316,
														"isOffset": false,
														"isSlot": false,
														"src": "41216:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2316,
														"isOffset": false,
														"isSlot": false,
														"src": "41487:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2316,
														"isOffset": false,
														"isSlot": false,
														"src": "41498:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2316,
														"isOffset": false,
														"isSlot": false,
														"src": "41651:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2316,
														"isOffset": false,
														"isSlot": false,
														"src": "41904:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2316,
														"isOffset": false,
														"isSlot": false,
														"src": "42003:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2316,
														"isOffset": false,
														"isSlot": false,
														"src": "42014:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2316,
														"isOffset": false,
														"isSlot": false,
														"src": "42079:3:5",
														"valueSize": 1
													},
													{
														"declaration": 2313,
														"isOffset": false,
														"isSlot": false,
														"src": "41455:5:5",
														"valueSize": 1
													}
												],
												"id": 2318,
												"nodeType": "InlineAssembly",
												"src": "40622:1480:5"
											}
										]
									},
									"documentation": {
										"id": 2311,
										"nodeType": "StructuredDocumentation",
										"src": "40433:88:5",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 2320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "40536:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40554:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "40546:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40546:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40545:15:5"
									},
									"returnParameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "40606:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2320,
												"src": "40592:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2315,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40592:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40591:19:5"
									},
									"scope": 2321,
									"src": "40527:1582:5",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2322,
							"src": "1089:41023:5",
							"usedErrors": [
								2327,
								2330,
								2333,
								2336,
								2339,
								2342,
								2345,
								2348,
								2351,
								2354,
								2357,
								2360,
								2363
							]
						}
					],
					"src": "88:42026:5"
				},
				"id": 5
			},
			"contracts/IERC721A.sol": {
				"ast": {
					"absolutePath": "contracts/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							2527
						]
					},
					"id": 2528,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2323,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "88:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2324,
								"nodeType": "StructuredDocumentation",
								"src": "115:39:6",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 2527,
							"linearizedBaseContracts": [
								2527
							],
							"name": "IERC721A",
							"nameLocation": "166:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2325,
										"nodeType": "StructuredDocumentation",
										"src": "182:78:6",
										"text": " The caller must own the token or be an approved operator."
									},
									"id": 2327,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "272:33:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:2:6"
									},
									"src": "266:42:6"
								},
								{
									"documentation": {
										"id": 2328,
										"nodeType": "StructuredDocumentation",
										"src": "316:46:6",
										"text": " The token does not exist."
									},
									"id": 2330,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "374:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:2:6"
									},
									"src": "368:41:6"
								},
								{
									"documentation": {
										"id": 2331,
										"nodeType": "StructuredDocumentation",
										"src": "417:67:6",
										"text": " Cannot query the balance for the zero address."
									},
									"id": 2333,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "496:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:2:6"
									},
									"src": "490:35:6"
								},
								{
									"documentation": {
										"id": 2334,
										"nodeType": "StructuredDocumentation",
										"src": "533:53:6",
										"text": " Cannot mint to the zero address."
									},
									"id": 2336,
									"name": "MintToZeroAddress",
									"nameLocation": "598:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:6"
									},
									"src": "592:26:6"
								},
								{
									"documentation": {
										"id": 2337,
										"nodeType": "StructuredDocumentation",
										"src": "626:74:6",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"id": 2339,
									"name": "MintZeroQuantity",
									"nameLocation": "712:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "728:2:6"
									},
									"src": "706:25:6"
								},
								{
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "739:46:6",
										"text": " The token does not exist."
									},
									"id": 2342,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "797:29:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "826:2:6"
									},
									"src": "791:38:6"
								},
								{
									"documentation": {
										"id": 2343,
										"nodeType": "StructuredDocumentation",
										"src": "837:78:6",
										"text": " The caller must own the token or be an approved operator."
									},
									"id": 2345,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "927:33:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:2:6"
									},
									"src": "921:42:6"
								},
								{
									"documentation": {
										"id": 2346,
										"nodeType": "StructuredDocumentation",
										"src": "971:55:6",
										"text": " The token must be owned by `from`."
									},
									"id": 2348,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "1038:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1064:2:6"
									},
									"src": "1032:35:6"
								},
								{
									"documentation": {
										"id": 2349,
										"nodeType": "StructuredDocumentation",
										"src": "1075:119:6",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"id": 2351,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1206:38:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1244:2:6"
									},
									"src": "1200:47:6"
								},
								{
									"documentation": {
										"id": 2352,
										"nodeType": "StructuredDocumentation",
										"src": "1255:57:6",
										"text": " Cannot transfer to the zero address."
									},
									"id": 2354,
									"name": "TransferToZeroAddress",
									"nameLocation": "1324:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1345:2:6"
									},
									"src": "1318:30:6"
								},
								{
									"documentation": {
										"id": 2355,
										"nodeType": "StructuredDocumentation",
										"src": "1356:46:6",
										"text": " The token does not exist."
									},
									"id": 2357,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1414:27:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1441:2:6"
									},
									"src": "1408:36:6"
								},
								{
									"documentation": {
										"id": 2358,
										"nodeType": "StructuredDocumentation",
										"src": "1452:81:6",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"id": 2360,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1545:31:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1576:2:6"
									},
									"src": "1539:40:6"
								},
								{
									"documentation": {
										"id": 2361,
										"nodeType": "StructuredDocumentation",
										"src": "1587:85:6",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"id": 2363,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1684:35:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1719:2:6"
									},
									"src": "1678:44:6"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 2372,
									"members": [
										{
											"constant": false,
											"id": 2365,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1994:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 2372,
											"src": "1986:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2364,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1986:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2367,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2101:14:6",
											"nodeType": "VariableDeclaration",
											"scope": 2372,
											"src": "2094:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 2366,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2094:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2369,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2178:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 2372,
											"src": "2173:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2368,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2173:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2371,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2291:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 2372,
											"src": "2284:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2370,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2284:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1922:14:6",
									"nodeType": "StructDefinition",
									"scope": 2527,
									"src": "1915:393:6",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 2373,
										"nodeType": "StructuredDocumentation",
										"src": "2505:196:6",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 2378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2716:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:6"
									},
									"returnParameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "2753:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:9:6"
									},
									"scope": 2527,
									"src": "2707:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2379,
										"nodeType": "StructuredDocumentation",
										"src": "2955:348:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2386,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3318:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3343:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "3336:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2380,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3336:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3335:20:6"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "3379:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3379:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3378:6:6"
									},
									"scope": 2527,
									"src": "3309:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2387,
										"nodeType": "StructuredDocumentation",
										"src": "3578:90:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 2395,
									"name": "Transfer",
									"nameLocation": "3680:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3705:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "3689:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3689:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2391,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3727:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "3711:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3711:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3747:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2395,
												"src": "3731:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3688:67:6"
									},
									"src": "3674:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2396,
										"nodeType": "StructuredDocumentation",
										"src": "3764:96:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 2404,
									"name": "Approval",
									"nameLocation": "3872:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3897:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "3881:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3881:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2400,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3920:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "3904:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2402,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3946:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "3930:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3880:74:6"
									},
									"src": "3866:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2405,
										"nodeType": "StructuredDocumentation",
										"src": "3963:127:6",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"id": 2413,
									"name": "ApprovalForAll",
									"nameLocation": "4102:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4133:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "4117:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4117:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4156:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "4140:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4140:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2411,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4171:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "4166:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4166:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4116:64:6"
									},
									"src": "4096:85:6"
								},
								{
									"documentation": {
										"id": 2414,
										"nodeType": "StructuredDocumentation",
										"src": "4189:76:6",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 2421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4280:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4298:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "4290:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:15:6"
									},
									"returnParameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2419,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4336:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "4328:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4328:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4327:17:6"
									},
									"scope": 2527,
									"src": "4271:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2422,
										"nodeType": "StructuredDocumentation",
										"src": "4353:137:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 2429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4505:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4521:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "4513:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4512:17:6"
									},
									"returnParameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4561:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "4553:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4553:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4552:15:6"
									},
									"scope": 2527,
									"src": "4496:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2430,
										"nodeType": "StructuredDocumentation",
										"src": "4576:727:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 2441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5318:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5353:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "5345:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5345:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2434,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5376:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "5368:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5368:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5397:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "5389:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5389:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5430:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2441,
												"src": "5415:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5415:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5334:107:6"
									},
									"returnParameters": {
										"id": 2440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5450:0:6"
									},
									"scope": 2527,
									"src": "5309:142:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2442,
										"nodeType": "StructuredDocumentation",
										"src": "5459:82:6",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 2451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5556:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5591:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "5583:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5583:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5614:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "5606:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5606:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5635:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "5627:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5627:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5572:77:6"
									},
									"returnParameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5658:0:6"
									},
									"scope": 2527,
									"src": "5547:112:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2452,
										"nodeType": "StructuredDocumentation",
										"src": "5667:527:6",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6209:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6240:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "6232:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6232:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "6255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6284:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2461,
												"src": "6276:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6221:77:6"
									},
									"returnParameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6307:0:6"
									},
									"scope": 2527,
									"src": "6200:108:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2462,
										"nodeType": "StructuredDocumentation",
										"src": "6316:472:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6803:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6819:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "6811:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6811:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6831:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "6823:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6823:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6810:29:6"
									},
									"returnParameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6848:0:6"
									},
									"scope": 2527,
									"src": "6794:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2470,
										"nodeType": "StructuredDocumentation",
										"src": "6857:326:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 2477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "7198:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7224:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "7216:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7216:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7239:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2477,
												"src": "7234:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2473,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7234:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7215:34:6"
									},
									"returnParameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7258:0:6"
									},
									"scope": 2527,
									"src": "7189:70:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2478,
										"nodeType": "StructuredDocumentation",
										"src": "7267:145:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 2485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7427:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7447:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "7439:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7439:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7438:17:6"
									},
									"returnParameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7487:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2485,
												"src": "7479:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7479:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7478:18:6"
									},
									"scope": 2527,
									"src": "7418:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2486,
										"nodeType": "StructuredDocumentation",
										"src": "7505:143:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7663:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7688:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "7680:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7680:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7703:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "7695:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7695:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7679:33:6"
									},
									"returnParameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "7736:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2492,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7736:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:6:6"
									},
									"scope": 2527,
									"src": "7654:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2496,
										"nodeType": "StructuredDocumentation",
										"src": "7939:60:6",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8014:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8018:2:6"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "8044:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2498,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8044:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8043:15:6"
									},
									"scope": 2527,
									"src": "8005:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2502,
										"nodeType": "StructuredDocumentation",
										"src": "8067:62:6",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8144:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8150:2:6"
									},
									"returnParameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "8176:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2504,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8176:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8175:15:6"
									},
									"scope": 2527,
									"src": "8135:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2508,
										"nodeType": "StructuredDocumentation",
										"src": "8199:92:6",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8306:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8323:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "8315:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8315:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8314:17:6"
									},
									"returnParameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "8355:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8355:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8354:15:6"
									},
									"scope": 2527,
									"src": "8297:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2516,
										"nodeType": "StructuredDocumentation",
										"src": "8563:273:6",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"id": 2526,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8848:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2518,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8884:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "8868:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2520,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8905:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "8897:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8897:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8932:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "8916:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8916:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2524,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8954:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "8938:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8938:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8867:90:6"
									},
									"src": "8842:116:6"
								}
							],
							"scope": 2528,
							"src": "156:8805:6",
							"usedErrors": [
								2327,
								2330,
								2333,
								2336,
								2339,
								2342,
								2345,
								2348,
								2351,
								2354,
								2357,
								2360,
								2363
							]
						}
					],
					"src": "88:8875:6"
				},
				"id": 6
			},
			"contracts/imiltestTwo.sol": {
				"ast": {
					"absolutePath": "contracts/imiltestTwo.sol",
					"exportedSymbols": {
						"Address": [
							447
						],
						"Context": [
							469
						],
						"ERC721A": [
							2321
						],
						"ERC721A__IERC721Receiver": [
							716
						],
						"IERC721A": [
							2527
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							152
						],
						"Strings": [
							695
						],
						"imiltestTwo": [
							3131
						]
					},
					"id": 3132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2529,
							"literals": [
								"solidity",
								">",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:30:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2530,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3132,
							"sourceUnit": 113,
							"src": "64:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 2531,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3132,
							"sourceUnit": 153,
							"src": "117:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ERC721A.sol",
							"file": "./ERC721A.sol",
							"id": 2532,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3132,
							"sourceUnit": 2322,
							"src": "180:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2533,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "229:7:7"
									},
									"id": 2534,
									"nodeType": "InheritanceSpecifier",
									"src": "229:7:7"
								},
								{
									"baseName": {
										"id": 2535,
										"name": "ERC721A",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2321,
										"src": "238:7:7"
									},
									"id": 2536,
									"nodeType": "InheritanceSpecifier",
									"src": "238:7:7"
								},
								{
									"baseName": {
										"id": 2537,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 152,
										"src": "247:15:7"
									},
									"id": 2538,
									"nodeType": "InheritanceSpecifier",
									"src": "247:15:7"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3131,
							"linearizedBaseContracts": [
								3131,
								152,
								2321,
								2527,
								112,
								469
							],
							"name": "imiltestTwo",
							"nameLocation": "214:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2541,
									"libraryName": {
										"id": 2539,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 695,
										"src": "276:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "270:26:7",
									"typeName": {
										"id": 2540,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "288:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 2543,
									"mutability": "mutable",
									"name": "baseURI",
									"nameLocation": "309:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 3131,
									"src": "302:14:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2542,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "302:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2547,
									"mutability": "mutable",
									"name": "claimURI",
									"nameLocation": "346:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 3131,
									"src": "321:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 2546,
										"keyType": {
											"id": 2544,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "330:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "321:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 2545,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "338:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "c6682862",
									"id": 2550,
									"mutability": "mutable",
									"name": "baseExtension",
									"nameLocation": "373:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 3131,
									"src": "359:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2548,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "359:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "2e6a736f6e",
										"id": 2549,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "389:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
											"typeString": "literal_string \".json\""
										},
										"value": ".json"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "13faede6",
									"id": 2553,
									"mutability": "mutable",
									"name": "cost",
									"nameLocation": "418:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 3131,
									"src": "403:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2551,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "403:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e303333",
										"id": 2552,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "425:11:7",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33000000000000000_by_1",
											"typeString": "int_const 33000000000000000"
										},
										"value": "0.033"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 2556,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "456:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 3131,
									"src": "441:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2554,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "441:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3639",
										"id": 2555,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "468:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_69_by_1",
											"typeString": "int_const 69"
										},
										"value": "69"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "30b86627",
									"id": 2559,
									"mutability": "mutable",
									"name": "currentSet",
									"nameLocation": "490:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 3131,
									"src": "475:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2557,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "475:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "39",
										"id": 2558,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "503:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_9_by_1",
											"typeString": "int_const 9"
										},
										"value": "9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b3807b1d",
									"id": 2562,
									"mutability": "mutable",
									"name": "AllowlistLimit",
									"nameLocation": "524:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 3131,
									"src": "509:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2560,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "509:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 2561,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "541:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 2565,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "561:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 3131,
									"src": "549:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2563,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "549:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 2564,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "570:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bf705b1c",
									"id": 2569,
									"mutability": "mutable",
									"name": "claimActiveByPhase",
									"nameLocation": "613:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 3131,
									"src": "582:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 2568,
										"keyType": {
											"id": 2566,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "591:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "582:23:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueType": {
											"id": 2567,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "600:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "74f59666",
									"id": 2575,
									"mutability": "mutable",
									"name": "claimedItemByPhase",
									"nameLocation": "684:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 3131,
									"src": "636:66:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 2574,
										"keyType": {
											"id": 2570,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "645:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "636:40:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => bool))"
										},
										"valueType": {
											"id": 2573,
											"keyType": {
												"id": 2571,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "662:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "654:21:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueType": {
												"id": 2572,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "670:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1ee50697",
									"id": 2579,
									"mutability": "mutable",
									"name": "claimPhaseByToken",
									"nameLocation": "741:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 3131,
									"src": "707:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2578,
										"keyType": {
											"id": 2576,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "716:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "707:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 2577,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "728:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "674c02aa",
									"id": 2582,
									"mutability": "mutable",
									"name": "onlyAllowlisted",
									"nameLocation": "779:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 3131,
									"src": "767:35:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2580,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "767:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 2581,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "797:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a7cd52cb",
									"id": 2586,
									"mutability": "mutable",
									"name": "allowlist",
									"nameLocation": "839:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 3131,
									"src": "807:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 2585,
										"keyType": {
											"id": 2583,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "815:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "807:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 2584,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "826:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18cae269",
									"id": 2590,
									"mutability": "mutable",
									"name": "addressMintedBalance",
									"nameLocation": "888:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 3131,
									"src": "853:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2589,
										"keyType": {
											"id": 2587,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "861:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "853:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 2588,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "872:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2610,
										"nodeType": "Block",
										"src": "1026:72:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2602,
															"name": "_initBaseURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2592,
															"src": "1044:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2601,
														"name": "setBaseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2926,
														"src": "1033:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 2603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1033:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2604,
												"nodeType": "ExpressionStatement",
												"src": "1033:24:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2606,
															"name": "_initClaimURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2594,
															"src": "1076:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"hexValue": "31",
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1090:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2605,
														"name": "setClaimURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2942,
														"src": "1064:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 2608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1064:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2609,
												"nodeType": "ExpressionStatement",
												"src": "1064:28:7"
											}
										]
									},
									"id": 2611,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "696d697465737432",
													"id": 2597,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1007:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a0da6274de66b8f0715662ca8eabf864938596317b7b78ecf0162cdeddb02c4b",
														"typeString": "literal_string \"imitest2\""
													},
													"value": "imitest2"
												},
												{
													"hexValue": "494d49",
													"id": 2598,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1019:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0b9b03ae8b6143aa8db42338c171286eb1052bd16b00913c03ecd2b13cbf0806",
														"typeString": "literal_string \"IMI\""
													},
													"value": "IMI"
												}
											],
											"id": 2599,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2596,
												"name": "ERC721A",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2321,
												"src": "999:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "999:26:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "_initBaseURI",
												"nameLocation": "947:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "933:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "933:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "_initClaimURI",
												"nameLocation": "980:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "966:27:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "966:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:72:7"
									},
									"returnParameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:0:7"
									},
									"scope": 3131,
									"src": "915:183:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1103
									],
									"body": {
										"id": 2619,
										"nodeType": "Block",
										"src": "1194:27:7",
										"statements": [
											{
												"expression": {
													"id": 2617,
													"name": "baseURI",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2543,
													"src": "1208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2616,
												"id": 2618,
												"nodeType": "Return",
												"src": "1201:14:7"
											}
										]
									},
									"id": 2620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "1128:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2613,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1161:8:7"
									},
									"parameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1136:2:7"
									},
									"returnParameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "1179:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2614,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1179:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:15:7"
									},
									"scope": 3131,
									"src": "1119:102:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2631,
										"nodeType": "Block",
										"src": "1304:35:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2627,
														"name": "claimURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2547,
														"src": "1318:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 2629,
													"indexExpression": {
														"id": 2628,
														"name": "claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2622,
														"src": "1327:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1318:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2626,
												"id": 2630,
												"nodeType": "Return",
												"src": "1311:22:7"
											}
										]
									},
									"id": 2632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_claimURI",
									"nameLocation": "1236:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2622,
												"mutability": "mutable",
												"name": "claim",
												"nameLocation": "1251:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "1246:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2621,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:12:7"
									},
									"returnParameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "1289:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2624,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1289:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:15:7"
									},
									"scope": 3131,
									"src": "1227:112:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2739,
										"nodeType": "Block",
										"src": "1408:1090:7",
										"statements": [
											{
												"assignments": [
													2638
												],
												"declarations": [
													{
														"constant": false,
														"id": 2638,
														"mutability": "mutable",
														"name": "supply",
														"nameLocation": "1423:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 2739,
														"src": "1415:14:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2637,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1415:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2641,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2639,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "1432:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1415:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1483:7:7",
															"subExpression": {
																"id": 2643,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2565,
																"src": "1484:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "574f414820686f6c6420757020746865206d696e74206973206e6f7420796574206c6976652c2061206c6974746c6520746f6f206561726c792074686572652e2e2e206f72206c6174653f205472616e736d697373696f6e20456e64696e67",
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1492:97:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_59d04762fffc15004f9c80d7b6292c6e0fd9d298a8f76aac81112340e7ec504a",
																"typeString": "literal_string \"WOAH hold up the mint is not yet live, a little too early there... or late? Transmission Ending\""
															},
															"value": "WOAH hold up the mint is not yet live, a little too early there... or late? Transmission Ending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_59d04762fffc15004f9c80d7b6292c6e0fd9d298a8f76aac81112340e7ec504a",
																"typeString": "literal_string \"WOAH hold up the mint is not yet live, a little too early there... or late? Transmission Ending\""
															}
														],
														"id": 2642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1475:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1475:115:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2647,
												"nodeType": "ExpressionStatement",
												"src": "1475:115:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2649,
																"name": "_mintAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2634,
																"src": "1605:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1619:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1605:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d757374206d696e74206174206c656173742031206e66742c2030206973206e6f7420616c6c6f7765642e205472616e736d697373696f6e20456e64696e67",
															"id": 2652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1622:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48fda742698573100e179ae1b13bb17b7308f3fb873a40e607485d8ba281db03",
																"typeString": "literal_string \"must mint at least 1 nft, 0 is not allowed. Transmission Ending\""
															},
															"value": "must mint at least 1 nft, 0 is not allowed. Transmission Ending"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48fda742698573100e179ae1b13bb17b7308f3fb873a40e607485d8ba281db03",
																"typeString": "literal_string \"must mint at least 1 nft, 0 is not allowed. Transmission Ending\""
															}
														],
														"id": 2648,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1597:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:91:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2654,
												"nodeType": "ExpressionStatement",
												"src": "1597:91:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2656,
																	"name": "supply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2638,
																	"src": "1703:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2657,
																	"name": "_mintAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2634,
																	"src": "1712:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1703:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2659,
																"name": "currentSet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2559,
																"src": "1727:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1703:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320736574206f66207368697274732068617665206265656e206d696e74656420616c72656164792c20736f7272792e",
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1739:53:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_81850a1f8053c5838ebf588fb7b236cacc8d1dcf23a77ab25e4a5372efacbd71",
																"typeString": "literal_string \"This set of shirts have been minted already, sorry.\""
															},
															"value": "This set of shirts have been minted already, sorry."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_81850a1f8053c5838ebf588fb7b236cacc8d1dcf23a77ab25e4a5372efacbd71",
																"typeString": "literal_string \"This set of shirts have been minted already, sorry.\""
															}
														],
														"id": 2655,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1695:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1695:98:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2663,
												"nodeType": "ExpressionStatement",
												"src": "1695:98:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2665,
																	"name": "supply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2638,
																	"src": "1808:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2666,
																	"name": "_mintAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2634,
																	"src": "1817:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1808:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2668,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2556,
																"src": "1832:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1808:33:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c6f6f6b73206c696b652077652061726520706f70756c6172206d617820737570706c7920686173206265656e2072656163686564",
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:55:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97431681bf783971e6935af241e6bf6a0d8509ed0533483cd521a055744277a0",
																"typeString": "literal_string \"looks like we are popular max supply has been reached\""
															},
															"value": "looks like we are popular max supply has been reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97431681bf783971e6935af241e6bf6a0d8509ed0533483cd521a055744277a0",
																"typeString": "literal_string \"looks like we are popular max supply has been reached\""
															}
														],
														"id": 2664,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1800:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1800:99:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2672,
												"nodeType": "ExpressionStatement",
												"src": "1800:99:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2673,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1918:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1918:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2675,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "1932:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1932:7:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1918:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2725,
												"nodeType": "IfStatement",
												"src": "1914:482:7",
												"trueBody": {
													"id": 2724,
													"nodeType": "Block",
													"src": "1941:455:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2679,
																			"name": "_mintAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2634,
																			"src": "1992:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2007:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1992:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "6f6e6c79203120617420612074696d65203a2920",
																		"id": 2682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2010:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_db7e8433bc66fe3dc25da0449b83dec916181efd3b63d1a0329faf71b04911a0",
																			"typeString": "literal_string \"only 1 at a time :) \""
																		},
																		"value": "only 1 at a time :) "
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_db7e8433bc66fe3dc25da0449b83dec916181efd3b63d1a0329faf71b04911a0",
																			"typeString": "literal_string \"only 1 at a time :) \""
																		}
																	],
																	"id": 2678,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1984:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1984:49:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2684,
															"nodeType": "ExpressionStatement",
															"src": "1984:49:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2685,
																	"name": "onlyAllowlisted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2582,
																	"src": "2047:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 2686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2066:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2047:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2713,
															"nodeType": "IfStatement",
															"src": "2044:272:7",
															"trueBody": {
																"id": 2712,
																"nodeType": "Block",
																"src": "2072:244:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"id": 2690,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "2109:3:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 2691,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "2109:10:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2689,
																						"name": "isAllowlisted",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2752,
																						"src": "2095:13:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 2692,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2095:25:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4e6f7420416c6c6f776c6973746564",
																					"id": 2693,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2122:17:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_bcbf221e1d785dfc11083f52adc69389d8ebd7c45bac276ecfbd15edf753070b",
																						"typeString": "literal_string \"Not Allowlisted\""
																					},
																					"value": "Not Allowlisted"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_bcbf221e1d785dfc11083f52adc69389d8ebd7c45bac276ecfbd15edf753070b",
																						"typeString": "literal_string \"Not Allowlisted\""
																					}
																				],
																				"id": 2688,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "2087:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2087:53:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2695,
																		"nodeType": "ExpressionStatement",
																		"src": "2087:53:7"
																	},
																	{
																		"assignments": [
																			2697
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2697,
																				"mutability": "mutable",
																				"name": "ownerMintedCount",
																				"nameLocation": "2163:16:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 2712,
																				"src": "2155:24:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2696,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2155:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2702,
																		"initialValue": {
																			"baseExpression": {
																				"id": 2698,
																				"name": "addressMintedBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2590,
																				"src": "2182:20:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2701,
																			"indexExpression": {
																				"expression": {
																					"id": 2699,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2203:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2203:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2182:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2155:59:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2708,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2706,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2704,
																							"name": "ownerMintedCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2697,
																							"src": "2237:16:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"id": 2705,
																							"name": "_mintAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2634,
																							"src": "2256:11:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2237:30:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 2707,
																						"name": "AllowlistLimit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2562,
																						"src": "2271:14:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2237:48:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416c7265616479206d696e746564",
																					"id": 2709,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2287:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59",
																						"typeString": "literal_string \"Already minted\""
																					},
																					"value": "Already minted"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_07a393aaecec82831fb8eedd24a09ceedd55f6988f2ff034d4b7c484567c4a59",
																						"typeString": "literal_string \"Already minted\""
																					}
																				],
																				"id": 2703,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "2229:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2229:75:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2711,
																		"nodeType": "ExpressionStatement",
																		"src": "2229:75:7"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2715,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2334:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "2334:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2717,
																				"name": "cost",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2553,
																				"src": "2347:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2718,
																				"name": "_mintAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2634,
																				"src": "2354:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2347:18:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2334:31:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "436f737420646f65736e2774206d61746368",
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2367:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2a8b16c5698f793fadcf69c1a4b70bc053d8668181e11d673c774abfb93d1253",
																			"typeString": "literal_string \"Cost doesn't match\""
																		},
																		"value": "Cost doesn't match"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2a8b16c5698f793fadcf69c1a4b70bc053d8668181e11d673c774abfb93d1253",
																			"typeString": "literal_string \"Cost doesn't match\""
																		}
																	],
																	"id": 2714,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2326:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2326:62:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2723,
															"nodeType": "ExpressionStatement",
															"src": "2326:62:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2727,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2414:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2414:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2729,
															"name": "_mintAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2634,
															"src": "2426:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2726,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2031,
															2046
														],
														"referencedDeclaration": 2046,
														"src": "2404:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2404:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2731,
												"nodeType": "ExpressionStatement",
												"src": "2404:34:7"
											},
											{
												"expression": {
													"id": 2737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2732,
															"name": "addressMintedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2590,
															"src": "2445:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2735,
														"indexExpression": {
															"expression": {
																"id": 2733,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2466:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2466:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2445:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2736,
														"name": "_mintAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2634,
														"src": "2481:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2445:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2738,
												"nodeType": "ExpressionStatement",
												"src": "2445:47:7"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 2740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1367:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "_mintAmount",
												"nameLocation": "1380:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 2740,
												"src": "1372:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1372:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:21:7"
									},
									"returnParameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1408:0:7"
									},
									"scope": 3131,
									"src": "1358:1140:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2751,
										"nodeType": "Block",
										"src": "2569:36:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2747,
														"name": "allowlist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2586,
														"src": "2583:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2749,
													"indexExpression": {
														"id": 2748,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2742,
														"src": "2593:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2583:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2746,
												"id": 2750,
												"nodeType": "Return",
												"src": "2576:23:7"
											}
										]
									},
									"functionSelector": "05a3b809",
									"id": 2752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAllowlisted",
									"nameLocation": "2513:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2535:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "2527:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2527:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2526:15:7"
									},
									"returnParameters": {
										"id": 2746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "2563:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2744,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2563:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2562:6:7"
									},
									"scope": 3131,
									"src": "2504:101:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1094
									],
									"body": {
										"id": 2832,
										"nodeType": "Block",
										"src": "2727:659:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2762,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2754,
																	"src": "2758:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2761,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1445,
																"src": "2750:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 2763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2750:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2775:49:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 2760,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2734:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2734:97:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2766,
												"nodeType": "ExpressionStatement",
												"src": "2734:97:7"
											},
											{
												"assignments": [
													2768
												],
												"declarations": [
													{
														"constant": false,
														"id": 2768,
														"mutability": "mutable",
														"name": "claimPhaseForToken",
														"nameLocation": "2845:18:7",
														"nodeType": "VariableDeclaration",
														"scope": 2832,
														"src": "2840:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2767,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2840:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2772,
												"initialValue": {
													"baseExpression": {
														"id": 2769,
														"name": "claimPhaseByToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2579,
														"src": "2866:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2771,
													"indexExpression": {
														"id": 2770,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2754,
														"src": "2884:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2866:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2840:52:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2773,
														"name": "claimPhaseForToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2768,
														"src": "2904:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2925:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2904:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2830,
													"nodeType": "Block",
													"src": "3170:211:7",
													"statements": [
														{
															"assignments": [
																2805
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2805,
																	"mutability": "mutable",
																	"name": "currentBaseURI",
																	"nameLocation": "3195:14:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2830,
																	"src": "3181:28:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 2804,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "3181:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2808,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2806,
																	"name": "_baseURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2620
																	],
																	"referencedDeclaration": 2620,
																	"src": "3212:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () view returns (string memory)"
																	}
																},
																"id": 2807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3212:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3181:41:7"
														},
														{
															"expression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 2811,
																					"name": "currentBaseURI",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2805,
																					"src": "3246:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2810,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3240:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 2809,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "3240:5:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3240:21:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "3240:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3271:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3240:32:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "",
																	"id": 2827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3371:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																},
																"id": 2828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "3240:133:7",
																"trueExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2820,
																					"name": "currentBaseURI",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2805,
																					"src": "3308:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 2821,
																							"name": "tokenId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2754,
																							"src": "3324:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2822,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "toString",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 557,
																						"src": "3324:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256) pure returns (string memory)"
																						}
																					},
																					"id": 2823,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3324:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"id": 2824,
																					"name": "baseExtension",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2550,
																					"src": "3344:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"expression": {
																					"id": 2818,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "3291:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "3291:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 2825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3291:67:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 2817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3284:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 2816,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "3284:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3284:75:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 2759,
															"id": 2829,
															"nodeType": "Return",
															"src": "3233:140:7"
														}
													]
												},
												"id": 2831,
												"nodeType": "IfStatement",
												"src": "2901:480:7",
												"trueBody": {
													"id": 2803,
													"nodeType": "Block",
													"src": "2927:233:7",
													"statements": [
														{
															"assignments": [
																2777
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2777,
																	"mutability": "mutable",
																	"name": "currentClaimURI",
																	"nameLocation": "2952:15:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2803,
																	"src": "2938:29:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string"
																	},
																	"typeName": {
																		"id": 2776,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "2938:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage_ptr",
																			"typeString": "string"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2781,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2779,
																		"name": "claimPhaseForToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2768,
																		"src": "2980:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2778,
																	"name": "_claimURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2632,
																	"src": "2970:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (uint256) view returns (string memory)"
																	}
																},
																"id": 2780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2970:29:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2938:61:7"
														},
														{
															"expression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 2784,
																					"name": "currentClaimURI",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2777,
																					"src": "3023:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3017:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 2782,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "3017:5:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3017:22:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "3017:29:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3049:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3017:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "",
																	"id": 2800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3150:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																},
																"id": 2801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "3017:135:7",
																"trueExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2793,
																					"name": "currentClaimURI",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2777,
																					"src": "3086:15:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 2794,
																							"name": "tokenId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2754,
																							"src": "3103:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2795,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "toString",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 557,
																						"src": "3103:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256) pure returns (string memory)"
																						}
																					},
																					"id": 2796,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3103:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"id": 2797,
																					"name": "baseExtension",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2550,
																					"src": "3123:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_string_storage",
																						"typeString": "string storage ref"
																					}
																				],
																				"expression": {
																					"id": 2791,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "3069:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2792,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "3069:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 2798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3069:68:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 2790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3062:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 2789,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "3062:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3062:76:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 2759,
															"id": 2802,
															"nodeType": "Return",
															"src": "3010:142:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 2833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2620:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2756,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2686:8:7"
									},
									"parameters": {
										"id": 2755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2637:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "2629:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2629:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2628:17:7"
									},
									"returnParameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "2709:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2757,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2709:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2708:15:7"
									},
									"scope": 3131,
									"src": "2611:775:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2848,
										"nodeType": "Block",
										"src": "3455:47:7",
										"statements": [
											{
												"expression": {
													"id": 2846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2842,
															"name": "claimActiveByPhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2569,
															"src": "3462:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 2844,
														"indexExpression": {
															"id": 2843,
															"name": "claim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2837,
															"src": "3481:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3462:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2845,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2835,
														"src": "3490:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3462:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2847,
												"nodeType": "ExpressionStatement",
												"src": "3462:34:7"
											}
										]
									},
									"functionSelector": "0a70a191",
									"id": 2849,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2840,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2839,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3445:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3445:9:7"
										}
									],
									"name": "toggleClaim",
									"nameLocation": "3401:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "3418:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "3413:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2834,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3413:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "claim",
												"nameLocation": "3431:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "3426:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2836,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3426:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3412:25:7"
									},
									"returnParameters": {
										"id": 2841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3455:0:7"
									},
									"scope": 3131,
									"src": "3392:110:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2897,
										"nodeType": "Block",
										"src": "3565:311:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2858,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2851,
																		"src": "3588:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2857,
																	"name": "ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "3580:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3580:16:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2860,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3600:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3600:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3580:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736f72727920796f7520617265206e6f7420746865206f776e6572",
															"id": 2863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3612:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9eaf0b75917dcc039b01243b842825d0c0514169d0bbc47abccfa944b0f9514",
																"typeString": "literal_string \"sorry you are not the owner\""
															},
															"value": "sorry you are not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9eaf0b75917dcc039b01243b842825d0c0514169d0bbc47abccfa944b0f9514",
																"typeString": "literal_string \"sorry you are not the owner\""
															}
														],
														"id": 2856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3572:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:70:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2865,
												"nodeType": "ExpressionStatement",
												"src": "3572:70:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2867,
																"name": "claimActiveByPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2569,
																"src": "3657:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																	"typeString": "mapping(uint256 => bool)"
																}
															},
															"id": 2869,
															"indexExpression": {
																"id": 2868,
																"name": "claim",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2853,
																"src": "3676:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3657:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "636c61696d206973206e6f742061637469766520796574",
															"id": 2870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3684:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bfdd526ad66ccaa54ff804305964c61a6c99d1b79ca6b5996a01bce55e6e0ed1",
																"typeString": "literal_string \"claim is not active yet\""
															},
															"value": "claim is not active yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bfdd526ad66ccaa54ff804305964c61a6c99d1b79ca6b5996a01bce55e6e0ed1",
																"typeString": "literal_string \"claim is not active yet\""
															}
														],
														"id": 2866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3649:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3649:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2872,
												"nodeType": "ExpressionStatement",
												"src": "3649:61:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3725:35:7",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2874,
																		"name": "claimedItemByPhase",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2575,
																		"src": "3726:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(uint256 => bool))"
																		}
																	},
																	"id": 2876,
																	"indexExpression": {
																		"id": 2875,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2851,
																		"src": "3745:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3726:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 2878,
																"indexExpression": {
																	"id": 2877,
																	"name": "claim",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2853,
																	"src": "3754:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3726:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c726561647920636c61696d656421",
															"id": 2880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3762:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09adf7b4d6ad9955b47a524067a9b8a92ca96a8c9357701986f8328e2c73c833",
																"typeString": "literal_string \"already claimed!\""
															},
															"value": "already claimed!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09adf7b4d6ad9955b47a524067a9b8a92ca96a8c9357701986f8328e2c73c833",
																"typeString": "literal_string \"already claimed!\""
															}
														],
														"id": 2873,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3717:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3717:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2882,
												"nodeType": "ExpressionStatement",
												"src": "3717:64:7"
											},
											{
												"expression": {
													"id": 2889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2883,
																"name": "claimedItemByPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2575,
																"src": "3788:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(uint256 => bool))"
																}
															},
															"id": 2886,
															"indexExpression": {
																"id": 2884,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2851,
																"src": "3807:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3788:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 2887,
														"indexExpression": {
															"id": 2885,
															"name": "claim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2853,
															"src": "3816:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3788:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3825:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3788:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2890,
												"nodeType": "ExpressionStatement",
												"src": "3788:41:7"
											},
											{
												"expression": {
													"id": 2895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2891,
															"name": "claimPhaseByToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "3836:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2893,
														"indexExpression": {
															"id": 2892,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2851,
															"src": "3854:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3836:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2894,
														"name": "claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2853,
														"src": "3865:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3836:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2896,
												"nodeType": "ExpressionStatement",
												"src": "3836:34:7"
											}
										]
									},
									"functionSelector": "a7dc7f2a",
									"id": 2898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimItem",
									"nameLocation": "3517:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3535:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "3527:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3527:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "claim",
												"nameLocation": "3549:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "3544:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2852,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3544:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3526:29:7"
									},
									"returnParameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3565:0:7"
									},
									"scope": 3131,
									"src": "3508:368:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2913,
										"nodeType": "Block",
										"src": "3962:54:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2907,
															"name": "claimedItemByPhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2575,
															"src": "3976:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
																"typeString": "mapping(uint256 => mapping(uint256 => bool))"
															}
														},
														"id": 2909,
														"indexExpression": {
															"id": 2908,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2900,
															"src": "3995:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3976:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 2911,
													"indexExpression": {
														"id": 2910,
														"name": "claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2902,
														"src": "4004:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3976:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2906,
												"id": 2912,
												"nodeType": "Return",
												"src": "3969:41:7"
											}
										]
									},
									"functionSelector": "85649743",
									"id": 2914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkClaimed",
									"nameLocation": "3891:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3912:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "3904:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "claim",
												"nameLocation": "3926:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "3921:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2901,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3921:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3903:29:7"
									},
									"returnParameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2914,
												"src": "3956:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2904,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3956:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3955:6:7"
									},
									"scope": 3131,
									"src": "3882:134:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2925,
										"nodeType": "Block",
										"src": "4086:34:7",
										"statements": [
											{
												"expression": {
													"id": 2923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2921,
														"name": "baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2543,
														"src": "4093:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2922,
														"name": "_newBaseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2916,
														"src": "4103:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4093:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2924,
												"nodeType": "ExpressionStatement",
												"src": "4093:21:7"
											}
										]
									},
									"functionSelector": "55f804b3",
									"id": 2926,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2919,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2918,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4076:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4076:9:7"
										}
									],
									"name": "setBaseURI",
									"nameLocation": "4031:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "_newBaseURI",
												"nameLocation": "4056:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "4042:25:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4042:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4041:27:7"
									},
									"returnParameters": {
										"id": 2920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4086:0:7"
									},
									"scope": 3131,
									"src": "4022:98:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2941,
										"nodeType": "Block",
										"src": "4205:43:7",
										"statements": [
											{
												"expression": {
													"id": 2939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2935,
															"name": "claimURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2547,
															"src": "4212:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 2937,
														"indexExpression": {
															"id": 2936,
															"name": "claim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2930,
															"src": "4221:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4212:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2938,
														"name": "_newClaimURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2928,
														"src": "4230:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4212:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2940,
												"nodeType": "ExpressionStatement",
												"src": "4212:30:7"
											}
										]
									},
									"functionSelector": "5f93e9e3",
									"id": 2942,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2933,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2932,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4195:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4195:9:7"
										}
									],
									"name": "setClaimURI",
									"nameLocation": "4136:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "_newClaimURI",
												"nameLocation": "4162:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2942,
												"src": "4148:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2927,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4148:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "claim",
												"nameLocation": "4181:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2942,
												"src": "4176:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2929,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4176:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4147:40:7"
									},
									"returnParameters": {
										"id": 2934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4205:0:7"
									},
									"scope": 3131,
									"src": "4127:121:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2953,
										"nodeType": "Block",
										"src": "4330:46:7",
										"statements": [
											{
												"expression": {
													"id": 2951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2949,
														"name": "baseExtension",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2550,
														"src": "4337:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2950,
														"name": "_newBaseExtension",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2944,
														"src": "4353:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4337:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2952,
												"nodeType": "ExpressionStatement",
												"src": "4337:33:7"
											}
										]
									},
									"functionSelector": "da3ef23f",
									"id": 2954,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2947,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2946,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4320:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4320:9:7"
										}
									],
									"name": "setBaseExtension",
									"nameLocation": "4263:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "_newBaseExtension",
												"nameLocation": "4294:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "4280:31:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2943,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4280:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4279:33:7"
									},
									"returnParameters": {
										"id": 2948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4330:0:7"
									},
									"scope": 3131,
									"src": "4254:122:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2965,
										"nodeType": "Block",
										"src": "4448:34:7",
										"statements": [
											{
												"expression": {
													"id": 2963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2961,
														"name": "currentSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2559,
														"src": "4455:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2962,
														"name": "setTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2956,
														"src": "4468:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4455:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2964,
												"nodeType": "ExpressionStatement",
												"src": "4455:21:7"
											}
										]
									},
									"functionSelector": "c4d2e8d6",
									"id": 2966,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2959,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2958,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4438:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4438:9:7"
										}
									],
									"name": "setCurrentSetAmount",
									"nameLocation": "4391:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "setTotal",
												"nameLocation": "4419:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2966,
												"src": "4411:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4411:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4410:18:7"
									},
									"returnParameters": {
										"id": 2960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4448:0:7"
									},
									"scope": 3131,
									"src": "4382:100:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2977,
										"nodeType": "Block",
										"src": "4535:28:7",
										"statements": [
											{
												"expression": {
													"id": 2975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2973,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2565,
														"src": "4542:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2974,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2968,
														"src": "4551:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4542:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2976,
												"nodeType": "ExpressionStatement",
												"src": "4542:15:7"
											}
										]
									},
									"functionSelector": "02329a29",
									"id": 2978,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2971,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2970,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4525:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4525:9:7"
										}
									],
									"name": "pause",
									"nameLocation": "4497:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "4508:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2978,
												"src": "4503:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4503:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4502:13:7"
									},
									"returnParameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4535:0:7"
									},
									"scope": 3131,
									"src": "4488:75:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2989,
										"nodeType": "Block",
										"src": "4627:37:7",
										"statements": [
											{
												"expression": {
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2985,
														"name": "onlyAllowlisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2582,
														"src": "4634:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2986,
														"name": "_state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2980,
														"src": "4652:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4634:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2988,
												"nodeType": "ExpressionStatement",
												"src": "4634:24:7"
											}
										]
									},
									"functionSelector": "17dc10c4",
									"id": 2990,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2983,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2982,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4617:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4617:9:7"
										}
									],
									"name": "setOnlyAllowlisted",
									"nameLocation": "4578:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2980,
												"mutability": "mutable",
												"name": "_state",
												"nameLocation": "4602:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "4597:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2979,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4597:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4596:13:7"
									},
									"returnParameters": {
										"id": 2984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4627:0:7"
									},
									"scope": 3131,
									"src": "4569:95:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3019,
										"nodeType": "Block",
										"src": "4743:106:7",
										"statements": [
											{
												"body": {
													"id": 3017,
													"nodeType": "Block",
													"src": "4797:47:7",
													"statements": [
														{
															"expression": {
																"id": 3015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3009,
																		"name": "allowlist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "4806:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3013,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 3010,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2993,
																			"src": "4816:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 3012,
																		"indexExpression": {
																			"id": 3011,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "4826:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4816:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4806:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 3014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4832:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4806:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3016,
															"nodeType": "ExpressionStatement",
															"src": "4806:30:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3002,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2999,
														"src": "4770:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3003,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2993,
															"src": "4774:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 3004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4774:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4770:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3018,
												"initializationExpression": {
													"assignments": [
														2999
													],
													"declarations": [
														{
															"constant": false,
															"id": 2999,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4763:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 3018,
															"src": "4755:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2998,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4755:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3001,
													"initialValue": {
														"hexValue": "30",
														"id": 3000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4767:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4755:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 3007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4792:3:7",
														"subExpression": {
															"id": 3006,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2999,
															"src": "4792:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3008,
													"nodeType": "ExpressionStatement",
													"src": "4792:3:7"
												},
												"nodeType": "ForStatement",
												"src": "4750:94:7"
											}
										]
									},
									"functionSelector": "5b9e3ccf",
									"id": 3020,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2996,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2995,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4733:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4733:9:7"
										}
									],
									"name": "allowlistUsers",
									"nameLocation": "4679:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2993,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "4713:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "4694:28:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2991,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4694:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2992,
													"nodeType": "ArrayTypeName",
													"src": "4694:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4693:30:7"
									},
									"returnParameters": {
										"id": 2997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4743:0:7"
									},
									"scope": 3131,
									"src": "4670:179:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3049,
										"nodeType": "Block",
										"src": "4938:107:7",
										"statements": [
											{
												"body": {
													"id": 3047,
													"nodeType": "Block",
													"src": "4992:48:7",
													"statements": [
														{
															"expression": {
																"id": 3045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3039,
																		"name": "allowlist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "5001:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3043,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 3040,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3023,
																			"src": "5011:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 3042,
																		"indexExpression": {
																			"id": 3041,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3029,
																			"src": "5021:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5011:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5001:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 3044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5027:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5001:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3046,
															"nodeType": "ExpressionStatement",
															"src": "5001:31:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3032,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3029,
														"src": "4965:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3033,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3023,
															"src": "4969:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 3034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4969:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4965:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3048,
												"initializationExpression": {
													"assignments": [
														3029
													],
													"declarations": [
														{
															"constant": false,
															"id": 3029,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4958:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 3048,
															"src": "4950:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3028,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4950:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3031,
													"initialValue": {
														"hexValue": "30",
														"id": 3030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4962:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4950:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 3037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4987:3:7",
														"subExpression": {
															"id": 3036,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3029,
															"src": "4987:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3038,
													"nodeType": "ExpressionStatement",
													"src": "4987:3:7"
												},
												"nodeType": "ForStatement",
												"src": "4945:95:7"
											}
										]
									},
									"functionSelector": "142b0fbe",
									"id": 3050,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3026,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3025,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4928:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4928:9:7"
										}
									],
									"name": "removeUsersFromAllowlist",
									"nameLocation": "4864:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3023,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "4908:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 3050,
												"src": "4889:28:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3021,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4889:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3022,
													"nodeType": "ArrayTypeName",
													"src": "4889:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:30:7"
									},
									"returnParameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4938:0:7"
									},
									"scope": 3131,
									"src": "4855:190:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3110,
										"nodeType": "Block",
										"src": "5137:375:7",
										"statements": [
											{
												"assignments": [
													3059
												],
												"declarations": [
													{
														"constant": false,
														"id": 3059,
														"mutability": "mutable",
														"name": "supplyCurrent",
														"nameLocation": "5156:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 3110,
														"src": "5148:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3058,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5148:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3062,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3060,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "5172:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 3061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5172:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5148:37:7"
											},
											{
												"assignments": [
													3067
												],
												"declarations": [
													{
														"constant": false,
														"id": 3067,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5213:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 3110,
														"src": "5196:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3065,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5196:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3066,
															"nodeType": "ArrayTypeName",
															"src": "5196:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3075,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3072,
																	"name": "tokenOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3052,
																	"src": "5246:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3071,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "5236:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 3073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:21:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5222:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3068,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5226:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3069,
															"nodeType": "ArrayTypeName",
															"src": "5226:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 3074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5222:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5196:62:7"
											},
											{
												"assignments": [
													3077
												],
												"declarations": [
													{
														"constant": false,
														"id": 3077,
														"mutability": "mutable",
														"name": "counter",
														"nameLocation": "5277:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 3110,
														"src": "5269:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3076,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5269:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3079,
												"initialValue": {
													"hexValue": "30",
													"id": 3078,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5287:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5269:19:7"
											},
											{
												"body": {
													"id": 3106,
													"nodeType": "Block",
													"src": "5343:138:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3091,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3081,
																			"src": "5370:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3090,
																		"name": "ownerOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "5362:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 3092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:10:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3093,
																	"name": "tokenOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3052,
																	"src": "5376:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5362:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3105,
															"nodeType": "IfStatement",
															"src": "5358:112:7",
															"trueBody": {
																"id": 3104,
																"nodeType": "Block",
																"src": "5388:82:7",
																"statements": [
																	{
																		"expression": {
																			"id": 3099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3095,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3067,
																					"src": "5407:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 3097,
																				"indexExpression": {
																					"id": 3096,
																					"name": "counter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3077,
																					"src": "5414:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5407:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3098,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3081,
																				"src": "5425:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5407:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3100,
																		"nodeType": "ExpressionStatement",
																		"src": "5407:19:7"
																	},
																	{
																		"expression": {
																			"id": 3102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "5445:9:7",
																			"subExpression": {
																				"id": 3101,
																				"name": "counter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3077,
																				"src": "5445:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3103,
																		"nodeType": "ExpressionStatement",
																		"src": "5445:9:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3084,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3081,
														"src": "5319:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3085,
														"name": "supplyCurrent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3059,
														"src": "5323:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5319:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3107,
												"initializationExpression": {
													"assignments": [
														3081
													],
													"declarations": [
														{
															"constant": false,
															"id": 3081,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5312:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 3107,
															"src": "5304:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3080,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5304:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3083,
													"initialValue": {
														"hexValue": "30",
														"id": 3082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5316:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5304:13:7"
												},
												"loopExpression": {
													"expression": {
														"id": 3088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5338:3:7",
														"subExpression": {
															"id": 3087,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3081,
															"src": "5338:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3089,
													"nodeType": "ExpressionStatement",
													"src": "5338:3:7"
												},
												"nodeType": "ForStatement",
												"src": "5299:182:7"
											},
											{
												"expression": {
													"id": 3108,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3067,
													"src": "5498:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 3057,
												"id": 3109,
												"nodeType": "Return",
												"src": "5491:13:7"
											}
										]
									},
									"functionSelector": "ca8a7d5e",
									"id": 3111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOfTokenIds",
									"nameLocation": "5060:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3052,
												"mutability": "mutable",
												"name": "tokenOwner",
												"nameLocation": "5084:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 3111,
												"src": "5076:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5076:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5075:20:7"
									},
									"returnParameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3111,
												"src": "5119:16:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3054,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5119:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3055,
													"nodeType": "ArrayTypeName",
													"src": "5119:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5118:18:7"
									},
									"scope": 3131,
									"src": "5051:461:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3129,
										"nodeType": "Block",
										"src": "5564:61:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3124,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "5605:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_imiltestTwo_$3131",
																			"typeString": "contract imiltestTwo"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_imiltestTwo_$3131",
																			"typeString": "contract imiltestTwo"
																		}
																	],
																	"id": 3123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5597:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3122,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5597:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 3125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5597:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "5597:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3118,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 40,
																		"src": "5579:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5579:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5571:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 3116,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5571:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 3120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5571:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "5571:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5571:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3128,
												"nodeType": "ExpressionStatement",
												"src": "5571:48:7"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 3130,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3113,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5554:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5554:9:7"
										}
									],
									"name": "withdraw",
									"nameLocation": "5528:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5536:2:7"
									},
									"returnParameters": {
										"id": 3115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5564:0:7"
									},
									"scope": 3131,
									"src": "5519:106:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3132,
							"src": "205:5427:7",
							"usedErrors": [
								2327,
								2330,
								2333,
								2336,
								2339,
								2342,
								2345,
								2348,
								2351,
								2354,
								2357,
								2360,
								2363
							]
						}
					],
					"src": "32:5600:7"
				},
				"id": 7
			}
		}
	}
}